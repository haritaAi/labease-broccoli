{"version":3,"sources":["reportWebVitals.js","backend.js","auth/index.js","images/logo-white.png","components/menu.js","icons/FontawesomeIcons.js","components/TextError.jsx","admin/Signin.js","admin/Signup.js","context/CompanyContext.js","context/ClientContext.js","core/Home.js","auth/adminRoutes.js","context/OrderContext.js","icons/MaterialUiIcons.js","admin/clientApi/index.js","context/UserContext.js","components/DateAPI/index.js","components/searchComponent.js","components/OrderTable.jsx","core/subOrderMenu.jsx","core/Order.jsx","components/ClientNewTable.jsx","core/SubMenu.jsx","core/Client.jsx","components/Settings/Orders/Enclosure.jsx","components/Settings/Orders/Priorities.jsx","images/logo-print.jpg","components/print/Invoice/InvoiceHeader.jsx","components/print/Invoice/InvoiceTitle.jsx","components/print/Invoice/stylesheet.js","components/print/Invoice/InvoiceOrdeTableHeader.jsx","components/print/Invoice/InvoiceItemRow.js","components/print/Invoice/JobData.jsx","components/print/Invoice/InvoiceTotal.jsx","components/print/Invoice/InvoiceTaxTotal.jsx","components/print/Invoice/InvoiceGrandTotal.jsx","components/print/Invoice/InvoiceItemTable.jsx","components/print/Invoice/InvoiceBody.jsx","components/print/Invoice/InvoiceFooter.jsx","components/print/InvoiceTemplate.jsx","components/print/printAPI.js","components/print/ComponentToPrint.jsx","components/Settings/PrintSettings/PrintSettings.jsx","components/Settings/Clients/Categories.jsx","components/Settings/Clients/Pricebands.jsx","components/Settings/Clients/PaymentModes.jsx","core/Settings.jsx","auth/ForgotPassword.jsx","context/ProductContext.js","context/InvoiceContext.js","context/ReceiptContext.js","components/Tooth.jsx","components/TeethList.jsx","components/JobDisplay.jsx","components/DropdownMenu.jsx","components/ProductsTable.jsx","components/Teethselector.jsx","components/jobSummary.jsx","components/JobSet.jsx","components/ClientOrderTable.jsx","components/NewOrderForm.jsx","context/OfficeContext.js","components/Select.js","components/Modal.jsx","components/Client/NewAddressForm.jsx","components/Client/AddressTable.jsx","components/Client/AddDoc.jsx","components/Client/NewClientForm.jsx","components/Products/ProductsTable.jsx","components/Products/ProductForm.jsx","components/Products/ProductType.jsx","components/Products/Category.jsx","core/Products.jsx","core/Shipment.jsx","context/AdjustmentContext.js","components/Accounts/Invoice/productsApi.js","components/Accounts/Invoice/InvoicePrintIcon.jsx","components/Accounts/Invoice/InvoiceTable.jsx","components/Accounts/SubMenuAccounts.jsx","components/Accounts/Invoice/OrderActionTable.jsx","components/Accounts/Adjustment/AdjustmentForInvoice.jsx","components/PrintButton.jsx","components/Accounts/Invoice/InvoiceDetail.jsx","core/Accounts.jsx","components/Client/OrderPerClientTable.jsx","components/EmailButton.jsx","components/Client/ClientProfileSummary.jsx","components/Client/ClientProfileOrder.jsx","components/Client/ClientProfileInvoiceTable.jsx","components/Client/ClientProfilePage.jsx","components/Accounts/Receipt/PaymentInvoiceTable.jsx","components/Accounts/Receipt/InvoiceListTable.jsx","components/Accounts/Payment.jsx","components/Accounts/Invoice/OrderInInvoiceForm.jsx","components/Accounts/Invoice/NewInvoice.jsx","components/Accounts/Invoice/ClientOrderListTable.jsx","components/Accounts/Invoice/GenerateInvoices.jsx","components/Accounts/Invoice/AwaitPaymentInvoices.jsx","components/Accounts/Invoice/PaidInvoice.jsx","components/Accounts/Invoice/CancelledInvoice.jsx","components/Accounts/Invoice/Invoice.jsx","components/print/Receipt/ReceiptPrintIcon.jsx","components/Accounts/Receipt/ReceiptTable.jsx","components/Accounts/Receipt/Receipt.jsx","components/Accounts/Adjustment/AdjustmentTable.jsx","components/Accounts/Adjustment/NewAdjustment.jsx","components/Accounts/Adjustment/Adjustment.jsx","components/print/Receipt/ReceiptHeader.jsx","components/print/Receipt/ReceiptBody.jsx","components/print/Receipt/ReceiptTemplate.jsx","components/print/Receipt/ReceiptComponentToPrint.jsx","auth/ResetPassword.jsx","Routes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","setNewPassword","id","token","values","a","fetch","method","headers","Accept","body","stringify","response","status","catch","err","currentTab","history","path","location","pathname","color","withRouter","useState","handleMenu","item","document","querySelector","classList","toggle","className","src","logo","onClick","icon","size","user","name","style","next","removeItem","json","signout","push","role","to","library","add","faFont","faChevronDown","faBold","faItalic","faUnderline","faListUl","faListOl","faAlignLeft","faAlignRight","faAlignJustify","faAlignCenter","faLink","faFileImage","faVideo","faStop","faIndent","faUser","faEnvelope","faLock","faTrash","faPlus","faPhone","faHome","faMobile","faBars","faBox","faEdit","faInfoCircle","TextError","props","children","Signin","email","password","error","loading","didRedirect","setValues","errorAlert","setErrorAlert","handleChange","event","target","value","onSubmit","preventDefault","console","log","data","setTimeout","setItem","authenticate","alert","action","onChange","type","placeholder","initialValues","validationSchema","Yup","required","min","Signup","success","didredirect","formValues","formik","component","disabled","isValid","CompanyContext","React","createContext","displayName","ClientContext","Home","useContext","setClientSelected","setRedirect","setCurrentCompany","currentCompany","useEffect","map","company","index","width","AdminRoute","Component","rest","render","state","from","OrderContext","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","createClient","userId","client","Authorization","getClients","updateClient","getNextInvoiceSequence","getNextAdjustmentSequence","createOrder","order","updateOrder","getOrders","createProductType","productType","getProductTypes","updateProductType","deleteProductType","getProducts","updateProduct","product","deleteProduct","getCategories","createInvoice","invoice","getInvoices","updateInvoice","getUnpaidInvoices","getAllReceipts","createReceipt","receipt","updateReceipt","createAdjustment","adjustment","getAllAdjustments","deleteAdjustment","createEnclosure","enclosure","updateEnclosure","getAllEnclosures","deleteEnclosure","createPriority","priority","updatePriority","deletePriority","createClientCategory","category","updateClientCategory","createPriceband","priceband","updatePriceband","deletePriceband","createPaymentMode","mode","updatePaymentMode","deletePaymentMode","createUPI","upi","updateUPI","UserContext","getFormatDate","dateString","newDate","Date","year","getFullYear","month","getMonth","date","getDate","getDatePickerFormatDate","SearchComponent","onUpdate","searchField","dateFilter","setDateFilter","startDate","endDate","dateInterval","setDateInterval","filterdata","startTime","getTime","endTime","newData","filter","handleDates","val","sDate","temp","eDate","e","today","start","end","thisday","getDay","setDate","days","thisDay","setMonth","setYear","display","marginLeft","useStyles","makeStyles","root","backgroundColor","toolbar","caption","fontSize","selectIcon","select","actions","tableCell","padding","OrderTable","classes","setOrderSelected","orders","setOrders","setClients","setData","filteredData","setFilteredData","selectRows","setSelectedRows","message","setMessage","setAlert","searchVal","setSearchVal","handleStatus","length","forEach","newValues","_id","fetchOrders","handleDepartment","department","handleAssignTo","assignedTo","generateProductsList","products","list","job","units","join","handleInvoiceFilter","filterVal","isInvoiced","COLUMNS","title","field","maxWidth","cellStyle","border","rowData","textDecoration","orderNo","filtering","orderDate","Intl","DateTimeFormat","format","minWidth","defaultSort","clientId","toUpperCase","titile","align","currencySetting","currencyCode","fontWeight","lookup","New","Complete","Hold","Cancelled","duedate","toDateString","foeld","dateIn","filtered","columns","icons","components","Toolbar","workType","handleRepeatOrderSearch","handleRepairOrderSearch","Pagination","TablePagination","colSpan","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","onSelectionChange","selectedRows","options","pageSize","pageSizeOptions","paginationType","exportButton","exportAllData","exportFileName","columnsButton","actionsCellStyle","rowStyle","background","selection","showSelectAllCheckbox","showTextRowsSelected","headerStyle","Order","ClientNewTable","onEditClient","onOrderClient","onPaymentClient","clients","sorting","code","Tooltip","sx","addRowPosition","actionsColumnIndex","Client","address1","address2","loction","phoneO","phoneR","phoneM","formData","onClientSelect","setPathRedirect","fetchClients","Enclosure","update","enclosures","setEnclosures","validate","enc","getallEnclosures","trim","handleAddEnclosure","enclosureForm","handleUpdate","currentEnclosures","tempName","listStyleType","outlineWidth","handleUpdateEnc","handleDelete","enclosureTable","priorities","setPriorities","getallPriorities","prioritiesForm","currentPriorities","priorityTable","styles","StyleSheet","create","container","height","flexDirection","maxHeight","margin","justifyContent","leftSection","overflow","rigthSection","textAlign","paddingTop","imageContainer","image","fontWeigth","textStyle","paddingRight","InvoiceHeader","address","phone","paddingLeft","heading1","alignItems","InvoiceTitle","tableContainer","tableHeaders","borderBottom","tableRow","minHeight","alignContent","cell1","borderRight","flexBasis","flexGrow","cellOrderDate","cellPatient","cellListRate","cellOrderNo","cellProduct","cellTeeth","cellUnits","cellRateUnits","cellDiscount","cellTotalAmount","archLeft","archRight","archUp","archDown","borderTop","cell","InvoiceOrdeTableHeader","InvoiceItemRow","arch","rows","ordersList","patient","orderAmount","productsList","teethList","discount","stylesTotal","total","InvoiceTotal","invoiceTotal","disc","stylesTax","cellLeft","cellRight","celllower","InvoiceTaxTotal","taxrate","taxAmount","amount","InvoiceGrandTotal","grandTotal","words","ToWords","localeCode","converterOptions","currency","ignoreDecimal","ignoreZeroCurrency","doNotAddOnly","convert","InvoiceItemTable","totalunits","flex","heading","borderLeft","marginTop","InvoiceBody","setOrdersList","clientDetail","setClient","getInitialValues","salutation","paddingBottom","invoiceNo","invoiceDate","InvoiceFooter","gstin","section","fontStyle","font","InvoiceTemplate","addToPrint","undefined","ComponentToPrint","setInvoice","newInvoice","getToPrint","PrintSettings","Categories","categories","setCategories","getallClientCategories","categoryForm","currentCategory","categoryTable","Pricebands","pricebands","setPricebands","getallPricebands","pricebandForm","currentPriceband","pricebandTable","PaymentModes","setUpdate","paymentmodes","setPaymentmodes","vpa","setUpi","currentPaymentMode","setCurrentPaymentMode","showFrom","setShowForm","anchorEl","setAnchorEl","open","Boolean","description","relAc","relAcAccess","getallPaymentmodes","handleUpdatePaymentmode","handleUpiChange","getUPIsettings","handleClose","currentTarget","Popover","onClose","anchorOrigin","verticle","horizontal","handleSave","Settings","setCurrentTab","secondaryTab","setSecondaryTab","orderTabs","clientTabs","Priorities","ForgotPassword","checkEmail","ProductContext","InvoiceContext","ReceiptContext","Tooth","onSelectTooth","TeethList","selectorClass","division","handleSelectTooth","selectedTeeth","tooth","Math","random","JobDisplay","jobs","upperArch1","upperArch2","lowerArch3","lowerArch4","getArch","slice","setArch","toothIndex","newIndex","findIndex","teethArray","teethSelected","i","DropdownMenu","option1","option2","option3","onSelectOption","option","Button","vertical","transformOrigin","MenuItem","ProductsTable","onProductSelection","setProducts","fetchProducts","zIndex","onRowClick","row","position","Teethselector","onJobSave","onAddOrderCancel","onEditJob","productSelected","setProductSelected","productTypes","setProductTypes","setShowSlabPrice","setteethSelected","discount_type","price","slab1End","slab1Price","slab2End","slab2Price","slab3Price","setUpperArch1","setUpperArch2","setLowerArch3","setLowerArch4","handleAddRemoveTooth","toothState","prev","t","fetchProductTypes","getArchs","productId","newArch","handleToothSelection","toothId","newArray","handleToothReset","handleProductChange","handleJobEdit","productTypeSeleceted","p","productTypeCategory","calculateBill","handleJobSave","slabPrice","totalTeeth","parseInt","product_type","defaultValue","selected","confirm","slab1","s1price","slab2","s2price","slab3","s3price","JobSummary","onJobDelete","onJobEdit","onEditJobClick","borderRadius","JobSet","onConfirmOrder","onDelete","setJobs","ClientOrderTable","onClientSelection","NewOrderForm","useHistory","clientSelected","orderSelected","orderNumber","setOrderNumber","currentOrderTab","setCurrentOrderTab","updated","deliverytime","deliveryMethod","ordertime","shipment","additionalAmount","trayNo","shade1","shade2","shade3","shadeNote","articulatorTag","notes","priceBand","billTo","orderNotes","invoiceId","modelno","isUpdate","setIsUpdate","addProduct","setAddProduct","order_Date","handleOrderDate","due_Date","handleDueDate","dateIn_Date","handleDateIn","setDataFetch","dueDate","calculateTotalBill","jobset","totalBill","calculateFinalBill","handleOrderCancel","goBack","addTojobs","newJobs","addToJobCancel","editExistingJob","replaceIndex","j","deleteExistingJob","handleOrderSave","convertToSequnceString","num","newString","toString","numlength","getOrderSequence","sequence_val","readOnly","dateFormat","minDate","showYearDropdown","scrollableMonthYearDropdown","balance","htmlFor","IconButton","OfficeContext","Select","label","as","Modal","NewAddressForm","onAddressConfirm","onAddressCancel","currentLocation","area","city","pincode","contactPerson","workHours","route","AddressTable","addressBook","onAddressEdit","AddDoc","addDoc","onAddDocConfirm","onAddDocCancel","onAddDocEdit","cellno","designation","show","setShow","edit","setEdit","editIndex","setEditIndex","doc","handleEdit","NewClientForm","onCancel","redirect","setClientNumber","acmanager","creditLimit","dcireg","drcr","emailPrimary","emailSecondary","emailOption","isLab","paymentTerms","regDate","smsOption","taxEx","staff","errorMessage","setErrorMessage","setSuccess","placeOrder","setPlaceOrder","additionalDoc","setAdditionalDoc","isModalOpen","setisModalOpen","setAddressBook","setLocation","editLocation","setEditLocation","setCurrentLocation","clientNames","c","findCurrentClient","mobile","newClient","handleSubmit","checkedData","getElementById","checked","addDocSalutation","addDocName","getCodeSequence","onCloseModal","newLocation","oldAddressList","newDoc","docList","newAddress","for","remove","handleBillTo","go","onEditProduct","onDeleteProduct","ProductForm","productToEdit","warranty","cpDays","isSlab","slEnd1","s1Price","slEnd2","s2Price","s3Price","showSecondSlab","setShowSecondSlab","productTypeId","cheked","class","productTypeSelected","createProduct","ProductType","categoryId","selectedCategory","cat","verifyDelete","Category","fetchCategories","newCategory","setNewCategory","addNewCategory","setAddNewCategory","createCategory","Products","handleDeleteProduct","Shipment","AdjustmentContext","getTeethArchset","teeth","getIndex","InvoicePrintIcon","adjustments","makeInvoiceToPrint","adjustmentNo","invoiceOrdersList","includes","newOrderList","clientdata","adj","adjNo","ts","InvoiceTable","invoices","onInvoiceSelect","setInvoiceSelected","invoiceSelected","setSearchString","findClientSelected","handleSearch","OrderActionTable","rOrders","onRowSelect","showAction","getProductsList","search","AdjustmentForInvoice","onAdjustmentCancel","adjustmentNumber","setAdjustmentNumber","adjDate","adjType","getAdjustmentCode","invBalance","updateSelectedInvoice","updateClientBalance","PrintButton","onPrint","InvoiceDetail","fetchInvoices","setInvoiceOrdersList","showAdjustmentDetail","setShowAdjustmentDetail","taxOption","paid","cancelled","handleAdjustmentCancel","updatedClient","onCancelInvoice","Accounts","setInvoices","showDetail","setShowDetail","OrderPerClientTable","onNewPayment","setNewData","getNewTable","data1","data2","newDataStack","orderStack","calculateTotalOrderValue","calculateNumberOfOrders","ordersData","iconProps","EmailButton","ClientSummary","openBalance","drcrOption","ClientOrder","generateNewData","ClientProfileInvoiceTable","clientInvoices","setClientInvoices","localInvoiceSelected","setLocalInvoiceSelected","inv","clientInv","filterClientInvoices","ClientProfilePage","summary","setSummary","orderTab","setOrderTab","shipmentTab","setShipmentTab","invoiceTab","setInvoiceTab","paymentTab","setPaymentTab","ClientProfileSummary","ClientProfileOrder","PaymentInvoiceTable","onInvoiceApplyCancel","onCashApplied","outline","InvoiceListTable","receiptData","invoiceList","setInvoiceList","invoicesApplied","findInvoices","receiptNo","Payment","receiptSelected","showModal","setShowModal","receiptNumber","setReceiptNumber","totalAppliedInvoices","setTotalAppliedInvoices","balanceAmount","setBalanceAmount","setdrcr","datafetching","setDatafetching","paymentDate","paymentMode","paidtoAc","chequeNo","handleReceiptSave","amountApplied","calculateAmountApplied","validateReceipt","newBalance","calculateClientBalance","createInvoiceList","tempInvoice","applied","getLastInvoice","toBeSorted","sort","b","lastInvoice","onSelectClient","selectedClientId","selectedClient","handleModalClose","handleContinue","totalApplied","getReceiptCode","handleInvoiceApplyCancel","part1","part2","newList","totalAmount","newTemp","amountPaid","paidAmount","handleCashApplied","newReceipt","OrderInInvoiceForm","getProductList","productList","NewInvoice","invoiceNumber","setInvoiceNumber","showOrderTable","setShowOrderTable","showOrdersSelectedTable","setShowOrdersSelectedTable","ordersSelected","setOrdersSelected","clientOrders","setClientOrders","newClientOrders","onAddExistingOrders","clientOrdersArray","paymentDueDate","getInvoiceCode","selClient","handleRemoveFromInvoiceRowSelect","rowsSelected","newAmount","ordersArray","handleAddToInvoiceRowSelect","o","onSaveInvoice","oList","createOrdersList","cBalance","ClientOrderListTable","clientOrderList","getProductString","due","orderDetail","orderList","detailPanel","GenerateInvoices","newOrders","setNewOrders","setClientOrderList","finalList","setFinalList","currentInvoiceNumber","newOrderSet","getUnivoicedOrders","clientList","tempClient","AwaitPaymentInvoices","currentInvoice","setCurrentInvoice","fetchUnpaidInvoices","PaidInvoice","fetchPaidInvoices","CancelledInvoice","fetchCancelledInvoices","Invoice","ReceiptPrintIcon","addToPrintReceipt","ReceiptTable","receipts","onReceiptSelect","setReceiptSelected","handleClick","Receipt","receiptsCancelled","setReceiptsCancelled","allReceipts","setAllReceipts","setReceipts","handleReceiptSelect","findAllReceipts","findCancelledReceipts","AdjustmentTable","adjustmentSelected","setAdjustmentSelected","setAdjustments","fetchAdjustments","cursor","onDeleteAdjustment","NewAdjustment","currentInvoices","setCurrentInvoices","findInvoicesForThisClient","Adjustment","ReceiptHeader","web","marginVertical","bold","amnt","ReceiptBody","rDate","ReceiptTemplate","Page","ReceiptComponentToPrint","setReceipt","getToPrintReceipt","ResetPassword","npswd","cpswd","resetPassword","match","params","localeCompare","origin","parent","replace","Routes","pathRedirect","fetchReceipts","performRedirect","basename","exact","Provider","onOrderSelect","ReactDOM"],"mappings":"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","file":"static/js/main.755d18fa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const API=process.env.REACT_APP_BACKEND","import {API} from '../backend';\r\n\r\n\r\nexport const signup = user => {\r\n    \r\n    return  fetch(`${API}/signup`,{\r\n        method:\"POST\",\r\n        headers : {\r\n            Accept : \"application/json\",\r\n            \"Content-Type\" : \"application/json\"\r\n        \r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const signin = user => {\r\n  \r\n    return  fetch(`${API}/signin`,{\r\n        method:\"POST\",\r\n        headers : {\r\n            Accept : \"application/json\",\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const authenticate = (data,next) => {\r\n    if(typeof window !== \"undefined\"){\r\n         localStorage.setItem(\"jwt\",JSON.stringify(data));\r\n         next();\r\n    }\r\n};\r\n\r\n\r\nexport const signout = next => {\r\n    if(typeof window !== \"undefined\"){\r\n        localStorage.removeItem(\"jwt\");\r\n        \r\n        next();\r\n     return fetch(`${API}/signout`,{\r\n            method : \"GET\"\r\n        })\r\n        .then(response => {\r\n            return response.status(200).json(\"Signed out successfully\")\r\n        })\r\n        .catch(err => {return err});\r\n   }\r\n};\r\nexport const isAuthenticated = () => {\r\n       if(typeof window == \"undefined\")\r\n            return false;\r\n\r\n        if(localStorage.getItem(\"jwt\"))\r\n            return JSON.parse(localStorage.getItem(\"jwt\"));\r\n            \r\n         else return false;\r\n};    \r\nexport const resetpswd = email => {\r\n    \r\n   return fetch(`${API}/resetpswd`,{\r\n        method : 'POST',\r\n        headers:{\r\n             Accept : \"application/json\",\r\n            \"Content-Type\" : \"application/json\"\r\n    \r\n    },\r\n    body: JSON.stringify(email)\r\n       })\r\n       .then(response => {\r\n             if(response.status === 400) window.alert(\"this email does not exist\")\r\n             return response.json({error : \"error\"})\r\n         })\r\n        .catch(err => {\r\n            console.log(\"Error :\",err)\r\n            return err\r\n        });\r\n            \r\n}\r\nexport  const setNewPassword = async (id,token,values) => {\r\n    \r\n  return await fetch(`${API}/resetpswd/${id}/${token}`,{\r\n            method: 'POST',\r\n            headers:{\r\n                Accept : \"application/json\",\r\n                \"Content-Type\" : \"application/json\" \r\n            },\r\n            body:JSON.stringify(values)\r\n    })\r\n    .then( response => {\r\n        \r\n        return response.status\r\n    })\r\n    .catch(err => {\r\n        return err\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/logo-white.b9de9241.png\";","import React, {Fragment,useState} from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport '../css/menu.css'\r\nimport { isAuthenticated ,signout} from '../auth';\r\nimport logo  from '../images/logo-white.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst currentTab = (history, path) => {\r\n    \r\n   if(history.location.pathname === path) return {color: \"#0b8df7\"};\r\n   else return {color:\"#FFFFFF\"};\r\n\r\n};\r\n\r\nconst Menu = ({history,path}) => {\r\n \r\n  \r\n   const [menuTab,setCurrentTab] = useState(null)\r\n  \r\n   const handleMenu = (item) => {\r\n    if(item === 'menu'){     \r\n         \r\n       const userMenu = document.querySelector(\".collapsible_menu\");\r\n       userMenu.classList.toggle('collapsible_expanded');\r\n    }\r\n    else if(item === 'user'){\r\n   \r\n      const list = document.querySelector(\".collapsible_user\");\r\n      list.classList.toggle('collapsible_expanded');\r\n    }\r\n   }\r\n    return (\r\n        \r\n         <div className = \"menu container-fluid\">\r\n            <div className = \"menu-left\">         \r\n             <div className='logo-container'>\r\n\r\n              <img  className = 'logo-img ' src = {logo} />             \r\n             </div>\r\n            \r\n      \r\n            </div>\r\n            <div className = \"menu-left \">\r\n               <div className=\"user_list_container\">\r\n                           <ul className = 'nav-list'>   \r\n                     \r\n                     <Fragment>\r\n                        <div className = 'user-logo'>\r\n                           <div className = 'avatar' onClick = {()=>handleMenu('user')}>\r\n                                 <FontAwesomeIcon icon = 'user' size = '1x' color = '#fff'/>\r\n                           </div>  \r\n                           {isAuthenticated() && isAuthenticated().user.name && <div style = {{color:\"#FFFFFF\"}} \r\n                                                                                     className = \"fs-4\">{isAuthenticated().user.name}</div>    }  \r\n                     </div>\r\n                     </Fragment>\r\n                     \r\n                  <div className=\"collapsible_user\">\r\n                           \r\n                        { isAuthenticated() && <Fragment>\r\n                           <div className = \"nav-link\" \r\n                              style = {{color:\"#FFFFFF\"}} \r\n                              onClick = {() => {signout(() => {history.push(\"/\")})}}>Sign out</div>\r\n                        </Fragment>\r\n\r\n                        }\r\n                      \r\n                  </div>\r\n                  </ul>\r\n               </div>\r\n           \r\n\r\n\r\n\r\n                     <div className = 'menu_list_container'>\r\n                          \r\n                                    \r\n                                    \r\n                                 \r\n                                    {isAuthenticated() && isAuthenticated().user.role === 1 && \r\n\r\n                                             \r\n                                          (<Fragment> \r\n                                              <div className=\"nav__toggler mt-3\" onClick = {()=>handleMenu('menu')}>\r\n                                                <FontAwesomeIcon  icon = 'bars' color = '#fff' size = '2x'/>\r\n                                            </div>\r\n                        \r\n                                        <ul className = 'nav-list collapsible_menu'>\r\n                                           <li style = {{color:\"#FFFFFF\"}}><Link  style = {currentTab(history,\"/\")}  to = '/' className = \"nav-link\"   >Home</Link></li>  \r\n                                          <li style = {{color:\"#FFFFFF\"}}><Link   style = {currentTab(history,\"/client\")}                                                                                \r\n                                                                                 to = '/client'\r\n                                                                                 className = \"nav-link\" \r\n                                                                                >Client</Link></li>\r\n                                          <li  style = {{color:\"#FFFFFF\"}}><Link style = {currentTab(history,\"/order\")}\r\n                                                                                 to = '/order'                                                                                 \r\n                                                                                 className = \"nav-link\" \r\n                                                                               >Order</Link></li>\r\n                                           <li  style = {{color:\"#FFFFFF\"}}><Link style = {currentTab(history,\"/products\")}\r\n                                                                                 to = '/products'  \r\n                                                                                 className = \"nav-link\" \r\n                                                                                 >Products</Link></li>                                    \r\n                                          {/* <li  style = {{color:\"#FFFFFF\"}}><Link style = {currentTab(history,\"/shipment\")}\r\n                                                                                 to = '/shipment'  \r\n                                                                                 className = \"nav-link\" \r\n                                                                                 >Shipment</Link></li> */}\r\n                                          <li  style = {{color:\"#FFFFFF\"}}><Link style = {currentTab(history,\"/accounts\")}  \r\n                                                                                 className = \"nav-link\"\r\n                                                                                 to = '/accounts' \r\n                                                                                 >Accounts</Link></li>\r\n                                          <li  style = {{color:\"#FFFFFF\"}}><Link style = {currentTab(history,\"/settings\")}  \r\n                                                                                 className = \"nav-link\"\r\n                                                                                 to = '/settings' \r\n                                                                                 >Settings</Link></li>\r\n\r\n                                               </ul>                                                         \r\n                                          </Fragment>\r\n                                          )}   \r\n                                \r\n                              \r\n                           \r\n                           \r\n                  </div>\r\n             \r\n\r\n            </div>\r\n            \r\n         </div>\r\n        \r\n      );\r\n}\r\n \r\nexport default withRouter(Menu);","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faFont,faChevronDown,\r\n        faBold,faItalic,faUnderline,\r\n        faListUl,faListOl,faAlignLeft,\r\n        faAlignRight,faAlignJustify,faAlignCenter,\r\n        faLink,faFileImage,faVideo,faStop,faIndent,\r\n         faUser,faEnvelope,faLock,faTrash ,faPlus,faPhone,\r\n         faHome,faMobile,faBars,faBox,faEdit,faInfoCircle} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faFont,faChevronDown,faBold,faItalic,\r\n            faUnderline,faListUl,faListOl,\r\n            faAlignLeft,faAlignRight,faAlignJustify,faAlignCenter,\r\n            faLink,faFileImage,faVideo,faStop,faIndent,faUser,\r\n            faEnvelope,faLock,faTrash,faPlus,faPhone,faHome,faMobile,\r\n            faBars,faBox,faEdit,faInfoCircle)\r\n\r\n","\r\nimport React from 'react'\r\n\r\nfunction TextError(props) {\r\n    return (\r\n        <div className = \"error mt-1\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError\r\n","import React, { useState } from 'react';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport {signin,authenticate,isAuthenticated} from '../auth';\r\nimport Menu from '../components/menu';\r\nimport '../icons/FontawesomeIcons';\r\n\r\nimport TextError from '../components/TextError';\r\n\r\n\r\n\r\nconst Signin = () => {\r\n\r\n    const [values,setValues] = useState({\r\n       \r\n        email : \"\",\r\n        password : \"\",\r\n        error : \"\",\r\n        loading : false,\r\n        didRedirect : false\r\n    });\r\n         const [errorAlert,setErrorAlert] = useState(false)\r\n\r\n    const {email,password,error,loading,didRedirect} = values;\r\n    \r\n    \r\n    const handleChange = name => event =>  {\r\n        setValues({...values, error : false, [name] : event.target.value});\r\n    };\r\n    const onSubmit = event => {\r\n       \r\n        event.preventDefault();\r\n        setValues({ ...values,\r\n                error : false,\r\n            loading : true  });\r\n        signin({email,password})\r\n              .then( data => {\r\n                  if(data.error){\r\n                      setValues({ ...values,error : data.error, loading : false  });\r\n                      \r\n                      setErrorAlert(true)\r\n                      setTimeout(()=>setErrorAlert(false),2000);\r\n                  } \r\n                  else authenticate(data,() => {\r\n                      \r\n                      setValues({...values,didRedirect : true,loading:false});\r\n                      \r\n                  });\r\n              })\r\n              .catch(err => {\r\n                           if(err){\r\n                              \r\n                               setErrorAlert(true)\r\n                               setTimeout(()=>setErrorAlert(false),2000);\r\n                           }          \r\n                           setValues({error: err, loading : false})\r\n                           window.alert(\"Error singin in ..\")\r\n                        });\r\n    };\r\n    const performRedirect = () => {\r\n         if(didRedirect){\r\n            \r\n            return <Redirect to = \"/\"/>;\r\n         }\r\n         if(isAuthenticated()) return <Redirect to = \"/\"/>;\r\n    };\r\nconst signInForm = () => {\r\n      return (     \r\n        <div className = \"container-signin fs-3\">\r\n          Login\r\n           <form action=\"\">\r\n              \r\n                <div className=\"form-group\">\r\n                         \r\n                   <input onChange = {handleChange(\"email\")} \r\n                          value = {email} \r\n                          className = \"form-control\" \r\n                          type=\"text\"\r\n                          placeholder = \"Username\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                           \r\n                   <input onChange = {handleChange(\"password\")}\r\n                          value = {password} \r\n                          className = \"form-control\" \r\n                          type=\"password\"\r\n                          placeholder = \"password\"/>\r\n                </div>\r\n                {errorAlert && <TextError className = 'text-danger'>email or password does not match</TextError>}\r\n                <div className = 'd-flex flex-row justify-content-between align-items-end'>\r\n                \r\n                 <button  onClick = {onSubmit} \r\n                         className =\"my-btn btn-rounded \">Login</button>\r\n                 <Link  to = \"/reset-pswd\" className = '  text-primary fs-4 paswd-link'>Forgot password </Link>        \r\n               </div> \r\n             </form>            \r\n          \r\n        </div> \r\n    );\r\n    };\r\n   \r\n    return ( \r\n        <div>\r\n           <Menu/>\r\n            {loading &&  <div className='fs-3 text-center'>Loading...</div>}\r\n            {error && <div className = 'fs-3 text-center text-danger'>User name or password does not match</div>}\r\n            {signInForm()}   \r\n            {performRedirect()}  \r\n            {/* <p className = \"text-center \">Not registered yet! <Link to = \"/signup\">Sign Up</Link> now!! </p> */}\r\n          \r\n            {/* <p className = \"text-white text-center\">{JSON.stringify(values)}</p> */}\r\n         </div>\r\n     );\r\n}\r\n \r\nexport default Signin;\r\n","import React, { useState } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Menu from '../components/menu';\r\nimport { signin, signup ,isAuthenticated,authenticate} from '../auth';\r\nimport '../icons/FontawesomeIcons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {Formik,Form,Field,ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport TextError from '../components/TextError';\r\n\r\nconst initialValues = {\r\n    name : \"\",\r\n    email : \"\",\r\n    password : \"\",\r\n}\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    name : Yup.string().required('Name is required').min(3),\r\n    email : Yup.string().email('Invalid email format').required('Email is required'),\r\n    password: Yup.string().required('password is required').min(5)\r\n})\r\nconst Signup = () => {\r\n    \r\n       const [errorAlert,setErrorAlert] = useState(false)\r\n         \r\n        const [values, setValues] = useState({         \r\n         \r\n          error: \"\",\r\n          success : false,\r\n         didredirect : false\r\n        }\r\n        );\r\n        const {error,success,didRedirect} = values;\r\n        \r\n        const onSubmit = formValues => {\r\n           \r\n            setValues({...values,error : false});\r\n              console.log(\" local submit button called : values are ::\",formValues)\r\n           const {name,email,password} = formValues;\r\n            signup({name,email,password})\r\n                  .then( data => { console.log(\"Data recieved : \",data)\r\n                      if(data.error){\r\n                        \r\n                        setValues({...values,error : data.error,success : false})\r\n                        setErrorAlert(true)\r\n                        setTimeout(()=>setErrorAlert(false),2000);\r\n                      } \r\n                       else{   console.log(\"sign up successfu;;y\")\r\n                                setValues({...values,                                          \r\n                                          error: \"\",\r\n                                          success : true,didRedirect : true})  ;             \r\n                          \r\n                       }\r\n                     })\r\n                  .catch(err => {\r\n\r\n                    console.log(\"error in signup\")\r\n                    setErrorAlert(true)\r\n                    setTimeout(()=>setErrorAlert(false),2000);\r\n                  }\r\n                    );\r\n      };\r\n      const performRedirect = () => {\r\n        if(didRedirect){\r\n           \r\n           return <Redirect to = \"/signin\"/>;\r\n        }\r\n        if(isAuthenticated()) return <Redirect to = \"/signin\"/>;\r\n   };\r\n \r\n       \r\n\r\n    const signupForm = () => {\r\n\r\n     return ( \r\n                \r\n                <div className = \"container-signin \">\r\n                     Sign up\r\n                    <Formik initialValues = {initialValues}\r\n                            validationSchema = {validationSchema}\r\n                            onSubmit = {onSubmit}>          \r\n                    {formik => {\r\n                        \r\n                    return (\r\n                       \r\n                        <Form >\r\n                          <div className = \"form-group \">\r\n                          \r\n                               {/* <div className=\"icon-sign\">\r\n                               <FontAwesomeIcon icon = \"user\"\r\n                                                 color = '#5c5c5c'/>\r\n                               </div> */}\r\n                          \r\n                            <Field className = \"form-control\" \r\n                                    name = 'name'\r\n                                    type=\"text\"\r\n                                    placeholder = \"Name\"\r\n                                   />\r\n                            </div>\r\n                              <ErrorMessage  name = 'name' component = {TextError}/>\r\n                            <div className=\"form-group\">\r\n                            {/* <div className=\"icon-sign\">\r\n                               <FontAwesomeIcon icon = \"envelope\"\r\n                                                 color = '#5c5c5c'/>\r\n                               </div> */}\r\n                                <Field className = \"form-control\" \r\n                                       name = 'email' \r\n                                       type=\"email\"\r\n                                       placeholder = \"email\"\r\n                                     />\r\n                                        \r\n                            </div>\r\n                            <ErrorMessage name = 'email' component = {TextError}/>\r\n                            <div className=\"form-group\">\r\n                            {/* <div className=\"icon-sign\">\r\n                               <FontAwesomeIcon icon = \"lock\"\r\n                                                 color = '#5c5c5c'/>\r\n                               </div> */}\r\n                            <Field className = \"form-control\"  \r\n                                    name = 'password' \r\n                                    type=\"password\"\r\n                                    placeholder = \"password\"\r\n                                    />\r\n                                   \r\n                            </div>\r\n                            <ErrorMessage name = 'password' component = {TextError}/>    \r\n                            {errorAlert && <TextError >Error in sign up</TextError>}                        \r\n                            <button className=\"my-btn btn-rounded\" \r\n                                    onClick = {() =>onSubmit(formik.values)}\r\n                                    disabled = {!formik.isValid}\r\n                                    >Submit</button>\r\n\r\n                        </Form>)\r\n                      }    \r\n                    }           \r\n                     </Formik>\r\n                    </div>\r\n                    );\r\n\r\n\r\n\r\n         };\r\n\r\n       \r\n  \r\n   \r\n\r\n    return ( \r\n        <>\r\n        <Menu/>\r\n         \r\n           {signupForm()}\r\n           {performRedirect()} \r\n       </> \r\n     );\r\n}\r\n \r\nexport default Signup;\r\n","import React from 'react';\r\n\r\nconst CompanyContext = React.createContext();\r\nCompanyContext.displayName = 'CompanyContext'\r\nexport default CompanyContext;","import React from 'react';\r\n\r\nconst ClientContext = React.createContext();\r\nClientContext.displayName = 'ClientContext'\r\nexport default ClientContext;","import React ,{useEffect,useContext}from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Menu from '../components/menu'\r\nimport '../css/home.css'\r\n\r\nimport CompanyContext from '../context/CompanyContext'\r\n\r\nimport ClientContext from '../context/ClientContext';\r\n\r\n\r\nfunction Home() {\r\n\r\n    \r\n    const {setClientSelected,setRedirect} = useContext(ClientContext)\r\n    const {currentCompany,setCurrentCompany} = useContext(CompanyContext) \r\n    const companies = [\"Evoq Digital Dental Solutions\",\"Evoq Dental Studio\",\"Evoq Digital Dental Solutionss\"]\r\n     \r\nuseEffect(()=>{\r\n  setClientSelected(null)\r\n  setRedirect(false)\r\n},[])\r\n  \r\n    \r\n\r\n    return (\r\n               \r\n                <div className = ''>\r\n                   <Menu />                  \r\n                   <div className=\"\">\r\n\r\n                       <div className=\" d-flex  flex-wrap   \">\r\n                      { companies.map((company,index) =>  \r\n                            <div className=\" border border-secondary \" key = {index}>\r\n                            <div className=\"d-flex flex-column flex-sm-row  company-container  company-background\"\r\n                                onClick = {()=> console.log(`Hi , this is ${company}`)}\r\n                                >\r\n                                <div className=\"co-12 col-md-4 p-1\">\r\n                                        <h1 className = \"company-heading\">{company}</h1>\r\n                                      <div  >\r\n                                        <Link  className = 'btn btn-info fs-4 my-1' \r\n                                               to = '/client/newClient'\r\n                                               style = {{width : 120}}\r\n                                               onClick = {()=> setCurrentCompany(index)}\r\n                                                                ><div>New Client</div></Link> \r\n                                      </div>\r\n                                      <div >\r\n                                        <Link  className = 'btn btn-info fs-4 my-1' style = {{width : 120}} to = '/order/neworder' ><div>New Order</div></Link> \r\n                                      </div>\r\n                                      <div>\r\n                                        <Link  className = 'btn btn-info fs-4 my-1' style = {{width : 120}} to = '/payment' ><div>New Payment</div></Link> \r\n                                      </div>\r\n                                    </div>     \r\n                                    {/* <div className=\"col-12 col-md-8 border border-dark rounded text-center\" >\r\n                                        <h1> summary</h1> \r\n                                    </div> */}\r\n\r\n                            </div>\r\n\r\n                            </div>\r\n                          )}\r\n  \r\n                           </div>\r\n                   </div>\r\n                \r\n                </div>\r\n              \r\n              \r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {isAuthenticated} from './index';\r\n\r\n\r\nconst AdminRoute = ({component : Component,...rest}) => {\r\n    return ( \r\n        <Route {...rest}\r\n                render = {props =>\r\n                      isAuthenticated() && isAuthenticated().user.role ===1 ? \r\n                                (<Component {...props}/>) :\r\n                                        <Redirect to ={{pathname : \"/signin\",\r\n                                                        state : {from : props.location}\r\n                                                    }}\r\n                                          />           \r\n                                          }>\r\n        </Route>\r\n     );\r\n}\r\n \r\nexport default AdminRoute;","import React from 'react';\r\n\r\nconst OrderContext = React.createContext();\r\nOrderContext.displayName = 'OrderContext'\r\nexport default OrderContext;","import { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\n const  tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n   \r\n  };\r\n\r\n\r\n  export default tableIcons","import {API} from '../../backend'\r\n\r\n\r\n\r\n\r\n\r\nexport const createClient = async (userId,token,client) => {\r\n\r\n   \r\n       \r\n      return await  fetch(`${API}/clients/create/${userId}`,{\r\n            method : \"POST\",\r\n            headers : {\r\n                     \r\n                \"content-Type\" : \"application/json\",             \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body:JSON.stringify(client) \r\n          }).then(response => {\r\n                \r\n                return response;\r\n            })\r\n            .catch(err =>{\r\n              \r\n                return (err)\r\n            } )\r\n         \r\n};\r\n\r\nexport const getClients = (userId,token) => {\r\n    \r\n    \r\n    return fetch(`${API}/clients/${userId}`,{\r\n        method : 'GET',\r\n        headers:{\r\n            'Content-Type' : 'application/json',\r\n            Authorization : `Bearer ${token}`\r\n\r\n        }\r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n}\r\n\r\nexport const updateClient = async (userId,token,client) => {\r\n\r\n   \r\n       return  await fetch(`${API}/update/clients/${userId}`,{\r\n           method: \"PUT\",\r\n           headers : {\r\n               Accept : 'application/json',\r\n               \"content-Type\" : \"application/json\",  \r\n               Authorization : `Bearer ${token}`\r\n           },\r\n           body : JSON.stringify(client)\r\n       }).then(response => {return response})\r\n         .catch(err => {return(err)})\r\n}\r\n\r\nexport const deleteClient = async (clientId,userId,token) => {\r\n \r\n   return await fetch(`${API}/clients/${userId}`,{\r\n       method:\"DELETE\",\r\n       headers :{\r\n           Authorization : `Bearer ${token}`\r\n       }\r\n   }).then(response => {return response.json()})\r\n     .catch(err=> console.log(err))\r\n}\r\n\r\nexport const getNextOrderSequence = () => {\r\n    return fetch(`${API}/ordercounter`,{\r\n        method : 'GET',\r\n        headers:{\r\n            'Content-Type' : 'application/json',\r\n            \r\n        }\r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n\r\n} \r\nexport const getNextClientSequence = () => {\r\n    return fetch(`${API}/clientcounter`,{\r\n        method : 'GET',\r\n        headers:{\r\n            'Content-Type' : 'application/json',\r\n            \r\n        }\r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n\r\n} \r\nexport const getNextInvoiceSequence = () => {\r\n\r\n    return fetch(`${API}/invoicecounter`,{\r\n        method : 'GET',\r\n        headers:{\r\n            'Content-Type' : 'application/json',\r\n            \r\n        }\r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n\r\n} \r\nexport const getNextReceiptSequence = () => {\r\n\r\n    return fetch(`${API}/receiptcounter`,{\r\n        method : 'GET',\r\n        headers:{\r\n            'Content-Type' : 'application/json',\r\n            \r\n        }\r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n\r\n} \r\nexport const getNextAdjustmentSequence = () => {\r\n    \r\n    return fetch(`${API}/adjustmentcounter`,{\r\n        method : 'GET',\r\n        headers:{\r\n            'Content-Type' : 'application/json',\r\n        }\r\n    }).then( response => {       \r\n            return response.json()\r\n        })\r\n       .catch(err=>{return(err)}) \r\n   \r\n}\r\n\r\nexport const createOrder = async (userId,token,order) => {\r\n    \r\n       \r\n    return await  fetch(`${API}/orders/create/${userId}`,{\r\n          method : \"POST\",\r\n          headers : {\r\n              Accept : 'application/json',           \r\n              \"content-Type\" : \"application/json\",             \r\n              Authorization : `Bearer ${token}`\r\n          },\r\n          body:JSON.stringify(order) \r\n        }).then(response => {\r\n              \r\n              return response;\r\n          })\r\n          .catch(err =>{\r\n            \r\n              return (err)\r\n          } )\r\n       \r\n};\r\n\r\nexport const updateOrder = (userId,token,order) => {\r\n\r\n   \r\n    return fetch(`${API}/update/orders/${userId}`,{\r\n        method: \"PUT\",\r\n        headers : {\r\n            Accept : 'application/json',\r\n            \"content-Type\" : \"application/json\",  \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body : JSON.stringify(order)\r\n    }).then(response => {return response})\r\n      .catch(err => {return(err)})\r\n}\r\n\r\nexport const getOrders = (userId,token) => {\r\n    \r\n    return fetch(`${API}/orders`,{\r\n        method : 'GET',\r\n        headers:{\r\n            Authorization : `Bearer ${token}`\r\n\r\n        }\r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n}\r\nexport const deleteOrder = async (orderId,userId,token) => {\r\n \r\n    return await fetch(`${API}/orders/${userId}`,{\r\n        method:\"DELETE\",\r\n        headers :{\r\n            Authorization : `Bearer ${token}`\r\n        }\r\n    }).then(response => {return response.json()})\r\n      .catch(err=> console.log(err))\r\n }\r\n \r\n\r\n\r\n\r\n\r\n\r\nexport const  createProductType  = async (userId,token,productType) => {\r\n  \r\n       \r\n    return await fetch(`${API}/producttypes/create/${userId}`,{\r\n          method : \"POST\",\r\n          headers : {\r\n                   \r\n              \"content-Type\" : \"application/json\",             \r\n              Authorization : `Bearer ${token}`\r\n          },\r\n          body:JSON.stringify(productType) \r\n        }).then(response => {\r\n              \r\n              return response;\r\n          })\r\n          .catch(err =>{\r\n            \r\n              return (err)\r\n          } )\r\n}\r\n\r\nexport const getProductTypes = () => {\r\n\r\n\r\n    return fetch(`${API}/producttypes`,{\r\n        method : 'GET',\r\n        // headers:{\r\n        //     'Content-Type' : 'application/json',\r\n        //     }\r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n}\r\n\r\nexport const updateProductType = async (userId,token,productType) => {\r\n\r\n    // console.log(\"Product in index : \",productType)\r\n    return await  fetch(`${API}/producttypes/update/${userId}`,{\r\n        method: \"PUT\",\r\n        headers : {\r\n            Accept : 'application/json',\r\n            \"content-Type\" : \"application/json\",  \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body : JSON.stringify(productType)\r\n    }).then(response => {return response})\r\n      .catch(err => {return(err)})\r\n}\r\n\r\nexport const deleteProductType =async (productType,userId,token) => {\r\n    \r\n \r\n    return  await fetch(`${API}/producttypes/delete/${userId}`,{\r\n        method:\"DELETE\",\r\n        headers :{\r\n            Accept : 'application/json',\r\n            \"content-Type\" : \"application/json\", \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body : JSON.stringify(productType)\r\n    }).then(response => {return response.json()})\r\n      .catch(err=> console.log(err))\r\n }\r\n \r\n export const createProduct = (userId,token,product) => {\r\n     console.log(\"Product Received in index to save \",product)\r\n\r\n     return  fetch(`${API}/products/create/${userId}`,{\r\n        method : \"POST\",\r\n        headers : {\r\n                 \r\n            \"content-Type\" : \"application/json\",             \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify(product) \r\n      }).then(response => {\r\n            \r\n            return response;\r\n        })\r\n        .catch(err =>{\r\n          \r\n            return (err)\r\n        } )\r\n\r\n }\r\n export const getProducts = async (userId,token) => {\r\n \r\n     return await fetch(`${API}/products/${userId}`,{\r\n         method : 'GET',\r\n         headers:{\r\n             'Content-Type' : 'application/json',\r\n             Authorization : `Bearer ${token}`\r\n \r\n         }\r\n \r\n     }).then(response => {\r\n                 return response.json()\r\n             })\r\n       .catch(err => {return(err)})\r\n     \r\n  }\r\n \r\nexport const updateProduct =async (userId,token,product) => {\r\n    \r\n\r\n    return await fetch(`${API}/products/update/${userId}`,{\r\n       method : \"PUT\",\r\n       headers : {\r\n            Accept : 'application/json',                \r\n           \"content-Type\" : \"application/json\",             \r\n           Authorization : `Bearer ${token}`\r\n       },\r\n       body:JSON.stringify(product) \r\n     }).then(response => {\r\n           \r\n           return response;\r\n       })\r\n       .catch(err =>{\r\n         \r\n           return (err)\r\n       } )\r\n    }\r\n\r\n    export const deleteProduct =async (userId,token,product) => {\r\n    \r\n        return await  fetch(`${API}/products/delete/${userId}`,{\r\n            method:\"DELETE\",\r\n            headers :{\r\n                Accept : 'application/json',\r\n                \"content-Type\" : \"application/json\", \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body : JSON.stringify(product)\r\n        }).then(response => {return response.json()})\r\n          .catch(err=> console.log(err))\r\n\r\n    }\r\n\r\n\r\n\r\n    export const getCategories = () => {\r\n        return fetch(`${API}/category`,{\r\n            method : 'GET',\r\n            // headers:{\r\n            //     'Content-Type' : 'application/json',\r\n            //     }\r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    } \r\n    export const createCategory = (userId,token,category) => {\r\n       \r\n   \r\n        return  fetch(`${API}/category/create`,{\r\n           method : \"POST\",\r\n           headers : {\r\n                    \r\n               \"content-Type\" : \"application/json\",             \r\n               Authorization : `Bearer ${token}`\r\n           },\r\n           body:JSON.stringify(category) \r\n         }).then(response => {\r\n               \r\n               return response;\r\n           })\r\n           .catch(err =>{\r\n             \r\n               return (err)\r\n           } )\r\n   \r\n    }\r\n    /////////////////////INVOICES\r\n\r\n    export const createInvoice =async (userId,token,invoice) => {\r\n        \r\n           \r\n        return  await fetch(`${API}/invoices/create/${userId}`,{\r\n              method : \"POST\",\r\n              headers : {\r\n                  Accept : 'application/json',           \r\n                  \"content-Type\" : \"application/json\",             \r\n                  Authorization : `Bearer ${token}`\r\n              },\r\n              body:JSON.stringify(invoice) \r\n            }).then(response => {\r\n                  \r\n                  return response;\r\n              })\r\n              .catch(err =>{\r\n                \r\n                  return (err)\r\n              } )\r\n           \r\n    };\r\n    \r\n    export const getInvoices = () => {\r\n\r\n        return fetch(`${API}/invoices`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n    export const getInvoicesByClientId = (clientId) => {\r\n\r\n        return fetch(`${API}/invoices/${clientId}`,{\r\n            method : 'GET',           \r\n                               \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n\r\n    }\r\n   export const updateInvoice =async (userId,token,invoice) => {\r\n     \r\n    return await fetch(`${API}/update/invoices/${userId}`,{\r\n        method : \"PUT\",\r\n        headers : {\r\n             Accept : 'application/json',                \r\n            \"content-Type\" : \"application/json\",             \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify(invoice) \r\n      }).then(response => {\r\n            \r\n            return response;\r\n        })\r\n        .catch(err =>{\r\n          \r\n            return (err)\r\n        } )\r\n\r\n   } \r\n\r\n    export const getUnpaidInvoices = async () => {\r\n        return await fetch(`${API}/invoices/unpaid`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\nexport const getPaidInvoices = () => {\r\n        return fetch(`${API}/invoices/paid`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\nexport const getCancelledInvoices = () => {\r\n        return fetch(`${API}/invoices/cancelled`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n\r\n/////////////////////////////////////////////////RECEIPTS\r\n\r\n    export const getAllReceipts = async () => {\r\n\r\n        return await fetch(`${API}/receipts`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n\r\n\r\n    export const createReceipt =async (userId,token,receipt) => {\r\n                  \r\n        return await fetch(`${API}/receipts/create/${userId}`,{\r\n              method : \"POST\",\r\n              headers : {\r\n                  Accept : 'application/json',           \r\n                  \"content-Type\" : \"application/json\",             \r\n                  Authorization : `Bearer ${token}`\r\n              },\r\n              body:JSON.stringify(receipt) \r\n            }).then(response => {\r\n                  \r\n                  return response;\r\n              })\r\n              .catch(err =>{\r\n                \r\n                  return (err)\r\n              } )           \r\n    };\r\n    export const updateReceipt =async (userId,token,receipt) => {\r\n        return await fetch(`${API}/receipt/update/${userId}`,{\r\n            method : \"PUT\",\r\n            headers : {\r\n                 Accept : 'application/json',                \r\n                \"content-Type\" : \"application/json\",             \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body:JSON.stringify(receipt) \r\n          }).then(response => {\r\n                \r\n                return response;\r\n            })\r\n            .catch(err =>{\r\n              \r\n                return (err)\r\n            } )\r\n    \r\n       } \r\n\r\n       export const deleteReceipt = async (userId,token,receipt) => {\r\n        \r\n\r\n        return await fetch(`${API}/receipts/delete/${userId}`,{\r\n            method:\"DELETE\",\r\n            headers :{\r\n                Accept : 'application/json',\r\n                \"content-Type\" : \"application/json\", \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body : JSON.stringify(receipt)\r\n        }).then(response => {return response.json()})\r\n          .catch(err=> {  return(err)})\r\n\r\n    }\r\n\r\n    /////ADJUSTMENTS/////////////////////////////////////\r\n    \r\n    export const createAdjustment =async (userId,token,adjustment) => {\r\n        \r\n           \r\n        return await fetch(`${API}/adjustments/create/${userId}`,{\r\n              method : \"POST\",\r\n              headers : {\r\n                  Accept : 'application/json',           \r\n                  \"content-Type\" : \"application/json\",             \r\n                  Authorization : `Bearer ${token}`\r\n              },\r\n              body:JSON.stringify(adjustment) \r\n            }).then(response => {\r\n                  \r\n                  return response;\r\n              })\r\n              .catch(err =>{\r\n                \r\n                  return (err)\r\n              } )           \r\n    };\r\nexport const getAdjustmentByNumber =async (adjustmentNo) => {\r\n    return await  fetch(`${API}/adjusment/:${adjustmentNo}`,{\r\n          method : 'GET',\r\n    }).then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err => {return(err)})\r\n}\r\n\r\n  export const getAllAdjustments =async  () => {\r\n\r\n        return await fetch(`${API}/adjustments`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n\r\n    export const deleteAdjustment = async (userId,token,adjustment) => {\r\n        \r\n\r\n        return  await fetch(`${API}/adjustments/delete/${userId}`,{\r\n            method:\"DELETE\",\r\n            headers :{\r\n                Accept : 'application/json',\r\n                \"content-Type\" : \"application/json\", \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body : JSON.stringify(adjustment)\r\n        }).then(response => {return response.json()})\r\n          .catch(err=> {  return(err)})\r\n\r\n    }\r\n    ///enclosures\r\n    export const createEnclosure = async  (userId,token,enclosure) => {\r\n        \r\n           \r\n        return  await fetch(`${API}/enclosures/create/${userId}`,{\r\n              method : \"POST\",\r\n              headers : {\r\n                  Accept : 'application/json',           \r\n                  \"content-Type\" : \"application/json\",             \r\n                  Authorization : `Bearer ${token}`\r\n              },\r\n              body:JSON.stringify(enclosure) \r\n            }).then(response => {\r\n                  \r\n                  return response;\r\n              })\r\n              .catch(err =>{\r\n                \r\n                  return (err)\r\n              } )           \r\n    };\r\n    export const updateEnclosure = async (userId,token,enclosure) => {\r\n        return await fetch(`${API}/enclosures/update/${userId}`,{\r\n            method : \"PUT\",\r\n            headers : {\r\n                 Accept : 'application/json',                \r\n                \"content-Type\" : \"application/json\",             \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body:JSON.stringify(enclosure) \r\n          }).then(response => {\r\n                \r\n                return response;\r\n            })\r\n            .catch(err =>{\r\n              \r\n                return (err)\r\n            } )\r\n    \r\n       } \r\n       export const getAllEnclosures =  () => {\r\n\r\n        return fetch(`${API}/enclosures`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n    export const deleteEnclosure = async (userId,token,enclosure) => {\r\n        return await fetch(`${API}/enclosures/delete/${userId}`,{\r\n            method : 'DELETE',\r\n            headers : {\r\n                Accept : 'applicaiton/json',\r\n                \"content-Type\":'application/json',\r\n                Authorization :`Bearer ${token}`\r\n            },\r\n           body : JSON.stringify(enclosure)\r\n        }).then(response => {\r\n            return response\r\n        }).catch(err => {\r\n            return (err)\r\n        })\r\n            \r\n  }\r\n     ///priorities\r\n     export const createPriority = async  (userId,token,priority) => {\r\n      \r\n           \r\n        return  await fetch(`${API}/priorities/create/${userId}`,{\r\n              method : \"POST\",\r\n              headers : {\r\n                  Accept : 'application/json',           \r\n                  \"content-Type\" : \"application/json\",             \r\n                  Authorization : `Bearer ${token}`\r\n              },\r\n              body:JSON.stringify(priority) \r\n            }).then(response => {\r\n                  \r\n                  return response;\r\n              })\r\n              .catch(err =>{\r\n                \r\n                  return (err)\r\n              } )           \r\n    };\r\n    export const updatePriority = async (userId,token,priority) => {\r\n        return await fetch(`${API}/priorities/update/${userId}`,{\r\n            method : \"PUT\",\r\n            headers : {\r\n                 Accept : 'application/json',                \r\n                \"content-Type\" : \"application/json\",             \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body:JSON.stringify(priority) \r\n          }).then(response => {\r\n                \r\n                return response;\r\n            })\r\n            .catch(err =>{\r\n              \r\n                return (err)\r\n            } )\r\n    \r\n       } \r\n       export const getAllPriorities =  () => {\r\n\r\n        return fetch(`${API}/priorities`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n    export const deletePriority = async (userId,token,priority) => {\r\n        return await fetch(`${API}/priorities/delete/${userId}`,{\r\n            method : 'DELETE',\r\n            headers : {\r\n                Accept : 'applicaiton/json',\r\n                \"content-Type\":'application/json',\r\n                Authorization :`Bearer ${token}`\r\n            },\r\n           body : JSON.stringify(priority)\r\n        }).then(response => {\r\n            return response\r\n        }).catch(err => {\r\n            return (err)\r\n        })\r\n            \r\n  }\r\n     ///categories//client categories\r\n     export const createClientCategory = async  (userId,token,category) => {\r\n       \r\n           \r\n        return  await fetch(`${API}/clientcategories/create/${userId}`,{\r\n              method : \"POST\",\r\n              headers : {\r\n                  Accept : 'application/json',           \r\n                  \"content-Type\" : \"application/json\",             \r\n                  Authorization : `Bearer ${token}`\r\n              },\r\n              body:JSON.stringify(category) \r\n            }).then(response => {\r\n                  \r\n                  return response;\r\n              })\r\n              .catch(err =>{\r\n                \r\n                  return (err)\r\n              } )           \r\n    };\r\n    export const updateClientCategory = async (userId,token,category) => {\r\n        return await fetch(`${API}/clientcategories/update/${userId}`,{\r\n            method : \"PUT\",\r\n            headers : {\r\n                 Accept : 'application/json',                \r\n                \"content-Type\" : \"application/json\",             \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body:JSON.stringify(category) \r\n          }).then(response => {\r\n                \r\n                return response;\r\n            })\r\n            .catch(err =>{\r\n              \r\n                return (err)\r\n            } )\r\n    \r\n       } \r\n       export const getAllClientCategories =  () => {\r\n\r\n        return fetch(`${API}/clientcategories`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n    export const deleteClientCategory = async (userId,token,category) => {\r\n        return await fetch(`${API}/clientcategories/delete/${userId}`,{\r\n            method : 'DELETE',\r\n            headers : {\r\n                Accept : 'applicaiton/json',\r\n                \"content-Type\":'application/json',\r\n                Authorization :`Bearer ${token}`\r\n            },\r\n           body : JSON.stringify(category)\r\n        }).then(response => {\r\n            return response\r\n        }).catch(err => {\r\n            return (err)\r\n        })\r\n            \r\n  }\r\n\r\n     ///client Price Bands\r\n     export const createPriceband = async  (userId,token,priceband) => {\r\n       \r\n           \r\n        return  await fetch(`${API}/pricebands/create/${userId}`,{\r\n              method : \"POST\",\r\n              headers : {\r\n                  Accept : 'application/json',           \r\n                  \"content-Type\" : \"application/json\",             \r\n                  Authorization : `Bearer ${token}`\r\n              },\r\n              body:JSON.stringify(priceband) \r\n            }).then(response => {\r\n                  \r\n                  return response;\r\n              })\r\n              .catch(err =>{\r\n                \r\n                  return (err)\r\n              } )           \r\n    };\r\n    export const updatePriceband = async (userId,token,priceband) => {\r\n        return await fetch(`${API}/pricebands/update/${userId}`,{\r\n            method : \"PUT\",\r\n            headers : {\r\n                 Accept : 'application/json',                \r\n                \"content-Type\" : \"application/json\",             \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body:JSON.stringify(priceband) \r\n          }).then(response => {\r\n                \r\n                return response;\r\n            })\r\n            .catch(err =>{\r\n              \r\n                return (err)\r\n            } )\r\n    \r\n       } \r\n       export const getAllPricebands =  () => {\r\n\r\n        return fetch(`${API}/pricebands`,{\r\n            method : 'GET',           \r\n    \r\n        }).then(response => {\r\n                    return response.json()\r\n                })\r\n          .catch(err => {return(err)})\r\n    }\r\n\r\n    export const deletePriceband = async (userId,token,priceband) => {\r\n          return await fetch(`${API}/pricebands/delete/${userId}`,{\r\n              method : 'DELETE',\r\n              headers : {\r\n                  Accept : 'applicaiton/json',\r\n                  \"content-Type\":'application/json',\r\n                  Authorization :`Bearer ${token}`\r\n              },\r\n              body : JSON.stringify(priceband)      \r\n          }).then(response => {\r\n              return response\r\n          }).catch(err => {\r\n              return (err)\r\n          })\r\n              \r\n    }\r\n\r\n    ///////////////////Payment Mode\r\n    export const createPaymentMode =  async (userId,token,mode) => {\r\n      return await fetch(`${API}/paymentmodes/create/${userId}`,{\r\n            method : 'POST',\r\n            headers : {\r\n            Accept : 'application/json',           \r\n            \"content-Type\" : \"application/json\",             \r\n            Authorization : `Bearer ${token}`\r\n            },\r\n            body : JSON.stringify(mode)\r\n      })\r\n      .then(response => {\r\n                  \r\n        return response;\r\n    })\r\n    .catch(err =>{\r\n      \r\n        return (err)\r\n    } )          \r\n         \r\n    }\r\n    export const updatePaymentMode = async (userId,token,mode) => {\r\n        return await fetch(`${API}/paymentmodes/update/${userId}`,{\r\n            method : \"PUT\",\r\n            headers : {\r\n                 Accept : 'application/json',                \r\n                \"content-Type\" : \"application/json\",             \r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body:JSON.stringify(mode) \r\n          }).then(response => {\r\n                \r\n                return response;\r\n            })\r\n            .catch(err =>{\r\n              \r\n                return (err)\r\n            } )\r\n    \r\n       } \r\n    export const deletePaymentMode = async (userId,token,mode) => {\r\n        return await fetch(`${API}/paymentmodes/delete/${userId}`,{\r\n            method : 'DELETE',\r\n            headers : {\r\n                Accept : 'applicaiton/json',\r\n                \"content-Type\":'application/json',\r\n                Authorization :`Bearer ${token}`\r\n            },\r\n            body : JSON.stringify(mode)      \r\n        }).then(response => {\r\n            return response\r\n        }).catch(err => {\r\n            return (err)\r\n        })\r\n            \r\n  }\r\n  export const getAllPaymentModes =  () => {\r\n\r\n    return fetch(`${API}/paymentmodes`,{\r\n        method : 'GET',           \r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n}\r\n//////UPI settings\r\nexport const getAllUPI =  () => {\r\n\r\n    return fetch(`${API}/upi`,{\r\n        method : 'GET',           \r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n}\r\nexport const createUPI =  async (userId,token,upi) => {\r\n    return await fetch(`${API}/upi/create/${userId}`,{\r\n          method : 'POST',\r\n          headers : {\r\n          Accept : 'application/json',           \r\n          \"content-Type\" : \"application/json\",             \r\n          Authorization : `Bearer ${token}`\r\n          },\r\n          body : JSON.stringify(upi)\r\n    })\r\n    .then(response => {\r\n                \r\n      return response;\r\n  })\r\n  .catch(err =>{\r\n    \r\n      return (err)\r\n  } )          \r\n       \r\n  }\r\n  export const updateUPI = async (userId,token,upi) => {\r\n    return await fetch(`${API}/upi/update/${userId}`,{\r\n        method : \"PUT\",\r\n        headers : {\r\n             Accept : 'application/json',                \r\n            \"content-Type\" : \"application/json\",             \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify(upi) \r\n      }).then(response => {\r\n            \r\n            return response;\r\n        })\r\n        .catch(err =>{\r\n          \r\n            return (err)\r\n        } )\r\n\r\n   } \r\n\r\n   ////////////////Staff \r\n\r\n   export const createStaff = async  (userId,token,staff) => {\r\n      \r\n           \r\n    return  await fetch(`${API}/staff/create/${userId}`,{\r\n          method : \"POST\",\r\n          headers : {\r\n              Accept : 'application/json',           \r\n              \"content-Type\" : \"application/json\",             \r\n              Authorization : `Bearer ${token}`\r\n          },\r\n          body:JSON.stringify(staff) \r\n        }).then(response => {\r\n              \r\n              return response;\r\n          })\r\n          .catch(err =>{\r\n            \r\n              return (err)\r\n          } )           \r\n};\r\nexport const updateStaff = async (userId,token,staff) => {\r\n    return await fetch(`${API}/staff/update/${userId}`,{\r\n        method : \"PUT\",\r\n        headers : {\r\n             Accept : 'application/json',                \r\n            \"content-Type\" : \"application/json\",             \r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify(staff) \r\n      }).then(response => {\r\n            \r\n            return response;\r\n        })\r\n        .catch(err =>{\r\n          \r\n            return (err)\r\n        } )\r\n\r\n   } \r\n   export const getAllStaff =  () => {\r\n\r\n    return fetch(`${API}/staff`,{\r\n        method : 'GET',           \r\n\r\n    }).then(response => {\r\n                return response.json()\r\n            })\r\n      .catch(err => {return(err)})\r\n}\r\nexport const deleteStaff = async (userId,token,staff) => {\r\n    return await fetch(`${API}/staff/delete/${userId}`,{\r\n        method : 'DELETE',\r\n        headers : {\r\n            Accept : 'applicaiton/json',\r\n            \"content-Type\":'application/json',\r\n            Authorization :`Bearer ${token}`\r\n        },\r\n       body : JSON.stringify(staff)\r\n    }).then(response => {\r\n        return response\r\n    }).catch(err => {\r\n        return (err)\r\n    })\r\n        \r\n}","import React from 'react';\r\n\r\nconst UserContext = React.createContext();\r\nUserContext.displayName = 'UserContext'\r\nexport default UserContext;","export const  getMonthName = monthNumber => {\r\n \r\n   const months = [\"JAN\",\"FEB\",\"MAR\",\"APR\",\"MAY\",\"JUN\",\"JUL\",\"AUG\",\"SEP\",\"OCT\",\"NOV\",\"DEC\"]\r\n   return months[monthNumber] \r\n}\r\n\r\nexport const getWeekDayName = dayNmber => {\r\n    const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\r\n    return days[dayNmber]\r\n}\r\nexport const getFormatDate = (dateString) => {\r\n    if(dateString){\r\n\r\n    \r\n    let newDate = new Date(dateString)\r\n    let year = newDate.getFullYear()\r\n    let month = getMonthName(newDate.getMonth())\r\n    let date = newDate.getDate()\r\n    \r\n     return `${date} ${month} ${year}`\r\n    }\r\n}\r\n///returns 1 if date1 is greater than date2  (date 1 is  recent )\r\n// returns 0 if both the dates are same\r\n///returns -1 if date1 is less than date2\r\nexport const compareDate = (datestring1,datestring2) => {\r\n    let date1 = new Date(datestring1)\r\n    let date2 = new Date(datestring2)\r\n    let year1 = date1.getFullYear() \r\n    let year2 = date2.getFullYear()\r\n    let month1 = date1.getMonth()\r\n    let month2 = date2.getMonth()\r\n    let dateOfDate1 = date1.getDate()\r\n    let dateOfDate2 = date2.getDate() \r\n\r\n\r\n    if(year1 > year2) return 1\r\n\r\n    else if (year1 === year2){ \r\n        if(month1 > month2)return 1\r\n        else if(month1 === month2){\r\n            if(dateOfDate1 > dateOfDate2) return 1\r\n            else if(dateOfDate1 === dateOfDate2) return 0\r\n            else if(dateOfDate1 < dateOfDate2) return -1\r\n        }\r\n       else if(month1 < month2) return -1  \r\n    } \r\n    \r\n    \r\n}\r\nexport const getDatePickerFormatDate = (dateString) => {\r\n    if(dateString){\r\n\r\n    \r\n        let newDate = new Date(dateString)\r\n        let year = newDate.getFullYear()\r\n        let month = newDate.getMonth()+1\r\n        let date = newDate.getDate()\r\n        if(date<10)date = '0'+date\r\n        if(month<10)month = '0'+month\r\n         return `${year}-${month}-${date}`\r\n        }\r\n}\r\n\r\nexport const findDatesInDuration = (dates,minDate,maxDate) => {\r\n    const minTime = new Date(minDate).getTime()\r\n    const maxTime = new Date(maxDate).getTime()\r\n\r\n    const newDates = dates.filter(date =>  new Date(date).getTime() <= maxTime && new Date(date).getTime() >= minTime )\r\n    console.log(\"Filtered dates\",newDates)\r\n    return newDates    \r\n\r\n}","import React,{useState} from 'react';\r\nimport {getDatePickerFormatDate} from '../components/DateAPI'\r\nconst SearchComponent = ({data,onUpdate,searchField}) => {\r\n\r\n    const [dateFilter,setDateFilter] = useState(0)     \r\n    const [dateInterval,setDateInterval] = useState({\r\n    startDate :new Date(),\r\n    endDate : new Date()\r\n  })\r\n\r\nconst filterdata = (startDate,endDate) => {\r\n       let startTime = new Date(startDate).getTime()\r\n       let endTime = new Date(endDate).getTime()\r\n         \r\n      //  console.log(`Start time : ${startTime}, end Time : ${endTime} & searchField is ${searchField}`)\r\n       let newData = data.filter(item => new Date(item[searchField]).getTime() > startTime &&  \r\n                                         new Date(item[searchField]).getTime() < endTime )\r\n        \r\n       onUpdate(newData)\r\n}\r\n\r\nconst handleDates = name => event => {\r\n  let val = event.target.value\r\n  setDateInterval({...dateInterval,[name]: val})\r\n   if(name === 'startDate'){ \r\n     let sDate = new Date(new Date(val).getFullYear(),new Date(val).getMonth(),new Date(val).getDate())\r\n     let temp = dateInterval.endDate\r\n     let eDate = new Date(new Date(temp).getFullYear(),new Date(temp).getMonth(),new Date(temp).getDate()+1)\r\n     \r\n       filterdata(sDate,eDate)\r\n        }\r\n   else if(name === 'endDate'){\r\n\r\n     let temp = dateInterval.startDate\r\n    let sDate = new Date(new Date(temp).getFullYear(),new Date(temp).getMonth(),new Date(temp).getDate())\r\n    let eDate = new Date(new Date(val).getFullYear(),new Date(val).getMonth(),new Date(val).getDate()+1)\r\n    \r\n    filterdata(sDate,eDate)\r\n   }\r\n  }\r\nconst handleSelectedFilter = e => {\r\n    let val = e.target.value  \r\n    \r\n    let today = new Date()\r\n    let start = new Date()\r\n    let end = new Date()\r\n    switch (val) {\r\n      case  '0':{//last 7 days by default \r\n         start = new Date(today.getFullYear(),today.getMonth(),today.getDate()-7)\r\n         end = new Date(today.getFullYear(),today.getMonth(),today.getDate()+1)\r\n         setDateInterval({startDate : start,endDate : end })  \r\n         filterdata(start,end)\r\n         break;   \r\n       }\r\n       case  '1':{//recent (10days)\r\n        start = new Date(today.getFullYear(),today.getMonth(),today.getDate()-10)\r\n        end = new Date(today.getFullYear(),today.getMonth(),today.getDate()-1)\r\n        setDateInterval({startDate : start, endDate : end })  \r\n        filterdata(start,end)\r\n        break;   \r\n      }\r\n      case '2':{//today\r\n        start = new Date()\r\n        end = new Date(today.getFullYear(),today.getMonth(),today.getDate()+1)\r\n        setDateInterval({startDate: new Date()})\r\n        filterdata(start,end)        \r\n        break;\r\n      }\r\n      case '3':{//yesterday\r\n        start = new Date(today.getFullYear(),today.getMonth(),today.getDate()-2)\r\n        end = new Date(today.getFullYear(),today.getMonth(),today.getDate()-1)\r\n        setDateInterval({startDate: new Date(today.getFullYear(),today.getMonth(),today.getDate()-1)})\r\n        filterdata(start,end)       \r\n        break;\r\n      }\r\n      case '4':{//This Week from Sunday\r\n          let thisday = today.getDay()\r\n          start = new Date(today.getFullYear(),today.getMonth(),today.getDate()-thisday)\r\n          end = new Date()\r\n          setDateInterval({startDate: start,\r\n                            endDate : end\r\n                             })\r\n           filterdata(start,end)        \r\n\r\n           break;\r\n      }\r\n      case '5':{//Month to Date    \r\n        let start = new Date()\r\n        start.setDate(1)\r\n        end = new Date()     \r\n        setDateInterval({startDate: start,\r\n                          endDate : end\r\n                           })\r\n        \r\n        filterdata(start,end)        \r\n        \r\n        break;\r\n      }\r\n      case '6':{//Last 7 days\r\n        start = new Date(today.getFullYear(),today.getMonth(),today.getDate()-7)\r\n        end =  new Date()\r\n        setDateInterval({startDate : start,endDate : end  })        \r\n        filterdata(start,end)        \r\n        break;\r\n      }\r\n      case '7':{//Last Full week       \r\n         \r\n        start = new Date(today.getFullYear(),today.getMonth(),(today.getDate()-(7-today.getDay()))-6)\r\n        end = new Date(today.getFullYear(),today.getMonth(),today.getDate()-(7-today.getDay())) // last saturday\r\n        setDateInterval({startDate : start , endDate : end})\r\n        filterdata(start,end)        \r\n        break;\r\n      }\r\n      case '8':{//Last Full Month         \r\n        const days = new Date(today.getFullYear(),today.getMonth()+1,0)   \r\n        start =   new Date(today.getFullYear(),today.getMonth()-1,1)\r\n        end =  new Date(today.getFullYear(),today.getMonth()-1,days.getDate()-1)\r\n        setDateInterval({startDate : start,\r\n                         endDate : end})\r\n        filterdata(start,end)        \r\n        break;\r\n      }\r\n      case '9':{//Last 30 Days\r\n        let start = new Date(today.getFullYear(),today.getMonth(),today.getDate()-30)\r\n        let end = new Date(today.getFullYear(),today.getMonth(),today.getDate())\r\n        setDateInterval({startDate : start,\r\n          endDate : end })\r\n          filterdata(start,end)        \r\n          break;\r\n      }\r\n      case '10':{//Year To Date\r\n        start = new Date(today.getFullYear(),0,1)\r\n        end = new Date(today.getFullYear(),today.getMonth(),today.getDate())\r\n        setDateInterval({startDate : start, endDate : end })\r\n          filterdata(start,end)        \r\n          break;\r\n      }\r\n      case '11':{//Finacial Year To Date\r\n       \r\n        if(today.getMonth() >= 3){\r\n          start = new Date(today.getFullYear(),3,1)\r\n          end = new Date(today.getFullYear(),today.getMonth(),today.getDate())\r\n          setDateInterval({startDate : start,\r\n            endDate : end })\r\n            \r\n        }\r\n        else {\r\n          start = new Date(today.getFullYear()-1,3,1)\r\n          end = new Date(today.getFullYear(),today.getMonth(),today.getDate())\r\n          setDateInterval({startDate : start,\r\n            endDate : end })\r\n        }\r\n        filterdata(start,end)        \r\n        break;\r\n      }\r\n      case '12':{//Last 6 Months\r\n         start = new Date(today.getFullYear(),today.getMonth()-6,today.getDate())\r\n         end = new Date(today.getFullYear(),today.getMonth(),today.getDate())\r\n        setDateInterval({startDate :  start,endDate : end })\r\n          filterdata(start,end)        \r\n          break;\r\n      }\r\n      case '13':{//Last 12 Months\r\n        start = new Date(today.getFullYear()-1,today.getMonth(),today.getDate())\r\n        end = new Date(today.getFullYear(),today.getMonth(),today.getDate())\r\n        setDateInterval({startDate : start, endDate : end })\r\n          filterdata(start,end)        \r\n          break;\r\n      }\r\n      case '14':{//All Dates to yesterday\r\n        let thisDay = new Date()\r\n                 thisDay.setDate(1)\r\n                 thisDay.setMonth(0)\r\n                 thisDay.setYear(2021)   \r\n        start = new Date(thisDay)\r\n        end = new Date(today.getFullYear(),today.getMonth(),today.getDate()-1)\r\n        setDateInterval({startDate: start, endDate:end})\r\n        filterdata(start,end)        \r\n        break;\r\n      }\r\n      case '15':{//All Dates to Today\r\n        let thisDay = new Date()\r\n        thisDay.setDate(1)\r\n        thisDay.setMonth(0)\r\n        thisDay.setYear(2021)   \r\n        start = new Date(thisDay)\r\n        setDateInterval({endDate:new Date(today.getFullYear(),today.getMonth(),today.getDate())})      \r\n        filterdata(start,end)        \r\n        break;\r\n      }\r\n       default:\r\n        setDateInterval({startDate : new Date(),endDate : new Date() })  \r\n  \r\n        filterdata(start,end)        \r\n        break;\r\n     }\r\n     setDateFilter(val)\r\n  } \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='fs-4'>Search filters</div>\r\n          <select onChange={handleSelectedFilter}\r\n                  className='fs-4 '\r\n                  >\r\n            <option value = {0}>Custom</option> \r\n            <option value = {1}>Recent</option> \r\n            <option value = {2}>Today</option> \r\n            <option value = {3}>yesterday</option> \r\n            <option value = {4}>This Week from Sunday</option> \r\n            <option value = {5}>Month To Date</option> \r\n            <option value = {6}>Last 7 days</option> \r\n            <option value = {7}>Last Full week</option> \r\n            <option value = {8}>Last Full Month</option> \r\n            <option value = {9}>Last 30 Days</option> \r\n            <option value = {10}>Year To Date</option> \r\n            <option value = {11}>Finacial Year To Date</option> \r\n            <option value = {12}>Last 6 Months</option> \r\n            <option value = {13}>Last 12 Months</option> \r\n            <option value = {14}>All Dates to yesterday</option> \r\n            <option value = {15}>All Dates to Today</option> \r\n          </select>\r\n          {dateFilter>=14 && <div style = {{display:'inline',marginLeft : '10px'}}>Up To</div>}\r\n          <input type = 'date'\r\n                 className='fs-4 mx-3'   \r\n                 disabled = {dateFilter>0?true:false}   \r\n                 style ={{display : (dateFilter>=14)?'none': 'inline' }}\r\n                 value = {getDatePickerFormatDate(dateInterval.startDate)}            \r\n                 onChange = {handleDates('startDate')} \r\n                  />\r\n          <input type = 'date' \r\n                 className='fs-4 mx-3' \r\n                 disabled = {dateFilter>0?true:false}\r\n                 style ={{display : (dateFilter>1&& dateFilter<4)?'none': 'inline' }}\r\n                 value = {getDatePickerFormatDate(dateInterval.endDate)} \r\n                 onChange = {handleDates('endDate')} \r\n                  />  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchComponent;","import React,{useState,useContext,useEffect} from 'react';\r\nimport OrderContext from '../context/OrderContext'\r\nimport {Link} from 'react-router-dom'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport tableIcons from '../icons/MaterialUiIcons'\r\nimport { TablePagination } from '@material-ui/core';\r\n\r\n\r\nimport {updateOrder} from '../admin/clientApi'\r\nimport UserContext from '../context/UserContext';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ClientContext from '../context/ClientContext';\r\nimport SearchComponent from './searchComponent';\r\nimport {getOrders,getClients} from '../admin/clientApi'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"blue\",\r\n      color: \"green\"\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"white\"\r\n    },\r\n    caption: {\r\n      color: \"black\",\r\n      fontSize: \"20px\"\r\n    },\r\n    selectIcon: {\r\n      color: \"blue\",\r\n      fontSize:'2rem'\r\n    },\r\n    select: {\r\n      color: \"blue\",\r\n      fontSize: \"2rem\"\r\n    },\r\n    actions: {\r\n      color: \"blue\"\r\n    },\r\n    tableCell :{\r\n      padding:\"0px 3px\"\r\n    }\r\n  });\r\n\r\nconst OrderTable = (props)=> {\r\n\r\n   const classes = useStyles();\r\n\r\n  const {setOrderSelected} = useContext(OrderContext)\r\n  const {setClientSelected} = useContext(ClientContext)\r\n  const [orders,setOrders] = useState([])\r\n  const [clients,setClients] = useState([])\r\n  const [data,setData] = useState([])\r\n  const [filteredData, setFilteredData] = useState([])\r\n  const {user,token} = useContext(UserContext)\r\n  const [values,setValues] = useState({\r\n    error:'',\r\n    loading:false\r\n  })\r\n  const [selectRows,setSelectedRows] = useState([])\r\n \r\n const [message,setMessage] = useState('')\r\n const [alert,setAlert] = useState(false)\r\n \r\n const [searchVal,setSearchVal] = useState('orderDate')\r\n\r\n\r\nconst handleUpdate = (filtered) => {\r\n    setFilteredData(filtered)\r\n}\r\n\r\n const handleStatus = (e) => {\r\n     console.log(\"Updating assign To\")\r\n    let val = e.target.value\r\n\r\n    let success = 0;\r\n    \r\n    if(selectRows.length>0){\r\n         \r\n          selectRows.forEach(order =>{\r\n              \r\n             let newValues = {...order,status:val}\r\n\r\n            updateOrder(user._id,token,newValues)\r\n             .then(data =>{\r\n                 \r\n                 success+=1;\r\n                 if(success === selectRows.length)fetchOrders()\r\n                 }\r\n             )\r\n             .catch((err) => {\r\n                setMessage(\"Error while  updating status\")\r\n                setAlert(true)\r\n                setTimeout(()=>setAlert(false),2000)\r\n                window.alert(\"Error while updating status\")\r\n             })\r\n               \r\n          } )         \r\n          \r\n         \r\n         \r\n    }\r\n    else{\r\n       \r\n       window.alert(\"Please Select Orders for updating status\")\r\n    }\r\n }\r\n\r\n\r\n\r\nconst handleDepartment = e => {\r\n     let val = e.target.value\r\n     if(selectRows.length>0){\r\n        let success = 0\r\n         selectRows.forEach(order =>{\r\n             \r\n            let newValues = {...order,department:val}\r\n\r\n           updateOrder(user._id,token,newValues)\r\n            .then(data =>{              \r\n               \r\n                    success+=1;\r\n                    if(success === selectRows.length)fetchOrders()                \r\n            })\r\n            .catch((err => {\r\n               setMessage(\"Error while  updating department\")\r\n               setAlert(true)\r\n               setTimeout(()=>setAlert(false),2000)\r\n               window.alert(\"Error while Updating Department\")\r\n            })\r\n              \r\n            )\r\n            \r\n         } )      \r\n        \r\n        \r\n   }\r\n   else{\r\n    \r\n      window.alert(\"Please Select Orders for updating \")\r\n   }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst handleAssignTo = e => {\r\n    if(selectRows.length>0){\r\n        let success = 0\r\n         selectRows.forEach(order =>{\r\n             \r\n            let newValues = {...order,assignedTo:e.target.value}\r\n\r\n           updateOrder(user._id,token,newValues)\r\n            .then(data =>{              \r\n                    success +=1;   \r\n                    if(success === selectRows.length)fetchOrders()                \r\n\r\n            })\r\n            .catch((err => {\r\n               setMessage(\"Error while  updating staff assigned\")\r\n               setAlert(true)\r\n               setTimeout(()=>setAlert(false),2000)\r\n               window.alert(\"Error while updating staff assigned\")\r\n            })\r\n              \r\n            )\r\n            \r\n         } )\r\n         \r\n         setMessage(`${success} orders updated successfully`)\r\n         setAlert(true)\r\n         setTimeout(()=>setAlert(false),2000)\r\n        \r\n   }\r\n   else{\r\n           \r\n      window.alert(\"Please Select Orders for updating\")\r\n\r\n   }\r\n}\r\n\r\nconst handleRepeatOrderSearch = ()=>{\r\n    let newData = orders.filter(order => order.workType==='repeat')\r\n    \r\n    setFilteredData(newData)\r\n    \r\n}\r\nconst handleRepairOrderSearch = ()=>{\r\n  let newData = orders.filter(order => order.workType === 'repair')\r\n   setFilteredData(newData)\r\n}\r\nconst generateProductsList = products => {\r\n   let list = []\r\n   products.forEach(job => list.push(`${job.product}-${job.units}`))\r\n   return list.join()\r\n}\r\nconst handleInvoiceFilter = event => {\r\n  let filterVal = event.target.value\r\n  let newData = []  \r\n  if(filterVal === 'true') {\r\n   newData =   orders.filter(order => order.isInvoiced === true)\r\n  setFilteredData(newData)\r\n   }\r\n  else if(filterVal === 'false'){\r\n\r\n  newData =   orders.filter(order =>order.isInvoiced=== false)\r\n  setFilteredData(newData)\r\n  \r\n  } \r\n  else setFilteredData(orders)\r\n  \r\n}\r\nuseEffect(()=>{\r\n  (async ()=> {\r\n    setOrderSelected(null) \r\n    setValues({loading:true})\r\n    const client  = await getClients(user._id,token)\r\n    const order = await getOrders(user._id,token)       \r\n    setClients(client)\r\n    setOrders(order)  \r\n    setData(order)\r\n    setFilteredData(order)\r\n    setValues({loading:false})      \r\n    \r\n})()\r\n},[])\r\n\r\nconst fetchOrders = async () => {\r\n  await getOrders(user._id,token)\r\n  .then(data => {\r\n      if(data.error){\r\n      setMessage(\"Error fetching data\")\r\n      setAlert(true)\r\n      setTimeout(()=>setAlert(false),2000)\r\n      }\r\n      else {\r\n          setOrders(data)\r\n          // console.log(\"ORDERS RECEIVED IN ROUTES :\",data)\r\n      }\r\n  })\r\n  .catch(err => { \r\n                      setMessage(\"Error fetching data\")\r\n                      setAlert(true)\r\n                      setTimeout(()=>setAlert(false),2000)\r\n                      })\r\n}\r\n\r\n\r\n  const COLUMNS = [\r\n      \r\n      {title:'Order#',field:'orderNo',maxWidth:'7rem',cellStyle : {fontSize :'1.6rem',border:'1px solid #5c5c5c',width:'3rem'},\r\n                            render : rowData => <Link to = '/order/neworder' \r\n                                                      style = {{textDecoration :'none'}}                                                     \r\n                                                      onClick = {()=>{                                                        \r\n                                                        setOrderSelected(rowData)\r\n                                                      }}>\r\n                                                   {rowData.orderNo}       \r\n                                                 </Link> \r\n                            },\r\n      {title:'OrderDate',field:'orderDate',maxWidth:'11rem',\r\n                            cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c',width:'5rem'}, filtering:false,\r\n                            render : rowData => <div>{rowData.orderDate && <div>{new Intl.DateTimeFormat('en-GB').format(new Date(rowData.orderDate))}</div>}</div>\r\n                           },\r\n      {title:'Client',field:'client',minWidth : '180px',defaultSort :'asc',cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                            render:rowData => <Link to = '/client/clientprofile'  \r\n                                                    style = {{textDecoration :'none'}} \r\n                                                    className = {classes.tableCell}\r\n                                                    onClick = {()=> setClientSelected(rowData.clientId)}>\r\n                                                         {(rowData.client).toUpperCase()}\r\n                                                         </Link>},\r\n       {title:'Patient',field : 'patient',maxWidth:'7rem',cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'}  }  ,                   \r\n      \r\n      {titile : 'Products',field : 'products',cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                              render : rowData =><div>{generateProductsList(rowData.products)}</div> },\r\n      {title:'Value',field:'orderAmount',align:'left',maxWidth:'15rem', cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                          type: 'currency' ,currencySetting: { currencyCode :'INR'} },\r\n      {title:'Status',field:'status',minWidth:'15rem', cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'} ,\r\n                               render : rowData => {\r\n\r\n                                 return   rowData.status === 'Complete'? <div style = {{color:'#04910e'}}>{rowData.status}</div> :\r\n                                        rowData.status === 'Hold'? <div style = {{color : '#f20a0a',fontWeight :'bold'}}>{rowData.status}</div> :\r\n                                            <div style = {{color : '#5c5c5c'}}>{rowData.status}</div>\r\n                              \r\n                                  } ,\r\n                                  lookup :{New : 'NEW','In Production' : 'In Prodction', Complete:'COMPLETE', Hold : 'HOLD', 'Try In' : 'Try In', Cancelled : 'Cancelled' }  \r\n                               },      \r\n     \r\n      {title:'Due Date',field:'duedate',width:'7%',maxWidth:'11rem',\r\n                              cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                               render : rowData =>(rowData.duedate &&  <div>{new Date(rowData.duedate).toDateString() === (new Date().toDateString())?\r\n                                                                    <div style = {{color : 'red',fontWeight : 'bold'}}>{new Intl.DateTimeFormat(\"en-GB\").format(new Date(rowData.duedate)  )}</div> :\r\n                                                                     <div>{new Intl.DateTimeFormat(\"en-GB\").format(new Date(rowData.duedate) ) }</div>\r\n                                                                         \r\n                                                                                 }</div>    )                          \r\n                              },\r\n      {title : 'Date In',foeld :'dateIn',width:'7%',maxWidth:'11rem',\r\n                  cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                  render : rowData =>(rowData.dateIn &&  <div>{new Intl.DateTimeFormat(\"en-GB\").format(new Date(rowData.dateIn) ) }</div>  ) }                        \r\n      \r\n  ]\r\n\r\nconst orderDetail = (rowData) => {\r\n     const{orderno,client,productsList,orderAmount,status,orderDate,updated,duedate} = rowData\r\n\r\n    return(\r\n        <div>\r\n            <ul>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>order # :</div>\r\n                    <div className = 'w-50'>{orderno}</div>\r\n                </li>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>Client :</div>\r\n                    <div className = 'w-50'>{client}</div>\r\n                </li>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>Products :</div>\r\n                    <div className = 'w-50'>{productsList}</div>\r\n                </li>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>Status :</div>\r\n                    <div className = 'w-50'>{status}</div>\r\n                </li>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>Order Date:</div>\r\n                    <div className = 'w-50'>{new Intl.DateTimeFormat('en-GB').format(new Date(orderDate))}</div>\r\n                </li>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>Order Amount:</div>\r\n                    <div className = 'w-50'>&#x20B9;{orderAmount}</div>\r\n                </li>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>Last update :</div>\r\n                    <div className = 'w-50'>{new Intl.DateTimeFormat('en-GB').format(new Date(updated))}</div>\r\n                </li>\r\n                <li className = 'd-flex flex-row'>\r\n                    <div className = 'w-50'>Due Date :</div>\r\n                    <div className = 'w-50'>{new Intl.DateTimeFormat('en-GB').format(new Date(duedate))}</div>\r\n                </li>\r\n             \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst {error,loading} = values\r\n\r\n    return (\r\n        <div className = 'container'>\r\n          <div>\r\n            <div>\r\n              {loading && <div className='fs-3 text-center text-secondary'>Loading...</div>}\r\n              <div className='fs-4'>Compare Date</div>\r\n              <select className='fs-4' onChange = {(e)=> {                            \r\n                            setSearchVal(e.target.value)\r\n                            \r\n                          }}\r\n                            >\r\n                <option value = 'dueDate'>Final Delivery Due Date</option>\r\n                <option value = 'orderDate'>Order Date</option>\r\n                <option value = 'dateIn'>Date In</option>\r\n                {/* <option value = 'statusDate'>Status Date</option> */}\r\n                <option value = 'invoiceDate'>Invoice Date</option>\r\n                <option value = 'tryinDate'>Schedule tryin Delivery Date</option>\r\n              </select>\r\n            </div>\r\n            <SearchComponent data = {data} onUpdate = {handleUpdate} searchField={searchVal} />\r\n         \r\n          </div>\r\n            {alert && <div className = 'fs-3 text-danger '><b>{message}</b></div>}\r\n            <MaterialTable columns = {COLUMNS}\r\n                           data = {filteredData}\r\n                           icons = {tableIcons}\r\n                           title = \"Order Data\"\r\n                           components = {{\r\n                               Toolbar : props => (\r\n                                <div>\r\n                                    <MTableToolbar {...props}/>\r\n                                    \r\n                                    <div style = {{padding:'10px 0px'}}>\r\n                                       <select className=\"bg-body border border-dark rounded outline-0 p-2 mx-3 col-6 col-sm-2 fs-4\"\r\n                                                name='status'                                                                                    \r\n                                                onChange={handleStatus}\r\n                                                >\r\n                                            <option >Mark as</option>\r\n                                            <option value = \"New\">New</option>\r\n                                            <option value = \"In Production\">In Production</option>\r\n                                            <option value = \"Complete\">Complete</option>\r\n                                            <option value = \"Hold\">Hold</option>\r\n                                            <option value = \"Try In\">Try In</option>\r\n                                            <option value = \"Cancelled\">Cancelled</option>\r\n                                           \r\n                                            </select> \r\n\r\n\r\n                                        <select className=\"bg-body border border-dark rounded outline-0 p-2 fs-4 mx-3 my-2 col-6 col-sm-2\"\r\n                                                onChange = {handleDepartment}  \r\n                                                >\r\n                                            <option >Move To</option>\r\n                                            <option value = \"OUTBOX\">OUTBOX</option>\r\n                                            <option value = \"ACRYLIC\">ACRYLIC</option>\r\n                                            <option value = \"ADMIN\">ADMIN</option>\r\n                                            <option value = \"CAD CAM\">CAD CAM</option>\r\n                                            <option value = \"METAL\">METAL</option>\r\n                                            <option value = \"MOULD AND DIE\">MOULD AND DIE</option>\r\n                                            <option value = \"ORTHODONTIC\">ORTHODONTIC</option>\r\n                                            <option value = \"PICKUP AND DELIVERY\">PICKUP AND DELIVERY</option>\r\n                                            <option value = \"PORCELAIN\">PORCELAIN</option>\r\n                                            <option value = \"OUALITY\">OUALITY</option>\r\n                                            <option value = \"WAX\">WAX</option>\r\n                                            </select> \r\n\r\n                                            <select className=\"bg-body border border-dark rounded outline-0 p-2 fs-4 mx-3 my-2 col-6 col-sm-2\"\r\n                                                onChange = {handleAssignTo}  \r\n                                                >\r\n                                            <option >Assign To</option>\r\n                                            <option value = \"BHARAT BHAI\">BHARAT BHAI</option>\r\n                                            <option value = \"CHANDRAKANT BHAI\">CHANDRAKANT BHAI</option>\r\n                                            <option value = \"Courier\">Courier</option>\r\n                                            <option value = \"Dr DHAVAL THAKKAR\">Dr DHAVAL THAKKAR</option>\r\n                                            <option value = \"JAGDISHBHAI\">JAGDISHBHAI</option>\r\n                                            <option value = \"MOULD AND DIE\">MOULD AND DIE</option>\r\n                                            <option value = \"MR.AJIT\">MR.AJIT</option>\r\n                                            <option value = \"NAGIN BHAI\">NAGIN BHAI</option>\r\n                                            <option value = \"R K\">R K</option>\r\n                                            <option value = \"RAHUL TAPODHAN\">RAHUL TAPODHAN</option>\r\n                                            <option value = \"RAKESH BHAI\">RAKESH BHAI</option>\r\n                                            <option value = \"RATI KAKA\">RATI KAKA</option>\r\n                                            <option value = \"UMIT DAVE\">UMIT DAVE</option>\r\n                                            <option value = \"YOGESH BHAI\">YOGESH BHAI</option>\r\n                                        \r\n                                            </select> \r\n\r\n                                    <div className = 'btn btn-info fs-4 my-1 mx-3'\r\n                                          onClick = {()=> setFilteredData(orders)}\r\n                                          >All Orders</div> \r\n                                    <div className = 'btn btn-info fs-4 my-1 mx-3'\r\n                                          onClick = {()=> handleRepeatOrderSearch()}\r\n                                          >Repeat Orders</div> \r\n                                    <div className = 'btn btn-info fs-4 my-1 mx-3'\r\n                                          onClick = {()=> handleRepairOrderSearch()}\r\n                                          >Repair Orders</div> \r\n                                    </div>\r\n                                   <div>\r\n                                     <label>Invoice:</label>\r\n                                     <select className = ' border border-dark rounded outline-0 p-2 mx-3 my-1 col-1 fs-4'\r\n                                             name= 'invoice'\r\n                                             onChange = {handleInvoiceFilter}  \r\n                                             >\r\n                                               <option >All</option>\r\n                                               <option value = {true}>Invoiced</option>\r\n                                               <option value = {false}>Not Invoiced</option>\r\n                                     </select>\r\n                                   </div>\r\n                                  \r\n                                </div>    \r\n                               ),\r\n\r\n                               Pagination:props => (\r\n                                \r\n                                (\r\n                                  <TablePagination \r\n                                  component = 'div'\r\n                                  colSpan={props.colSpan}\r\n                                  count={props.count}\r\n                                  rowsPerPage={props.rowsPerPage}\r\n                                  page={props.page}\r\n                                  onChangePage={props.onChangePage}\r\n                                  onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                                  \r\n                                  classes = {{\r\n                                    root: classes.root,\r\n                                    toolbar:classes.toolbar,\r\n                                    caption:classes.caption,\r\n                                    selectIcon:classes.selectIcon,\r\n                                    select:classes.select,\r\n                                    actions:classes.actions,                                                     \r\n                                  }}\r\n                                  />\r\n                                )\r\n                              )\r\n                           }}\r\n                           \r\n                       \r\n                        onSelectionChange = {(selectedRows)=> {setSelectedRows(selectedRows)}}\r\n                         \r\n                        options={{\r\n                               filtering:true,\r\n                               pageSize : 25,\r\n                               padding:'dense',\r\n                               pageSizeOptions:[10,20,50,100],\r\n                               paginationType:'stepped',\r\n                               exportButton :true,\r\n                               exportAllData : true,\r\n                               exportFileName:'orderdata',\r\n                               columnsButton:true,    \r\n                               actionsCellStyle:{\r\n                                border:'1px solid #5c5c5c'\r\n                              },                         \r\n                               rowStyle :(data,index)=> (index%2==0?{background:\"#f2f2f2\"}:null )  ,\r\n                               selection:true,\r\n                               showSelectAllCheckbox:false,\r\n                               showTextRowsSelected:false,\r\n                               headerStyle: {\r\n                                backgroundColor: '#01572b',\r\n                                color: '#FFF',\r\n                                fontSize:'1.5rem'\r\n                              },\r\n                             style:{\r\n                             fontSize : '1.5rem'\r\n                           } \r\n                           }}\r\n\r\n                   >\r\n\r\n            </MaterialTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderTable;","import React, {Fragment,useState} from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport { isAuthenticated ,signout} from '../auth';\r\nimport logo  from '../images/logo-white.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport '../css/submenu.css'\r\n\r\n\r\nconst currentTab = (history,path) => {\r\n   if(history.location.pathname === path) return{backgroundColor:'#ADF6F8'}\r\n//    else return {backgroundColor : '#5c5c5c'}\r\n}\r\n\r\n\r\nconst  SubOrderMenu = (history,path) => {\r\n    return (\r\n            <>\r\n           {isAuthenticated() && isAuthenticated().user.role ===1 && \r\n                    <div className = 'submenu-container bg-info text-white'>\r\n                  \r\n                       <div style ={currentTab(history,'/order') }>\r\n                           <Link to = '/order'  className = \"px-3 nav-link\">Order</Link>\r\n                        </div>  \r\n                        <div style ={currentTab(history,'/order/neworder') } > \r\n                           <Link to = '/order/neworder'  className = 'px-3 nav-link' >+New Order</Link>\r\n                        </div>\r\n\r\n                   </div>\r\n                  \r\n                 } \r\n                   </>\r\n    );\r\n}\r\n\r\nexport default withRouter(SubOrderMenu);\r\n\r\n","import React,{useEffect, useContext} from 'react';\r\n\r\nimport OrderContext from '../context/OrderContext';\r\nimport ClientContext from '../context/ClientContext';\r\n\r\nimport OrderTable from '../components/OrderTable';\r\nimport SubOrderMenu from '../core/subOrderMenu'\r\nimport Menu from '../components/menu'\r\nimport '../css/order.css'\r\n\r\n\r\nconst  Order = () =>  { \r\n    \r\n    const {setClientSelected} = useContext(ClientContext)\r\n    const {setOrderSelected} = useContext(OrderContext)\r\nuseEffect (() => {\r\n   \r\n    setClientSelected(null)\r\n    setOrderSelected(null)       \r\n},[])\r\n\r\n\r\n\r\n    return (\r\n      \r\n      <div>  \r\n        <Menu />\r\n        \r\n         <div className = 'container '>\r\n             <SubOrderMenu />\r\n            <div className = \" fs-3\">\r\n          \r\n             <OrderTable/>  \r\n            \r\n\r\n            </div>          \r\n         \r\n        </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Order;","import React,{useContext} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport ClientContext from '../context/ClientContext'\r\nimport tableIcons from '../icons/MaterialUiIcons'\r\nimport FlipToFrontRoundedIcon from '@mui/icons-material/FlipToFrontRounded';\r\nimport { TablePagination, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport MoneyIcon from '@mui/icons-material/Money';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"blue\",\r\n    color: \"green\"\r\n  },\r\n  toolbar: {\r\n    backgroundColor: \"white\"\r\n  },\r\n  caption: {\r\n    color: \"black\",\r\n    fontSize: \"20px\"\r\n  },\r\n  selectIcon: {\r\n    color: \"blue\",\r\n    fontSize:'2rem'\r\n  },\r\n  select: {\r\n    color: \"blue\",\r\n    fontSize: \"2rem\"\r\n  },\r\n  actions: {\r\n    color: \"blue\"\r\n  },\r\n  tableCell :{\r\n    padding:\"0px 3px\"\r\n  }\r\n});\r\n\r\n\r\n\r\nconst ClientNewTable = ({onEditClient,onOrderClient,onPaymentClient,clients}) =>  {\r\n\r\n\r\n  const classes = useStyles();\r\n  \r\n\r\n  const {setClientSelected} = useContext(ClientContext)\r\n\r\n   \r\n    const columns = [\r\n        {title : 'Name',field : 'name', cellStyle : { fontSize :'1.6rem'}, defaultSort:'asc',\r\n                  render:rowData => <Link to = '/client/clientprofile' style = {{textDecoration:'none'}} onClick = {()=>  setClientSelected(rowData)}>{(rowData.name).toUpperCase()}</Link>\r\n                 \r\n                  },\r\n        {title : 'Code', field : 'code',cellStyle : { fontSize :'1.6rem'}, sorting : false,\r\n                 render : rowData => <Link style = {{textDecoration : 'none'}}\r\n                                           to = '/client/newclient'\r\n                                           onClick = {()=>setClientSelected(rowData)}\r\n                                           >{rowData.code}</Link>  \r\n                 },\r\n        {title : 'office Phone',cellStyle : { fontSize :'1.6rem'},field : 'phoneO'},\r\n        {title : 'Cell Phone',cellStyle : { fontSize :'1.6rem'},field : 'phoneM'},\r\n        {title : 'City',field : 'city',cellStyle : { fontSize :'1.6rem'}},\r\n        {title : 'Email',field : 'emailPrimary',cellStyle : { fontSize :'1.6rem'}},\r\n        {title : '',field : '', render : rowData => <Link to = '/client/newClient' \r\n                                                          style = {{textDecoration :'none',color:'#000'}}  \r\n                                      onClick={()=>{\r\n                                        setClientSelected(rowData)\r\n                                      }}\r\n                                     ><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Edit Client</div>}>\r\n        <EditIcon sx={{fontSize : 24}}/></Tooltip></Link>}\r\n        \r\n    ]\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <MaterialTable columns = {columns} \r\n                       data = {clients}   \r\n                       icons = {tableIcons} \r\n                       title = \"Client Data\"\r\n                  \r\n                      components = {{\r\n                        Pagination:props => (\r\n                                \r\n                          (\r\n                            <TablePagination \r\n                            component = 'component'\r\n                            colSpan={props.colSpan}\r\n                            count={props.count}\r\n                            rowsPerPage={props.rowsPerPage}\r\n                            page={props.page}\r\n                            onChangePage={props.onChangePage}\r\n                            onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                            \r\n                            classes = {{\r\n                              root: classes.root,\r\n                              toolbar:classes.toolbar,\r\n                              caption:classes.caption,\r\n                              selectIcon:classes.selectIcon,\r\n                              select:classes.select,\r\n                              actions:classes.actions,                                                     \r\n                            }}\r\n                            />\r\n                          )\r\n                        )\r\n                      }}\r\n                       actions = {[\r\n                           {icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Create Order</div>}>\r\n                                      <FlipToFrontRoundedIcon  sx = {{fontSize : 30}} /></Tooltip>,\r\n                             onClick:(e,data)=>{  \r\n                                                     onOrderClient(data)\r\n                                                   \r\n                                                   } \r\n                                   },\r\n                          \r\n                            {\r\n                              icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>New Payment</div>}>\r\n                                         <MoneyIcon sx = {{fontSize : 30}}/></Tooltip>,\r\n                              onClick:(e,data)=>{ \r\n                                                   onPaymentClient(data)\r\n                                                  }\r\n  \r\n                              }\r\n                       ]}\r\n                       options = {{filtering : true,\r\n                                   pageSize:50,\r\n                                    pageSizeOptions:[10,20,50,100],\r\n                                    paginationType:'stepped',exportAllData : true,\r\n                                    padding:'dense',\r\n                                    exportFileName : 'clientdata',addRowPosition:\"first\",\r\n                                    actionsColumnIndex:6,\r\n                                    columnsButton:true,\r\n                                    rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\"}:null  ,\r\n                                    headerStyle: {\r\n                                        backgroundColor: '#01579b',\r\n                                        color: '#FFF',\r\n                                        fontSize:'1.5rem'\r\n                                      },\r\n                                     style:{\r\n                                     fontSize : '2rem'\r\n                                   } \r\n                                }}\r\n                                                   \r\n                       />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClientNewTable;","import React, {Fragment,useState} from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport { isAuthenticated ,signout} from '../auth';\r\nimport logo  from '../images/logo-white.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport '../css/submenu.css'\r\n\r\n\r\nconst currentTab = (history,path) => {\r\n   if(history.location.pathname === path) return{backgroundColor:'#ADF6F8'}\r\n//    else return {backgroundColor : '#5c5c5c'}\r\n}\r\n\r\n\r\nconst  SubMenu = ({history,path}) => {\r\n    return (\r\n            <>\r\n           {isAuthenticated() && isAuthenticated().user.role ===1 && \r\n                    <div className = 'submenu-container bg-info '>\r\n                  \r\n                       <div style ={currentTab(history,'/client') }>\r\n                           <Link to = '/client'  \r\n                                 className = \"px-3 nav-link\" \r\n                                 style = {{color : '#000'}}>Client</Link>\r\n                        </div>  \r\n                        <div style ={currentTab(history,'/client/newclient') } > \r\n                           <Link to = '/client/newclient'  \r\n                                 className = 'px-3 nav-link' \r\n                                 style = {{color : '#000'}}>+New Client</Link>\r\n                        </div>\r\n                        <div style ={currentTab(history,'/client/orders') } > \r\n                           <Link to = '/client/orders'  \r\n                                 className = 'px-3 nav-link' \r\n                                 style = {{color : '#000'}}>Orders</Link>\r\n                        </div>\r\n\r\n                   </div>\r\n                  \r\n                 } \r\n                   </>\r\n    );\r\n}\r\n\r\nexport default withRouter(SubMenu);\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\n\r\nimport Menu from '../components/menu';\r\nimport ClientContext from '../context/ClientContext';\r\n\r\nimport UserContext from '../context/UserContext';\r\nimport ClientNewTable from '../components/ClientNewTable';\r\n\r\nimport SubMenu from './SubMenu';\r\nimport {getClients} from '../admin/clientApi'\r\n\r\n\r\nconst Client = () => {\r\n\r\n\r\n    const [values,setValues] = useState({\r\n\r\n        _id : \"\",\r\n        name: \"\",\r\n        email : \"\",\r\n        address1 : \"\",\r\n        address2:\"\",\r\n        loction : \"\",\r\n        state:\"\",\r\n        phoneO:'',\r\n        phoneR:'',\r\n        phoneM:'',       \r\n        error : '',\r\n        loading : false,\r\n        formData:'',\r\n\r\n\r\n    })\r\n  \r\n  const {user,token} = useContext(UserContext)\r\n\r\n  const {onClientSelect,setClientSelected,setPathRedirect,setRedirect} = useContext(ClientContext)\r\n//   const {clients,fetchClients,onClientSelect,clientSelected,setClientSelected,setPathRedirect,setRedirect} = useContext(ClientContext)\r\n \r\n    const [clients,setClients] = useState([])\r\n    \r\n\r\n  const handleEditClient = (client) => {     \r\n\r\n    setPathRedirect('/client/newclient')\r\n    onClientSelect(client)   \r\n    // console.log(\"In handleEDit client\",client)\r\n    //   console.log(\"Client received : \",client) \r\n\r\n   \r\n}\r\nconst handlePaymentClient = client => {\r\n    setPathRedirect('/payment')\r\n    onClientSelect(client)\r\n}    \r\n const handleOrderClient = (client) => {\r\n     \r\n        setPathRedirect('/order/neworder')\r\n        onClientSelect(client)   \r\n  }\r\n \r\n  const {error,loading} = values\r\n\r\n const fetchClients =  async () => {\r\n      setValues({error : '',loading : true});\r\n    await  getClients(user._id,token)\r\n        .then(data => {\r\n            if(data.error){\r\n            setValues({error : \"Error fetching data\",loading : false})       \r\n            window.alert(\"Failed to Connect to database \")\r\n            }\r\n            else {\r\n                setClients(data)\r\n                setValues({error : '',loading : false})\r\n            }\r\n        })\r\n        .catch(err => {       \r\n                            setValues({error : err,loading: false})\r\n                            window.alert(\"Failed to Connect to database \")\r\n                          \r\n                            })\r\n\r\n}   \r\nuseEffect(()=>{\r\n    fetchClients()\r\n    setClientSelected(null)\r\n    setRedirect(false)\r\n   \r\n},[])\r\n\r\n    return (\r\n       \r\n           <div>\r\n               <Menu />\r\n                <div className = 'container'>                                  \r\n                         <SubMenu />                    \r\n                          {loading && <div className='fs-3 text-center text-secondary'>Loading...</div>}\r\n                          {error && <div className='fs-3 text-center text-danger'>{error} </div>}\r\n                            <div className=\"row  fs-4\">                                                              \r\n                            {clients.length > 0 &&     <ClientNewTable clients = {clients}\r\n                                                onEditClient = {handleEditClient} \r\n                                                onOrderClient = {handleOrderClient}    \r\n                                                onPaymentClient = {handlePaymentClient}                                                 \r\n                                                />\r\n                        \r\n                                    }   \r\n                            {clients.length === 0 && <div>No database available</div>}             \r\n                            </div>\r\n                 \r\n                \r\n               \r\n                </div>\r\n            \r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Client;","import React,{ useState,useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {createEnclosure,deleteEnclosure,getAllEnclosures,updateEnclosure} from '../../../admin/clientApi' \r\nimport UserContext from '../../../context/UserContext'\r\n\r\nconst Enclosure = (props) => {\r\n    \r\n    const {user,token} = useContext(UserContext)   \r\n    const [update,setUpdate] = useState(false)\r\n     \r\n    const [enclosures,setEnclosures] = useState([])\r\n    const [values,setValues] = useState({\r\n        name :''\r\n    })\r\n\r\nconst handleChange = name => event => {\r\n      let val = event.target.value\r\n      setValues({...values,[name]:val})\r\n\r\n    \r\n}\r\nconst validate = enc => {\r\n     if(enc.name.length <3){\r\n         window.alert(\"Please enter valid enclosure Name\")\r\n         return false\r\n     }   \r\n     else return true\r\n}\r\n\r\n\r\nconst handleAddEnclosure = () => {\r\n    let newValues = {name :values.name.trim()}\r\nif(validate(newValues)){\r\n\r\n       \r\n   createEnclosure(user._id,token,newValues)\r\n   .then(data => {\r\n       if(data.error){\r\n           window.alert(\"Error Fetching data\")\r\n       }\r\n       else{\r\n         getallEnclosures()\r\n           setValues({\r\n               name : ''\r\n           })\r\n       }\r\n   })\r\n   .catch(err => {\r\n           window.alert(\"Error Fetching data\")\r\n   })\r\n}\r\n\r\n}\r\n\r\nconst handleUpdateEnc = enc => {\r\n\r\n    let newValues = {name:enc.tempName.trim(),_id : enc._id}\r\n  if(validate(newValues)){  \r\n    updateEnclosure(user._id,token,newValues)\r\n                            .then(data => {\r\n                                if(data.error){\r\n                                    window.alert(\"Error while fetching data\")\r\n                                }\r\n                                else{\r\n                                     getAllEnclosures()\r\n                                     \r\n                                }\r\n                            })\r\n                            .catch(err => {\r\n                                window.alert(\"Error while fetching data\")\r\n\r\n                            })\r\n                        }\r\n     } \r\nconst handleDelete = enc => {\r\n    deleteEnclosure(user._id,token,enc)\r\n      .then(data => {\r\n          getallEnclosures()\r\n      })\r\n      .catch()\r\n}\r\nconst enclosureForm = () => {\r\n        \r\n    return (\r\n        <form>\r\n            <div className='w-25 d-inline-flex'>\r\n                   <input  type = 'text'\r\n                           className='fs-4'\r\n                           value = {values.name}\r\n                           onChange = {handleChange('name')}\r\n                           placeholder='Type new Entry here'\r\n                           />\r\n            </div>\r\n                   <div className=\"btn btn-info fs-4 px-5 mx-3\" onClick={()=>{\r\n                       handleAddEnclosure()\r\n                   }}>Add</div>   \r\n        </form>\r\n    )\r\n}\r\n\r\nconst  getallEnclosures = async () => {\r\n     \r\n    return await getAllEnclosures(user._id,token)\r\n    .then(data => {\r\n        if(data.error){\r\n            window.alert(\"Error while fetching data\")\r\n        }\r\n        else{\r\n             setEnclosures(data)\r\n                     }\r\n    })\r\n    .catch(err => {\r\n        window.alert(\"Error while fetching data\")\r\n\r\n    })    \r\n}\r\nuseEffect(()=>{\r\n    getallEnclosures()\r\n},[update])\r\n\r\nconst enclosureTable = () => {\r\n const handleUpdate = index => event => {\r\n\r\n      currentEnclosures[index].tempName = event.target.value     \r\n      setEnclosures(currentEnclosures)\r\n }\r\n\r\n    let currentEnclosures = [...enclosures]\r\n   \r\n    return(\r\n        <div>\r\n            <div className='fs-3'><b>Available entries:</b></div>\r\n      {currentEnclosures.length>0 && \r\n                <div style = {{listStyleType:'none'}} \r\n                    className=''                      >\r\n                { currentEnclosures.map((enc,index) => \r\n                        <div className='d-flex flex-row align-items-center justify-content-evenly border border-dark border-bottom  '>\r\n                            <div className='fs-4 '>{index+1}</div> \r\n                           \r\n                         <input type = 'text'\r\n                                key = {enc._id} \r\n                                style = {{outlineWidth : 'none',border:'none'}}\r\n                                className='fs-4  d-block px-2' \r\n                                value =   {!enc.update?enc.name: enc.tempName}\r\n                                onChange = {handleUpdate(index)}\r\n                                onClick = {() => {\r\n                                     enc.update = true\r\n                                     setEnclosures(currentEnclosures)\r\n                                     enc.tempName = enc.name                                    \r\n                                }}\r\n                                   />\r\n                              {enc.update &&  <div>\r\n                                     <div className='btn btn-info fs-5' \r\n                                          onClick={()=>{\r\n                                            enc.update = false  \r\n                                            setEnclosures(currentEnclosures)\r\n                                            handleUpdateEnc(enc)\r\n\r\n                                          }}>Ok</div>\r\n                                     <div className='btn btn-info fs-5 mx-2'\r\n                                          onClick={()=>{\r\n                                              enc.update = false \r\n                                              setEnclosures(currentEnclosures)\r\n\r\n                                          }}\r\n                                         >Cancel</div>\r\n\r\n                                 </div>}\r\n                                 \r\n                                 <div className=\"btn btn-outline-danger my-1 fs-5\"\r\n                                      onClick = {()=>handleDelete(enc)}\r\n                                       >Delete</div>\r\n\r\n                                   </div>\r\n                                   )}\r\n                </div >}\r\n        </div>\r\n    )\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div className=' mx-3 my-2 '><h1><b>Enclosures</b></h1></div>\r\n            \r\n            <div>\r\n                {enclosureForm()}\r\n            </div>\r\n            <div className='w-50 my-5'>\r\n                {enclosureTable()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Enclosure;","import React,{ useState,useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {createPriority,deletePriority,getAllPriorities,updatePriority} from '../../../admin/clientApi' \r\nimport UserContext from '../../../context/UserContext'\r\n\r\nconst Enclosure = (props) => {\r\n    \r\n    const {user,token} = useContext(UserContext)   \r\n    \r\n     \r\n    const [priorities,setPriorities] = useState([])\r\n    const [values,setValues] = useState({\r\n        name :''\r\n    })\r\n\r\nconst handleChange = name => event => {\r\n      let val = event.target.value\r\n      setValues({...values,[name]:val})\r\n\r\n    \r\n}\r\nconst validate = priority => {\r\n     if(priority.name.length <3){\r\n         window.alert(\"Please enter valid enclosure Name\")\r\n         return false\r\n     }   \r\n     else return true\r\n}\r\n\r\n\r\nconst handleAddEnclosure = () => {\r\n    let newValues = {name :values.name.trim()}\r\nif(validate(newValues)){\r\n\r\n       \r\n   createPriority(user._id,token,newValues)\r\n   .then(data => {\r\n       if(data.error){\r\n           window.alert(\"Error Fetching data\")\r\n       }\r\n       else{\r\n         getallPriorities()\r\n           setValues({\r\n               name : ''\r\n           })\r\n       }\r\n   })\r\n   .catch(err => {\r\n           window.alert(\"Error Fetching data\")\r\n   })\r\n}\r\n\r\n}\r\n\r\nconst handleUpdateEnc = priority => {\r\n\r\n    let newValues = {name:priority.tempName.trim(),_id : priority._id}\r\n  if(validate(newValues)){  \r\n    updatePriority(user._id,token,newValues)\r\n                            .then(data => {\r\n                                if(data.error){\r\n                                    window.alert(\"Error while fetching data\")\r\n                                }\r\n                                else{\r\n                                     getallPriorities()\r\n                                     \r\n                                }\r\n                            })\r\n                            .catch(err => {\r\n                                window.alert(\"Error while fetching data\")\r\n\r\n                            })\r\n                        }\r\n     } \r\n\r\nconst prioritiesForm = () => {\r\n        \r\n    return (\r\n        <form>\r\n            <div className='w-25 d-inline-flex'>\r\n                   <input  type = 'text'\r\n                           className='fs-4'\r\n                           value = {values.name}\r\n                           onChange = {handleChange('name')}\r\n                           placeholder='Type new Entry here'\r\n                           />\r\n            </div>\r\n                   <div className=\"btn btn-info fs-4 px-5 mx-3\" onClick={()=>{\r\n                       handleAddEnclosure()\r\n                   }}>Add</div>   \r\n        </form>\r\n    )\r\n}\r\nconst handleDelete = enc => {\r\n    deletePriority(user._id,token,enc)\r\n     .then(data => {\r\n         getallPriorities()\r\n     })\r\n     .catch()\r\n}\r\nconst  getallPriorities = async () => {\r\n     \r\n    return await getAllPriorities(user._id,token)\r\n    .then(data => {\r\n        if(data.error){\r\n            window.alert(\"Error while fetching data\")\r\n        }\r\n        else{\r\n             setPriorities(data)\r\n                     }\r\n    })\r\n    .catch(err => {\r\n        window.alert(\"Error while fetching data\")\r\n\r\n    })    \r\n}\r\nuseEffect(()=>{\r\n    getallPriorities()\r\n},[])\r\n\r\nconst priorityTable = () => {\r\n const handleUpdate = index => event => {\r\n\r\n      currentPriorities[index].tempName = event.target.value     \r\n      setPriorities(currentPriorities)\r\n }\r\n\r\n    let currentPriorities = [...priorities]\r\n   \r\n    return(\r\n        <div>\r\n            <div className='fs-3'><b>Available entries:</b></div>\r\n      {currentPriorities.length>0 && \r\n                <div style = {{listStyleType:'none'}} \r\n                    className=''                      >\r\n                { currentPriorities.map((enc,index) => \r\n                        <div className='d-flex flex-row align-items-center justify-content-evenly border border-dark border-bottom  '>\r\n                            <div className='fs-4 '>{index+1}</div> \r\n                           \r\n                         <input type = 'text'\r\n                                key = {enc._id} \r\n                                style = {{outlineWidth : 'none',border:'none'}}\r\n                                className='fs-4  d-block px-2' \r\n                                value =   {!enc.update?enc.name: enc.tempName}\r\n                                onChange = {handleUpdate(index)}\r\n                                onClick = {() => {\r\n                                     enc.update = true\r\n                                     setPriorities(currentPriorities)\r\n                                     enc.tempName = enc.name                                    \r\n                                }}\r\n                                   />\r\n                              {enc.update &&  <div>\r\n                                     <div className='btn btn-info fs-5' \r\n                                          onClick={()=>{\r\n                                            enc.update = false  \r\n                                            setPriorities(currentPriorities)\r\n                                            handleUpdateEnc(enc)\r\n\r\n                                          }}>Ok</div>\r\n                                     <div className='btn btn-info fs-5 mx-2'\r\n                                          onClick={()=>{\r\n                                              enc.update = false \r\n                                              setPriorities(currentPriorities)\r\n\r\n                                          }}\r\n                                         >Cancel</div>\r\n\r\n                                 </div>}\r\n                                 \r\n                                 <div className=\"btn btn-outline-danger my-1 fs-5\"\r\n                                      onClick = {()=>handleDelete(enc)}\r\n                                     >Delete</div>\r\n                                     \r\n                                   </div>\r\n                                   )}\r\n                </div >}\r\n        </div>\r\n    )\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div className=' mx-3 my-2 '><h1><b>Priorities</b></h1></div>\r\n            \r\n            <div>\r\n                {prioritiesForm()}\r\n            </div>\r\n            <div className='w-50 my-5'>\r\n                {priorityTable()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Enclosure;","export default __webpack_public_path__ + \"static/media/logo-print.361f394b.jpg\";","import React,{useState,useEffect} from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image } from '@react-pdf/renderer';\r\nimport logo from  '../../../images/logo-print.jpg'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        height:150,\r\n        flexDirection:'row',          \r\n        maxHeight:'120px',   \r\n        fontWeight:'light',\r\n        fontSize:12,\r\n        margin: '10 2',\r\n        justifyContent:'space-between'    \r\n    },\r\n    leftSection:{\r\n       \r\n       width:'70%',\r\n       flexDirection:'row',\r\n       justifyContent:'flex-start'  ,\r\n       overflow:'wrap',\r\n    \r\n    },\r\n    rigthSection:{\r\n        width:'30%',\r\n        justifyContent:'flex-start',\r\n        textAlign :'right',\r\n        fontSize:14,\r\n        paddingTop:10,\r\n    },\r\n    imageContainer:{\r\n        width:'10%'   \r\n\r\n    },\r\n    image : {\r\n    height:'60%'   \r\n        \r\n    },\r\n    title:{\r\n     paddingTop:5,\r\n     fontSize :20,\r\n     fontWeigth:900,\r\n    },\r\n    textStyle : {\r\n     fontSize:14,     \r\n     paddingRight:100,\r\n     fontWeight:300,\r\n    },\r\n\r\n});\r\n\r\n\r\nfunction InvoiceHeader({client}) {\r\n\r\n    \r\n    let title = ''\r\n    let address = ''\r\n    let email = ''\r\n    let phone = ''\r\n    \r\n\r\n   if(client.company===1){\r\n          title = 'Evoq Digital Dental Solutions'\r\n          address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n          email ='evoqdds@gmail.com'\r\n          phone = '079-48910770'   \r\n   }\r\n   else if(client.company === 2){\r\n          title = 'Evoq Digital Dental Solutions2'\r\n          address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n          email ='evoqdds@gmail.com2'\r\n          phone = '079-48910770'   \r\n   }\r\n   else if(client.company === 3){\r\n          title = 'Evoq Digital Dental Solutions3'\r\n          address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n          email ='evoqdds@gmail.com3'\r\n          phone = '079-48910770'   \r\n   }\r\n   else {\r\n        title = 'Evoq Digital Dental Solutions'\r\n        address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n        email ='evoqdds@gmail.com'\r\n        phone = '079-48910770'  \r\n   }\r\n\r\n\r\n\r\n\r\n\r\n    return (     \r\n                <View  style = {styles.container}>\r\n                    <View style = {styles.leftSection}>\r\n                              <Image style = {styles.image} src = {logo} />   \r\n                            <View style={{paddingLeft : 10}}>                \r\n                            <Text style = {styles.title}>{title}</Text>\r\n                            <Text style = {styles.textStyle}  >{address}</Text>\r\n                            </View>\r\n                       \r\n                     </View>\r\n                     <View style={styles.rigthSection}>\r\n                         <Text>contact :  (O){phone}</Text>\r\n                         <Text>{email}</Text>\r\n                     </View> \r\n                 </View>          \r\n    \r\n    );\r\n}\r\n\r\nexport default InvoiceHeader;","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n \r\n    heading1:{\r\n        fontSize : '14px',    \r\n        alignItems:'center',\r\n    },  \r\n   \r\n  });\r\n\r\n\r\n\r\nconst  InvoiceTitle = (props)  => {\r\n    return (\r\n        <View style={styles.heading1}>\r\n            <Text ><b>BILL OF SUPPLY</b></Text>\r\n            <Text>COMPOSITION TAXABLE PERSON</Text>\r\n            <Text>NOT ELIGIBLE TO COLLECT TAX ON SUPPLIES</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default InvoiceTitle;","import {StyleSheet} from '@react-pdf/renderer';\r\n\r\n\r\nconst  styles = StyleSheet.create({\r\n    tableContainer: {\r\n        flexDirection: 'row',      \r\n    },\r\n    tableHeaders:{\r\n        flexDirection :'row',\r\n        fontSize:12,\r\n        fontWeight:'ultrabold',  \r\n      \r\n        borderBottom:'1px solid #000',    \r\n\r\n        // border:'1px solid #000',\r\n    },\r\n    tableRow:{\r\n        // width : '100%',\r\n        flexDirection : 'row',\r\n        fontSize : 12,\r\n        fontWeight:400,        \r\n        borderBottom:'1px solid #000',  \r\n        minHeight :20,\r\n        alignContent:'center'  \r\n    },\r\n   tableCell:{\r\n      border:'1px solid #000',\r\n      width : 'fit-content',\r\n    //   padding : 2,\r\n   },\r\n   cell1:{\r\n        padding : 2,\r\n        textAlign:'center',       \r\n        borderRight:'1px solid #000',       \r\n        flexBasis:0,\r\n        flexGrow:0.2,\r\n   },\r\n   cellOrderDate:{\r\n      padding : 2,\r\n      textAlign:'left',     \r\n      borderRight:'1px solid #000',     \r\n      flexBasis:0,\r\n      flexGrow:0.8,\r\n      fontSize:10,\r\n   },\r\n  \r\n   cellPatient:{\r\n      padding : 2,     \r\n      borderRight:'1px solid #000',     \r\n      flexBasis:0,\r\n      flexGrow:1,\r\n   },\r\n   cellListRate:{     \r\n      padding:2,         \r\n      borderRight:'1px solid #000',      \r\n      flexBasis:0,\r\n      flexGrow:0.8,\r\n   },\r\n   cellOrderNo:{    \r\n      padding : 2,     \r\n      borderRight:'1px solid #000',     \r\n      flexBasis:0,\r\n      flexGrow:0.8,\r\n   },\r\n   cellProduct:{\r\n      padding : 2,    \r\n      borderRight:'1px solid #000',   \r\n      flexBasis:0,\r\n      flexGrow:2,\r\n    },\r\n  cellTeeth:{\r\n        \r\n      borderRight:'1px solid #000',\r\n      textAlign:'center',    \r\n      flexBasis:0,\r\n      flexGrow:2,\r\n     flexDirection : 'column',\r\n     \r\n  },\r\n  cellUnits:{\r\n    padding : 2,  \r\n    borderRight:'1px solid #000',  \r\n    flexBasis:0,\r\n    flexGrow:0.5,\r\n  },\r\n  cellRateUnits : {\r\n    padding : 2,      \r\n    borderRight:'1px solid #000',   \r\n    flexBasis:0,\r\n    flexGrow:0.6,\r\n  },\r\n  cellDiscount: {\r\n    padding : 2,   \r\n    borderRight:'1px solid #000',\r\n    flexBasis:0,\r\n    flexGrow:0.6,\r\n  },\r\n  cellTotalAmount : {\r\n    padding : 2,  \r\n    flexBasis:0,\r\n    flexGrow:1,\r\n    textAlign:'right',\r\n  },\r\n  archLeft:{\r\n    flexBasis:0,\r\n    flexGrow:2,      \r\n    textAlign : 'right',    \r\n    borderRight:'1px solid black',\r\n    fontSize:12\r\n },\r\n archRight:{\r\n  flexBasis:0,\r\n  flexGrow:2,\r\n  textAlign:'left',\r\n fontSize:12\r\n\r\n},\r\narchUp:{\r\n  flexDirection:'row',\r\n  flexBasis:0,\r\n  flexGrow:1,\r\n  height:'50%',\r\n  \r\n},\r\n archDown : {\r\n   flexDirection:'row',\r\n  flexBasis:0,\r\n  flexGrow:1,\r\n  height:'50%',\r\n  borderTop:'1px solid #000'\r\n } ,\r\n cell:{\r\n   flexBasis:0,\r\n   flexGrow :1,\r\n   flexDirection:'row',\r\n\r\n },\r\n});\r\n\r\n\r\nexport default styles","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image} from '@react-pdf/renderer';\r\nimport styles from './stylesheet'\r\n\r\n\r\n\r\nconst  InvoiceOrdeTableHeader = (props) => {\r\n    return (\r\n        <View style = {styles.tableHeaders}>        \r\n      \r\n            <View style = {styles.cell}>\r\n               <Text style = {styles.cell1}>#</Text>\r\n               <Text style = {[styles.cellOrderDate,{fontSize:12}]}>Order Date</Text>\r\n               <Text style = {styles.cellPatient}>Patient</Text>\r\n               <Text style = {styles.cellListRate} >List rate</Text>\r\n               <Text style = {styles.cellOrderNo}>Order #</Text>\r\n               <Text style = {styles.cellProduct} >Product</Text>\r\n            </View>\r\n            <View style = {styles.cell}>\r\n                <Text style = {styles.cellTeeth}>Teeth</Text>\r\n                <Text style = {styles.cellUnits}>Units</Text>\r\n                <Text style = {styles.cellRateUnits}  >Rate /unit</Text>\r\n                <Text style = {styles.cellDiscount}>Disc.</Text>\r\n                <Text style = {styles.cellTotalAmount} >Total Amount</Text>\r\n            </View>\r\n       \r\n        </View> \r\n    );\r\n}\r\n\r\nexport default InvoiceOrdeTableHeader;","import React,{Fragment} from 'react';\r\nimport { Page, Text, View, Document,Image} from '@react-pdf/renderer';\r\nimport {getFormatDate} from '../../DateAPI'\r\nimport Teethdata from './Teethdata';\r\nimport JobData from './JobData'\r\nimport styles from './stylesheet'\r\n\r\nconst sanitize_block = (value) => {\r\n  if(value){\r\n      return value\r\n  }\r\n  else return ' '\r\n}\r\n\r\n\r\nconst InvoiceItemRow = ({ordersList}) =>  {\r\n\r\n\r\n\r\n    const rows = ordersList.map(( order,index) =>       \r\n       \r\n\r\n      <View style = {styles.tableRow} key = {order._id} >\r\n        <View style = {styles.cell}>\r\n        <Text style = {styles.cell1} >{index}</Text>\r\n        <Text style = {styles.cellOrderDate} >{getFormatDate(order.orderDate)}</Text> \r\n        <Text style = {styles.cellPatient} >{order.patient}</Text>\r\n        <Text style = {styles.cellListRate}>{order.orderAmount}</Text>\r\n        <Text style = {[styles.cellOrderNo,{fontSize:10}]}>{order.orderNo}</Text>\r\n        <Text style = {[styles.cellProduct,{fontSize:10}]}>{order.productsList}</Text>\r\n        </View>\r\n        <View style = {styles.cell}>\r\n          <View style = {styles.cellTeeth}>\r\n                    <View style = {styles.archUp}>\r\n                        <Text style = {styles.archLeft}>{order.teethList[1]}</Text>\r\n                        <Text style = {styles.archRight}>{order.teethList[2]}</Text>     \r\n                        </View>\r\n                      <View style =  { styles.archDown}>\r\n                        <Text style = {styles.archLeft}>{order.teethList[3]}</Text>\r\n                        <Text style = {styles.archRight}>{order.teethList[4]}</Text>     \r\n                      </View>\r\n                  \r\n            </View>        \r\n        <Text style = {styles.cellUnits}>{order.units}</Text>\r\n        <Text style = {styles.cellRateUnits}></Text>\r\n        <Text style = {styles.cellDiscount}>{order.discount}</Text>\r\n        <Text style = {styles.cellTotalAmount} >{order.orderAmount}</Text>\r\n        </View>\r\n        </View>) \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <Fragment>{rows}</Fragment>\r\n    );\r\n}\r\n\r\nexport default InvoiceItemRow;","import React, { Fragment } from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image} from '@react-pdf/renderer';\r\nimport  Teethdata from './Teethdata'\r\nimport styles from './stylesheet';\r\n\r\nconst stylesNew = StyleSheet.create({\r\n   cell:{\r\n    \r\n      flexDirection:'row',\r\n      borderBottom:'1px solid #000'\r\n   },\r\n  arch:{\r\n     flexBasis:0,\r\n     flexGrow:1,\r\n     borderRight:'1px solid #000',\r\n  }\r\n});\r\n\r\nconst  JobData = ({teethList}) =>  {\r\n\r\n  const upperLeft = teethList[1];\r\n  const upperRight = teethList[2];\r\n  const lowerLeft = teethList[4];\r\n  const lowerRight = teethList[3] \r\n\r\n    const data = <View>               \r\n                  <Text style = { stylesNew.arch}>{upperLeft}</Text>\r\n                  <Text style = {stylesNew.arch}>{upperRight}</Text>     \r\n            <Text style = {stylesNew.arch}>{lowerLeft}</Text>\r\n            <Text style = {stylesNew.arch}>{lowerRight}</Text>\r\n         \r\n         </View> \r\n    \r\n    return (\r\n        <Fragment>{data}</Fragment>\r\n    );\r\n}\r\n\r\nexport default JobData;","import React from 'react';\r\nimport {View,Text,StyleSheet} from '@react-pdf/renderer'\r\nimport styles from './stylesheet';\r\n\r\nconst stylesTotal = StyleSheet.create({\r\n    total : {\r\n        flexBasis:0,\r\n        flexGrow:9,\r\n        borderRight:'1px solid #000',\r\n        textAlign:'right',\r\n        paddingRight:30,\r\n    },\r\n    cellUnits : {\r\n        flexBasis : 0,\r\n        flexGrow:0.8,\r\n        borderRight:'1px solid #000'\r\n    },\r\n    cellRateUnits:{\r\n        flexBasis : 0,\r\n        flexGrow:0.8,\r\n        borderRight:'1px solid #000'\r\n    },\r\n    cellDiscount:{\r\n        flexBasis : 0,\r\n        flexGrow:0.8,\r\n        borderRight:'1px solid #000',\r\n        textAlign:'right'    \r\n    },\r\n    cellTotalAmount:{\r\n        flexBasis : 0,\r\n        flexGrow:1.25,\r\n        textAlign:'right'\r\n        \r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nconst  InvoiceTotal = ({invoiceTotal,units,disc}) => {\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <View style = {{fontWeight:800}}>\r\n            <View style = {styles.tableRow}>\r\n                 <Text style = {stylesTotal.total} >Total : </Text>\r\n                 <Text style = {stylesTotal.cellUnits}>{units}</Text>\r\n                 <Text style = {stylesTotal.cellRateUnits}></Text>\r\n                 <Text style = {stylesTotal.cellDiscount}>{disc}</Text>\r\n                 <Text style = {stylesTotal.cellTotalAmount} >{invoiceTotal}</Text>                 \r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default InvoiceTotal;","import React from 'react';\r\nimport {View,Text,StyleSheet} from '@react-pdf/renderer'\r\nimport styles from './stylesheet';\r\n\r\nconst stylesTax = StyleSheet.create({\r\n    cellLeft :{\r\n        flexBasis : 0,\r\n        flexGrow:1,\r\n        borderRight:'1px solid #000',\r\n        alignContent:'center',\r\n    },\r\n    cellRight:{\r\n        flexBasis : 0,\r\n        flexGrow:1,\r\n        // borderRight:'1px solid #000',\r\n        flexDirection: 'column',\r\n    },\r\n    celllower:{\r\n        flexBasis : 0,\r\n        flexGrow:1 ,\r\n         flexDirection : 'row',\r\n        \r\n    }\r\n});\r\n\r\n\r\nconst InvoiceTaxTotal = ({state,taxrate,taxAmount,amount}) =>{\r\n    return (\r\n        <View style = {[styles.tableRow,{minHeight : 35}]}>\r\n            <View style = {stylesTax.cellLeft}>\r\n                <Text >State : {state.toUpperCase()}</Text>\r\n            </View>\r\n            <View style = {stylesTax.cellRight}>\r\n              <View style = {[stylesTax.celllower,{borderBottom : '1px solid #000'}]}>\r\n                   <Text style = {{flexBasis : 0,flexGrow:1 ,textAlign:'right'}}>GST @ {taxrate}</Text>\r\n                   <Text style = {{flexBasis : 0,flexGrow:1 ,textAlign :'right'}}>{taxAmount} </Text>\r\n              </View>\r\n              <View style = {{flexBasis : 0,flexGrow:1 , flexDirection : 'row',}}>\r\n                   <Text style = {{flexBasis : 0,flexGrow:1 ,textAlign:'right'}}>Invoice Total</Text>\r\n                   <Text style = {{flexBasis : 0,flexGrow:1 ,textAlign :'right'}}>{amount}</Text>\r\n              </View>\r\n            </View>\r\n           \r\n        </View>\r\n    )\r\n}\r\n\r\nexport default InvoiceTaxTotal","import React from 'react';\r\nimport {View,Text,StyleSheet} from '@react-pdf/renderer'\r\nimport styles from './stylesheet';\r\nimport { ToWords } from 'to-words'\r\n\r\n\r\nconst styler = StyleSheet.create({\r\n    \r\n});\r\n\r\nconst  InvoiceGrandTotal = ({grandTotal,amount}) => {\r\n\r\n    const toWords = new ToWords({\r\n        localeCode: 'en-IN',\r\n        converterOptions: {\r\n          currency: true,\r\n          ignoreDecimal: false,\r\n          ignoreZeroCurrency: false,\r\n          doNotAddOnly: false,\r\n        }\r\n      });\r\n    let words = toWords.convert(grandTotal,{currency : true})     \r\n \r\n    return (\r\n        <View style = {[styles.tableRow,{fontWeight : 900}]}>\r\n              <View style = {{flexBasis:0, flexGrow :4 ,alignContent : 'stretch'}}>\r\n                  <Text >Grand Total : Rs. {words}</Text>\r\n              </View>\r\n              <View style = {{flexBasis:0, flexGrow :1}}>\r\n                  <Text>Rs.{amount}</Text>\r\n              </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default InvoiceGrandTotal;","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image} from '@react-pdf/renderer';\r\nimport InvoiceOrdeTableHeader from './InvoiceOrdeTableHeader';\r\nimport InvoiceItemRow from './InvoiceItemRow'\r\nimport InvoiceTotal from './InvoiceTotal';\r\nimport InvoiceTaxTotal from './InvoiceTaxTotal';\r\nimport InvoiceGrandTotal from './InvoiceGrandTotal'\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n   \r\n  \r\n   \r\n \r\n })\r\n\r\n\r\nfunction InvoiceItemTable({invoice}) {\r\n    return (\r\n       <View  >\r\n             <InvoiceOrdeTableHeader  />\r\n             <InvoiceItemRow ordersList = {invoice.ordersList}/>\r\n             <InvoiceTotal invoiceTotal = {invoice.amount} \r\n                           units  = {invoice.totalunits}\r\n                           disc = {invoice.discount}   \r\n                              /> \r\n             <InvoiceTaxTotal state = 'Gujarat'  taxrate = '0.0'\r\n                              taxAmount='0'  amount = {invoice.amount}\r\n                               />   \r\n             <InvoiceGrandTotal grandTotal ={invoice.amount} amount = {invoice.amount} />                                \r\n       </View>\r\n    );\r\n}\r\n\r\nexport default InvoiceItemTable;","import React ,{useState,useEffect} from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image} from '@react-pdf/renderer';\r\n// import InvoiceItemTable from '../InvoicePrint/invoiceItemTable';\r\nimport InvoiceItemTable from './InvoiceItemTable';\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n   container : {\r\n    // maxHeight:100,\r\n    flex:1,\r\n   }, \r\n  heading:{\r\n      flexDirection:'row',\r\n      justifyContent:'space-between',\r\n      fontSize:14,\r\n      padding:2,\r\n  },\r\n  tableContainer : {\r\n    borderLeft:'1px solid #000',\r\n    borderRight:'1px solid #000',\r\n    borderTop:'1px solid #000',\r\n    marginTop:2,\r\n\r\n  }, \r\n\r\n})\r\n\r\nconst  InvoiceBody = ({invoice}) => {\r\n \r\n    \r\n    const [ordersList,setOrdersList] = useState([invoice.ordersList])\r\n    const [client,setClient]  = useState({...invoice.clientDetail})\r\n    // const [headers,setHeaders] = useState([\"#\", \"order Date\",\"Patient\",\"List rate\",\"Order #\",\"Products\",\"Teeth\",\"Units\",\"Rate/unit\",\"Disc.\",\"Total Amount\"])\r\n    \r\n \r\n const getInitialValues = async () => {\r\n    if(invoice){\r\n        setOrdersList(invoice.ordersList)\r\n        setClient(invoice.clientDetail)\r\n\r\n    }\r\n }\r\n\r\nuseEffect(()=>{\r\n        getInitialValues()\r\n },[])   \r\n\r\n\r\n    return (\r\n        <View style={styles.container }>\r\n  {invoice && <><View style = {styles.heading}>\r\n                 <Text>{client.salutation}{invoice.client}</Text> \r\n                 <View style = {{ alignItems :'flex-end'}}>\r\n                       <Text style = {{paddingBottom: 5,textAlign:'right'}}>Invoice#: {invoice.invoiceNo}</Text>\r\n                       <Text style = {{paddingBottom: 5}}>Date : {new Date(invoice.invoiceDate).toDateString()}</Text>\r\n                     </View>       \r\n            </View>\r\n           <View style = {styles.tableContainer} >\r\n             <InvoiceItemTable  invoice = {invoice}  />\r\n           </View>\r\n\r\n            </>  \r\n            }\r\n            \r\n        </View>\r\n    );\r\n}\r\n\r\nexport default InvoiceBody;","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container : {     \r\n     flex:1,\r\n     justifyContent:'flex-start',\r\n     fontSize:10,\r\n     fontWeight:300,\r\n     marginTop:100,\r\n    }, \r\n \r\n })\r\n\r\n\r\nconst InvoiceFooter =({client})=> {\r\n    let gstin = ''\r\n    \r\n\r\n    if(client.company===1){\r\n          gstin = 'GSTIN:24AJSPT8576H1ZA'\r\n    }\r\n    else if(client.company === 2){\r\n        gstin = 'GSTIN:24AJSPT8576H1ZA'  \r\n    }\r\n    else if(client.company === 3){\r\n        gstin = 'GSTIN:24AJSPT8576H1ZA' \r\n    }\r\n    else {\r\n        gstin = 'GSTIN:24AJSPT8576H1ZA'\r\n    }\r\n \r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style = {styles.container}>\r\n            <Text>{gstin}</Text>\r\n           \r\n           \r\n        </View>\r\n    );\r\n}\r\n\r\nexport default InvoiceFooter;","import React,{useContext} from 'react';\r\nimport img  from  '../../images/logo-print.jpg'\r\nimport { Page, Text, View, Document, StyleSheet,Image } from '@react-pdf/renderer';\r\n\r\nimport InvoiceHeader from './Invoice/InvoiceHeader';\r\nimport InvoiceTitle from './Invoice/InvoiceTitle';\r\nimport InvoiceBody from './Invoice/InvoiceBody';\r\nimport InvoiceFooter from './Invoice/InvoiceFooter';\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n      flexDirection: 'row',\r\n      backgroundColor: '#fff',\r\n      color : '#000',\r\n       \r\n    },\r\n    section: {\r\n      margin: 10,\r\n      padding: 15,\r\n      flexGrow: 1\r\n    },\r\n    heading1:{\r\n        textAlign :'center',\r\n        fontSize : '14px',\r\n    },  \r\n    fontStyle:{\r\n        font:'Times New Roman',\r\n        fontWeight:'bold',\r\n    }, \r\n    image : {\r\n        width : '10%',\r\n    }\r\n  });\r\n\r\n\r\nconst InvoiceTemplate = ({invoice}) =>  {\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <Document>       \r\n            <Page size = \"A4\" style = {styles.page}>                        \r\n                       <View style={styles.section}>\r\n                           <InvoiceTitle />            \r\n                           <InvoiceHeader client = {invoice.clientDetail} />\r\n                           <InvoiceBody  invoice = {invoice} />\r\n                           <InvoiceFooter client = {invoice.clientDetail}/>\r\n                       </View>       \r\n                    \r\n                </Page>\r\n            </Document>    \r\n    );\r\n}\r\n\r\nexport default InvoiceTemplate;","\r\n\r\nexport const addToPrint = (invoice) => {\r\n \r\n    if(typeof window !== undefined){\r\n              localStorage.setItem(\"invoice\",JSON.stringify(invoice));\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport const getToPrint = () => {\r\n   let invoice = {}\r\n    if(typeof window !== undefined){\r\n                invoice =  JSON.parse(localStorage.getItem('invoice'))\r\n                localStorage.removeItem('invoice')\r\n                 return invoice\r\n            }\r\n}\r\n\r\nexport const addToPrintReceipt = (receipt) => {\r\n    if(typeof window !== undefined){\r\n        localStorage.setItem(\"receipt\",JSON.stringify(receipt));\r\n      \r\n}\r\n}\r\nexport const getToPrintReceipt = () => {\r\n    let receipt = {}\r\n     if(typeof window !== undefined){\r\n                 receipt =  JSON.parse(localStorage.getItem('receipt'))\r\n                //  localStorage.removeItem('receipt')\r\n                  return receipt\r\n             }\r\n }","import React,{useEffect,useState}  from 'react';\r\nimport InvoiceTemplate from './InvoiceTemplate';\r\nimport {PDFViewer ,StyleSheet } from '@react-pdf/renderer'\r\nimport {getToPrint} from './printAPI'\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n      flexDirection: 'row',\r\n      backgroundColor: '#E4E4E4',\r\n      width : '100%',\r\n      height: '100vh',\r\n    },\r\n    section: {\r\n      margin: 10,\r\n      padding: 10,\r\n      flexGrow: 1\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\nconst   ComponentToPrint = (props)=>  {\r\n \r\n    const [invoice,setInvoice] = useState(null)\r\n\r\n\r\n useEffect(()=>{\r\n       let newInvoice = getToPrint()\r\n       if(newInvoice){\r\n         setInvoice(newInvoice)\r\n       }\r\n },[]) \r\n    \r\n   \r\n\r\n\r\n  return (\r\n    \r\n           <PDFViewer style = {styles.page} >             \r\n              {invoice &&  <InvoiceTemplate invoice = {invoice} />}\r\n           </PDFViewer>          \r\n       \r\n    );\r\n\r\n  \r\n    \r\n  \r\n\r\n\r\n}\r\n\r\n\r\nexport default ComponentToPrint","import React from 'react';\r\n\r\nfunction PrintSettings(props) {\r\n    return (\r\n        <div>\r\n            Print Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrintSettings;","import React,{ useState,useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {createClientCategory,getAllClientCategories,updateClientCategory} from '../../../admin/clientApi' \r\nimport UserContext from '../../../context/UserContext'\r\n\r\nconst Categories = (props) => {\r\n    \r\n    const {user,token} = useContext(UserContext)   \r\n    \r\n     \r\n    const [categories,setCategories] = useState([])\r\n    const [values,setValues] = useState({\r\n        name :''\r\n    })\r\n\r\nconst handleChange = name => event => {\r\n      let val = event.target.value\r\n      setValues({...values,[name]:val})\r\n\r\n    \r\n}\r\nconst validate = enc => {\r\n     if(enc.name.length <3){\r\n         window.alert(\"Please enter valid enclosure Name\")\r\n         return false\r\n     }   \r\n     else return true\r\n}\r\n\r\n\r\nconst handleAddEnclosure = () => {\r\n    let newValues = {name :values.name.trim()}\r\nif(validate(newValues)){\r\n\r\n       \r\n   createClientCategory(user._id,token,newValues)\r\n   .then(data => {\r\n       if(data.error){\r\n           window.alert(\"Error Fetching data\")\r\n       }\r\n       else{\r\n         getallClientCategories()\r\n           setValues({\r\n               name : ''\r\n           })\r\n       }\r\n   })\r\n   .catch(err => {\r\n           window.alert(\"Error Fetching data\")\r\n   })\r\n}\r\n\r\n}\r\n\r\nconst handleUpdateEnc = enc => {\r\n\r\n    let newValues = {name:enc.tempName.trim(),_id : enc._id}\r\n  if(validate(newValues)){  \r\n    updateClientCategory(user._id,token,newValues)\r\n                            .then(data => {\r\n                                if(data.error){\r\n                                    window.alert(\"Error while fetching data\")\r\n                                }\r\n                                else{\r\n                                     getallClientCategories()\r\n                                     \r\n                                }\r\n                            })\r\n                            .catch(err => {\r\n                                window.alert(\"Error while fetching data\")\r\n\r\n                            })\r\n                        }\r\n     } \r\n\r\nconst categoryForm = () => {\r\n        \r\n    return (\r\n        <form>\r\n            <div className='w-25 d-inline-flex'>\r\n                   <input  type = 'text'\r\n                           className='fs-4'\r\n                           value = {values.name}\r\n                           onChange = {handleChange('name')}\r\n                           placeholder='Type new Entry here'\r\n                           />\r\n            </div>\r\n                   <div className=\"btn btn-info fs-4 px-5 mx-3\" onClick={()=>{\r\n                       handleAddEnclosure()\r\n                   }}>Add</div>   \r\n        </form>\r\n    )\r\n}\r\n\r\nconst  getallClientCategories = async () => {\r\n     \r\n    return await getAllClientCategories(user._id,token)\r\n    .then(data => {\r\n        if(data.error){\r\n            window.alert(\"Error while fetching data\")\r\n        }\r\n        else{\r\n             setCategories(data)\r\n                     }\r\n    })\r\n    .catch(err => {\r\n        window.alert(\"Error while fetching data\")\r\n\r\n    })    \r\n}\r\nuseEffect(()=>{\r\n    getallClientCategories()\r\n},[])\r\n\r\nconst categoryTable = () => {\r\n const handleUpdate = index => event => {\r\n\r\n      currentCategory[index].tempName = event.target.value     \r\n      setCategories(currentCategory)\r\n }\r\n\r\n    let currentCategory = [...categories]\r\n   \r\n    return(\r\n        <div>\r\n            <div className='fs-3'><b>Available entries:</b></div>\r\n      {currentCategory.length>0 && \r\n                <div style = {{listStyleType:'none'}} \r\n                    className=''                      >\r\n                { currentCategory.map((enc,index) => \r\n                        <div className='d-flex flex-row align-items-center justify-content-evenly border border-dark border-bottom  '>\r\n                            <div className='fs-4 '>{index+1}</div> \r\n                           \r\n                         <input type = 'text'\r\n                                key = {enc._id} \r\n                                style = {{outlineWidth : 'none',border:'none'}}\r\n                                className='fs-4  d-block px-2' \r\n                                value =   {!enc.update?enc.name: enc.tempName}\r\n                                onChange = {handleUpdate(index)}\r\n                                onClick = {() => {\r\n                                     enc.update = true\r\n                                     setCategories(currentCategory)\r\n                                     enc.tempName = enc.name                                    \r\n                                }}\r\n                                   />\r\n                              {enc.update &&  <div>\r\n                                     <div className='btn btn-info fs-5' \r\n                                          onClick={()=>{\r\n                                            enc.update = false  \r\n                                            setCategories(currentCategory)\r\n                                            handleUpdateEnc(enc)\r\n\r\n                                          }}>Ok</div>\r\n                                     <div className='btn btn-info fs-5 mx-2'\r\n                                          onClick={()=>{\r\n                                              enc.update = false \r\n                                              setCategories(currentCategory)\r\n\r\n                                          }}\r\n                                         >Cancel</div>\r\n\r\n                                 </div>}\r\n                                 \r\n                                 <div className=\"btn btn-outline-danger my-1 fs-5\">Delete</div>\r\n\r\n                                   </div>\r\n                                   )}\r\n                </div >}\r\n        </div>\r\n    )\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div className=' mx-3 my-2 '><h1><b>Categories</b></h1></div>\r\n            \r\n            <div>\r\n                {categoryForm()}\r\n            </div>\r\n            <div className='w-50 my-5'>\r\n                {categoryTable()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Categories;","import React,{ useState,useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {createPriceband,getAllPricebands,updatePriceband,deletePriceband} from '../../../admin/clientApi' \r\nimport UserContext from '../../../context/UserContext'\r\n\r\nconst Pricebands = (props) => {\r\n    \r\n    const {user,token} = useContext(UserContext)   \r\n    const [update,setUpdate] = useState(false)\r\n     \r\n    const [pricebands,setPricebands] = useState([])\r\n    const [values,setValues] = useState({\r\n        name :''\r\n    })\r\n\r\nconst handleChange = name => event => {\r\n      let val = event.target.value\r\n      setValues({...values,[name]:val})\r\n\r\n    \r\n}\r\nconst validate = enc => {\r\n     if(enc.name.length <3){\r\n         window.alert(\"Please enter valid enclosure Name\")\r\n         return false\r\n     }   \r\n     else return true\r\n}\r\n\r\n\r\nconst handleAddEnclosure = () => {\r\n    let newValues = {name :values.name.trim()}\r\nif(validate(newValues)){\r\n\r\n       \r\n   createPriceband(user._id,token,newValues)\r\n   .then(data => {\r\n       if(data.error){\r\n           window.alert(\"Error Fetching data\")\r\n       }\r\n       else{\r\n         getallPricebands()\r\n           setValues({\r\n               name : ''\r\n           })\r\n       }\r\n   })\r\n   .catch(err => {\r\n           window.alert(\"Error Fetching data\")\r\n   })\r\n}\r\n\r\n}\r\n\r\nconst handleUpdateEnc = enc => {\r\n\r\n    let newValues = {name:enc.tempName.trim(),_id : enc._id}\r\n  if(validate(newValues)){  \r\n    updatePriceband(user._id,token,newValues)\r\n                            .then(data => {\r\n                                if(data.error){\r\n                                    window.alert(\"Error while fetching data\")\r\n                                }\r\n                                else{\r\n                                     getallPricebands()\r\n                                     \r\n                                }\r\n                            })\r\n                            .catch(err => {\r\n                                window.alert(\"Error while fetching data\")\r\n\r\n                            })\r\n                        }\r\n     } \r\n\r\n\r\nconst handleDelete = priceband =>{\r\n       console.log(\"Priceband received for deletion :\",priceband)\r\n\r\n      deletePriceband(user._id,token,priceband)\r\n           .then(data => {\r\n               getallPricebands()\r\n           })\r\n           .catch()\r\n\r\n}     \r\nconst pricebandForm = () => {\r\n        \r\n    return (\r\n        <form>\r\n            <div className='w-25 d-inline-flex'>\r\n                   <input  type = 'text'\r\n                           className='fs-4'\r\n                           value = {values.name}\r\n                           onChange = {handleChange('name')}\r\n                           placeholder='Type new Entry here'\r\n                           />\r\n            </div>\r\n                   <div className=\"btn btn-info fs-4 px-5 mx-3\" onClick={()=>{\r\n                       handleAddEnclosure()\r\n                   }}>Add</div>   \r\n        </form>\r\n    )\r\n}\r\n\r\nconst  getallPricebands = async () => {\r\n     \r\n    return await getAllPricebands(user._id,token)\r\n    .then(data => {\r\n        if(data.error){\r\n            window.alert(\"Error while fetching data\")\r\n        }\r\n        else{\r\n             setPricebands(data)\r\n                     }\r\n    })\r\n    .catch(err => {\r\n        window.alert(\"Error while fetching data\")\r\n\r\n    })    \r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    getallPricebands()\r\n},[])\r\n\r\nconst pricebandTable = () => {\r\n const handleUpdate = index => event => {\r\n\r\n      currentPriceband[index].tempName = event.target.value     \r\n      setPricebands(currentPriceband)\r\n }\r\n\r\n    let currentPriceband = [...pricebands]\r\n   \r\n    return(\r\n        <div>\r\n            <div className='fs-3'><b>Available entries:</b></div>\r\n      {currentPriceband.length>0 && \r\n                <div style = {{listStyleType:'none'}} \r\n                    className=''                      >\r\n                { currentPriceband.map((enc,index) => \r\n                        <div className='d-flex flex-row align-items-center justify-content-evenly border border-dark border-bottom  '>\r\n                            <div className='fs-4 '>{index+1}</div> \r\n                           \r\n                         <input type = 'text'\r\n                                key = {enc._id} \r\n                                style = {{outlineWidth : 'none',border:'none'}}\r\n                                className='fs-4  d-block px-2' \r\n                                value =   {!enc.update?enc.name: enc.tempName}\r\n                                onChange = {handleUpdate(index)}\r\n                                onClick = {() => {\r\n                                     enc.update = true\r\n                                     setPricebands(currentPriceband)\r\n                                     enc.tempName = enc.name                                    \r\n                                }}\r\n                                   />\r\n                              {enc.update &&  <div>\r\n                                     <div className='btn btn-info fs-5' \r\n                                          onClick={()=>{\r\n                                            enc.update = false  \r\n                                            setPricebands(currentPriceband)\r\n                                            handleUpdateEnc(enc)\r\n\r\n                                          }}>Ok</div>\r\n                                     <div className='btn btn-info fs-5 mx-2'\r\n                                          onClick={()=>{\r\n                                              enc.update = false \r\n                                              setPricebands(currentPriceband)\r\n\r\n                                          }}\r\n                                         >Cancel</div>\r\n\r\n                                 </div>}\r\n                                 \r\n                                 <div className=\"btn btn-outline-danger my-1 fs-5\"\r\n                                      onClick = {()=>handleDelete(enc)}     \r\n                                           >Delete</div>\r\n\r\n                                   </div>\r\n                                   )}\r\n                </div >}\r\n        </div>\r\n    )\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div className=' mx-3 my-2 '>\r\n                <h1><b>Price Bands</b></h1>\r\n                </div>\r\n            \r\n            <div>\r\n                {pricebandForm()}\r\n            </div>\r\n            <div className='w-50 my-5'>\r\n                {pricebandTable()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pricebands;","import React,{useState,useEffect} from 'react';\r\nimport { useContext } from 'react';\r\nimport {createPaymentMode,updatePaymentMode,deletePaymentMode,getAllPaymentModes} from '../../../admin/clientApi'\r\nimport {getAllUPI,createUPI,updateUPI} from  '../../../admin/clientApi'\r\nimport UserContext from '../../../context/UserContext'\r\nimport Popover from '@mui/material/Popover';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst  PaymentModes = (props) =>  {\r\n   \r\n    const {user,token} = useContext(UserContext)\r\n    const [update,setUpdate] = useState(false)\r\n    const [paymentmodes,setPaymentmodes] = useState([])\r\n    const [upi,setUpi] = useState({\r\n        vpa :'',\r\n        name :''\r\n    })\r\n    \r\n    const [currentPaymentMode,setCurrentPaymentMode] = useState(null)\r\n    const [showFrom,setShowForm] = useState(false)\r\n    const [anchorEl,setAnchorEl] = useState(null)\r\n    const open = Boolean(anchorEl)\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n const [values,setValues] = useState({\r\n     description :'',\r\n     type : '',\r\n     relAc : '',\r\n     relAcAccess:''\r\n })\r\n\r\n\r\n\r\nconst handleChange = name => event => {\r\n\r\n    let val = event.target.value\r\n    console.log(`${name} : ${val}`)\r\n    setValues({...values,[name] : val})\r\n\r\n}\r\nconst handleSave = () => {\r\n     //save Payment Mode values\r\n     let newValues = {...values}\r\n    //  if(validate(newValues)){     \r\n           \r\n        createPaymentMode(user._id,token,newValues)\r\n        .then(data => {\r\n            if(data.error){\r\n                window.alert(\"Error Fetching data\")\r\n            }\r\n            else{\r\n              getallPaymentmodes()\r\n              setShowForm(false)\r\n                setValues({\r\n                    description :'',\r\n                    type : '',\r\n                    relAc : '',\r\n                    relAcAccess:''\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n                window.alert(\"Error Fetching data\")\r\n        })\r\n    //  }\r\n}\r\nconst getallPaymentmodes = async () => {\r\n   await getAllPaymentModes(user._id,token)\r\n   .then(data => {\r\n    if(data.error){\r\n        window.alert(\"Error while fetching data\")\r\n    }\r\n    else{\r\n         setPaymentmodes(data)\r\n                 }\r\n})\r\n.catch(err => {\r\n    window.alert(\"Error while fetching data\")\r\n\r\n})   \r\n}\r\nconst handleDelete = (enc) => {\r\n    deletePaymentMode(user._id,token,enc)\r\n    .then(data => {\r\n        if(data.error){\r\n            window.alert(\"Error while fetching data\")\r\n        }\r\n        else{\r\n             getallPaymentmodes(data)\r\n                     }\r\n    })\r\n    .catch(err => {\r\n        window.alert(\"Error while fetching data\")\r\n    \r\n    })   \r\n\r\n}\r\nconst validate = enc => {\r\n    if(enc.description.length <3){\r\n        window.alert(\"Please enter valid Payment Mode Name\")\r\n        return false\r\n    }   \r\n    else return true\r\n}\r\n const paymentModeForm = () => {\r\n   return (\r\n       <div>\r\n           <div>\r\n               <div className=\"fs-4\">Description</div>\r\n               <input type = 'text'\r\n                     className='fs-4'\r\n                      value = {values.description}\r\n                      onChange = {handleChange('description')}\r\n                      />\r\n           </div>\r\n           <div>\r\n               <div className=\"fs-4\">Type</div>\r\n               <select className='fs-4'\r\n                       value = {values.type}\r\n                       onChange={handleChange('type')}>\r\n                   <option></option>\r\n                   <option value = 'Cash'>Cash</option>\r\n                   <option value = 'Cheque'>Cheque</option>\r\n                   <option value = 'CreditCard'>CreditCard</option>\r\n                   <option value = 'NetBanking'>NetBanking</option>\r\n                  \r\n               </select>\r\n           </div>\r\n           <div className='fs-4'>\r\n              <div>Related Account</div>\r\n              <select className='fs-4'\r\n                       value = {values.relAc}  \r\n                       onChange={handleChange('relAc')}\r\n                       >\r\n                  <option></option>\r\n                  <option value = 'Bank a/c'>Bank a/c</option>\r\n                  <option value = 'Cash Account'>Cash Account</option>\r\n              </select>\r\n           </div>\r\n           <div>\r\n               <div className=\"fs-4\">Related Account Access</div>\r\n               <select className='fs-4'\r\n                       value = {values.relAcAccess}\r\n                       onChange={handleChange('relAcAccess')}                     \r\n                     >\r\n                   <option></option>\r\n                   <option value = 'Edit'>Edit</option>\r\n                   <option value = 'ReadOnly'>ReadOnly</option>\r\n                   <option value = 'Hide'>Hide</option>\r\n               </select>\r\n           </div>\r\n           <div className=\"d-flex  my-3\">\r\n               <div className=\"fs-4 btn btn-info px-4\" \r\n                    onClick = {()=>{\r\n                    if(update)handleUpdatePaymentmode()\r\n                     else    handleSave()\r\n                    }}\r\n                    >Save</div>\r\n               <div className=\"fs-4 btn btn-info mx-5\"\r\n                     onClick={() => {\r\n                        setShowForm(false) \r\n                        setUpdate(false)\r\n                        setValues({\r\n                            description :'',\r\n                            type : '',\r\n                            relAc : '',\r\n                            relAcAccess:''\r\n                           })\r\n                    }}\r\n                     >Cancel</div>\r\n           </div>\r\n       </div>\r\n   )\r\n }\r\nconst handleUpdatePaymentmode = () => {\r\n   \r\n    let newValues = {...values,_id : currentPaymentMode._id}\r\n    console.log(\"Values to be updated\")\r\n    if(validate(newValues)){  \r\n      updatePaymentMode(user._id,token,newValues)\r\n                              .then(data => {\r\n                                  if(data.error){\r\n                                      window.alert(\"Error while fetching data\")\r\n                                  }\r\n                                  else{\r\n                                       getallPaymentmodes()\r\n                                       setUpdate(false)\r\n                                       setValues({\r\n                                        description :'',\r\n                                        type : '',\r\n                                        relAc : '',\r\n                                        relAcAccess:''\r\n                                       })\r\n                                  }\r\n                              })\r\n                              .catch(err => {\r\n                                  window.alert(\"Error while fetching data\")\r\n  \r\n                              })\r\n                          }\r\n}\r\nconst handleUpiChange = name => event => {\r\n    let val = event.target.value\r\n    setUpi({...upi,[name]:val})\r\n   \r\n}\r\nconst handleUpiSave = ()=>{\r\n    \r\n    if(upi.vpa.length>0 && upi.name.length>0){\r\n          if(upi._id){\r\n             updateUPI(user._id,token,upi)\r\n             .then(data => {\r\n                if(data.error){\r\n                    window.alert(\"Error Fetching data\")\r\n                }\r\n                else{   \r\n                    getUPIsettings() \r\n                    handleClose()              \r\n                    setUpi({\r\n                        vpa:'',\r\n                        name :''\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                    window.alert(\"Error Fetching data\")\r\n            })\r\n          } \r\n          else{\r\n            createUPI(user._id,token,upi)\r\n            .then(data => {\r\n                if(data.error){\r\n                    window.alert(\"Error Fetching data\")\r\n                }\r\n                else{    \r\n                    getUPIsettings() \r\n                    handleClose()             \r\n                    setUpi({\r\n                        vpa:'',\r\n                        name :''\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                    window.alert(\"Error Fetching data\")\r\n            })\r\n          }\r\n         \r\n    }\r\n    else {\r\n        if(upi.vpa.length === 0 ){\r\n                window.alert(\"Please enter valid VPA\")          \r\n        }\r\n        else if(upi.name.length === 0){\r\n               window.alert(\"Please enter valid Payee Name\") \r\n        }\r\n    }\r\n}\r\nconst getUPIsettings = async () => {\r\n     await getAllUPI(user._id,token)\r\n     .then(data => {\r\n      \r\n         setUpi(data[0])\r\n      \r\n     })\r\n     .catch(err => {\r\n\r\n     })\r\n}\r\n\r\nuseEffect(() =>{\r\n    getallPaymentmodes()\r\n    getUPIsettings()\r\n   \r\n},[update])\r\n\r\nconst paymentModeTable = () => {\r\n   \r\n   return(\r\n    <div>\r\n     {!update &&  <div>\r\n    <div className='fs-3'><b>Available entries:</b></div>\r\n{paymentmodes.length>0 && \r\n        <div style = {{listStyleType:'none'}} \r\n            className=''                      >\r\n        { paymentmodes.map((enc,index) => \r\n                <div className='d-flex flex-row align-items-center justify-content-evenly border border-dark '>\r\n                    <div className='fs-4 '>{index+1}</div> \r\n                   \r\n                 <div  key = {enc._id} \r\n                        className='fs-4  d-block px-2 col-7' \r\n                        >{enc.description}</div>\r\n                      \r\n                        <div className='btn btn-info fs-5 col-2' \r\n                            onClick={()=>{    \r\n                                setValues(enc)                                  \r\n                            setCurrentPaymentMode(enc)\r\n                            setUpdate(true)\r\n\r\n                            }}>Edit</div>                            \r\n\r\n                       \r\n                         \r\n                         <div className=\"btn btn-outline-danger my-1 fs-5 col-2\"\r\n                              onClick = {()=>handleDelete(enc)}     \r\n                                   >Delete</div>\r\n\r\n                           </div>\r\n                           )}\r\n        </div >}\r\n</div>}\r\n</div>\r\n   ) \r\n}\r\nconst handleClick = event => {\r\n    // getUPIsettings()\r\n    setAnchorEl(event.currentTarget)\r\n}\r\nconst handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\nconst  upiSettings = () => {\r\n    return (\r\n        <div className='fs-4 border border-secondary rounded'>\r\n            <div className=\" bg-info p-3 fs-3 fw-bold d-flex  flex-row justify-content-between\">\r\n               <div> UPI Pay Settings</div>\r\n               <div className='btn btn-secondary' onClick={handleClose} ><CloseIcon sx ={{fontSize : 25}}/></div>\r\n            </div>\r\n            <div className=\"row  p-3\">\r\n                <div className=\"col\">\r\n                    <div>Payee VPA</div>\r\n                    <input type = 'text'\r\n                           value = {upi.vpa}                          \r\n                           onChange={handleUpiChange('vpa')}\r\n                          />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div>Payee Name</div>\r\n                    <input type = 'text'\r\n                           value = {upi.name}\r\n                           onChange={handleUpiChange('name')}\r\n                          />\r\n                </div>\r\n            </div>\r\n            <div className='d-flex p-3'>\r\n                <div className=\"btn btn-info fs-4 px-3\"\r\n                      onClick={()=>handleUpiSave()}                      \r\n                      >OK</div>\r\n                <div className=\"btn btn-info fs-4 mx-5\" \r\n                     onClick = {handleClose}  \r\n                       >Cancel</div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\n    return (\r\n        <div>\r\n           <div className=\"fs-2 fw-bold\">\r\n                Payment Modes  \r\n               </div>\r\n               <div className='d-flex flex-row '>\r\n               <div className=\"btn btn-info fs-4 px-3\"\r\n                     onClick={()=>{\r\n                         setShowForm(true)\r\n                     }}\r\n                     >+Add New</div>\r\n                     <div>\r\n                     <div className=\"btn btn-info fs-4 mx-5\"\r\n                          onClick={handleClick} \r\n                             >UPI Pay Settings</div>\r\n                         <Popover open = {open}\r\n                                    id = {id}\r\n                                    anchorEl = {anchorEl}\r\n                                    onClose = {handleClose}\r\n                                anchorOrigin = {{\r\n                                    verticle :'top',\r\n                                    horizontal :'left'\r\n                                }}\r\n                            >{upiSettings()}\r\n                        </Popover>\r\n                     </div>\r\n                     </div>\r\n               {(update || showFrom)  && <div>{paymentModeForm()}</div>} \r\n               <div className='w-50 my-5'>\r\n                {paymentModeTable()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentModes;","import React,{useState,useEffect} from 'react';\r\nimport Menu from '../components/menu'\r\nimport Enclosure from '../components/Settings/Orders/Enclosure';\r\nimport Priorities from '../components/Settings/Orders/Priorities'\r\nimport PrintSettingsInvoice from '../components/Settings/PrintSettings/Invoice/PrintSettingsInvoice';\r\nimport PrintSettings from '../components/Settings/PrintSettings/PrintSettings';\r\nimport Categories from '../components/Settings/Clients/Categories'\r\nimport Pricebands from '../components/Settings/Clients/Pricebands';\r\nimport PaymentModes from '../components/Settings/Clients/PaymentModes';\r\n\r\n\r\nconst Settings = (props) => {\r\n\r\n      const [currentTab,setCurrentTab] = useState(0)\r\n      const [secondaryTab,setSecondaryTab] = useState(0)\r\n\r\n  const settingsMenuTabs = () => {\r\n      return (\r\n          <div className='container-fluid d-flex flex-column justify-content-start'>\r\n                    <div className=\" btn btn-info  fs-4 my-2\"                  \r\n                        style ={currentTab ===1? {backgroundColor:'#0b8df7'} : null} \r\n                        onClick = {()=>{  setCurrentTab(1) \r\n                                          setSecondaryTab(1)\r\n                        }} >Orders                      \r\n                    \r\n                    </div>\r\n                    <div className=\"btn btn-info  fs-4 my-2 \" \r\n                         style ={currentTab ===2? {backgroundColor:'#0b8df7'} : null} \r\n                         onClick = {() => { setCurrentTab(2)\r\n                                            setSecondaryTab(1)\r\n                    }}>\r\n                        Clients\r\n                    </div>\r\n                    {/* <div className=\"btn btn-info  fs-4 my-2\"                        \r\n                         style ={currentTab ===3? {backgroundColor:'#0b8df7'} : null}  \r\n                         onClick = {() => { setCurrentTab(3)\r\n                                             setSecondaryTab(1)\r\n\r\n                         }} >Print settings</div>                          */}\r\n                   \r\n                    {/* <div className=\"btn btn-info text-white fs-4 my-2 \" \r\n                         style ={currentTab ===4? {backgroundColor:'#0b8df7'} : null} \r\n                         onClick = {() => { setCurrentTab(4)  \r\n                                          setSecondaryTab(1)\r\n                                            \r\n                    }}>\r\n                       Accounts\r\n                    </div>\r\n                    <div className=\"btn btn-info text-white fs-4 my-2 \" \r\n                         style ={currentTab ===5? {backgroundColor:'#0b8df7'} : null} \r\n                         onClick = {() => { setCurrentTab(5)\r\n                                          setSecondaryTab(1)\r\n\r\n                    }}>\r\n                       Inventory\r\n                    </div> */}\r\n          </div>\r\n      )\r\n  }\r\nconst printTabs = () => {   \r\n     \r\n\r\n    return (\r\n        <div className='d-flex flex-row'>\r\n              <div className = 'fs-4  btn btn-info mr-2 '\r\n                   style ={(secondaryTab ===1 && currentTab ===3)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(3)\r\n                       setSecondaryTab(1)\r\n                   } \r\n                } >Invoice</div>\r\n              <div className = 'fs-4  btn btn-info   mx-2'\r\n                   style ={(secondaryTab ===2  && currentTab ===3)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(3)\r\n                       setSecondaryTab(2)\r\n                   } \r\n                } >Receipt</div>  \r\n             <div className = 'fs-4  btn btn-info  mx-2'\r\n                   style ={(secondaryTab ===3  && currentTab ===3)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(3)\r\n                       setSecondaryTab(3)\r\n                   } \r\n                } >Challan</div>\r\n             <div className = 'fs-4  btn btn-info   mx-2'\r\n                   style ={(secondaryTab ===4  && currentTab ===3)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(3)\r\n                       setSecondaryTab(4)\r\n                   } \r\n                } >Lab Slip</div>\r\n            <div className = 'fs-4  btn btn-info  mx-2'\r\n                style ={(secondaryTab ===5  && currentTab ===3)? {backgroundColor:'#0b8df7'} : null} \r\n                onClick={()=>{\r\n                    setCurrentTab(3)\r\n                    setSecondaryTab(5)\r\n                } \r\n            } >Statement</div>\r\n            <div className = 'fs-4  btn btn-info   mx-2'\r\n                   style ={(secondaryTab ===6  && currentTab ===3)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(3)\r\n                       setSecondaryTab(6)\r\n                   } \r\n                } >Price List</div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst orderTabs = () => {\r\n\r\n    \r\n     \r\n\r\n    return (\r\n        <div className='d-flex flex-row'>\r\n              <div className = 'fs-4  btn btn-info  '\r\n                   style ={(secondaryTab ===1 && currentTab ===1)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(1)\r\n                       setSecondaryTab(1)\r\n                   } \r\n                } >Enclosure</div>\r\n              <div className = 'fs-4  btn btn-info  mx-2'\r\n                   style ={(secondaryTab ===2 && currentTab ===1)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(1)\r\n                       setSecondaryTab(2)\r\n                   } \r\n                } >Priorities</div>  \r\n             <div className = 'fs-4  btn btn-info   mx-2'\r\n                   style ={(secondaryTab ===3 && currentTab ===1)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(1)\r\n                       setSecondaryTab(3)\r\n                   } \r\n                } >Tax Options</div>\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\nconst clientTabs = ()=>{\r\n    return (\r\n        <div className='d-flex flex-row'>\r\n              <div className = 'fs-4  btn btn-info  '\r\n                   style ={(secondaryTab ===1 && currentTab ===2)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(2)\r\n                       setSecondaryTab(1)\r\n                   } \r\n                } >Categories</div>\r\n              <div className = 'fs-4  btn btn-info   mx-2'\r\n                   style ={(secondaryTab ===2 && currentTab ===2)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(2)\r\n                       setSecondaryTab(2)\r\n                   } \r\n                } >Price Bands</div>  \r\n             <div className = 'fs-4  btn btn-info   mx-2'\r\n                   style ={(secondaryTab ===3 && currentTab ===2)? {backgroundColor:'#0b8df7'} : null} \r\n                   onClick={()=>{\r\n                       setCurrentTab(2)\r\n                       setSecondaryTab(3)\r\n                   } \r\n                } >Payment Modes</div>\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nuseEffect(()=>{\r\n    setCurrentTab(0)\r\n    setSecondaryTab(0)\r\n},[])\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <div className=\"row\">\r\n             <div className=\"col-2\">\r\n                     {settingsMenuTabs()}\r\n             </div>\r\n             <div className=\"col-10 d-flex flex-column\">\r\n             { (currentTab ===0 && secondaryTab === 0)  &&      <>\r\n                     <div className='my-2 mx-2'>{orderTabs()}</div>\r\n                     <div className='my-2 mx-2'>{clientTabs()}</div>\r\n                     {/* <div className='my-2 mx-2'>{printTabs()}</div> */}\r\n                     </> \r\n                     }\r\n              {(currentTab >0 && secondaryTab >0) && <>\r\n                    {currentTab === 1 &&  <div className='my-2'> \r\n                                            <div>{orderTabs()}</div>\r\n                                            {secondaryTab === 1 && <>\r\n                                                     <Enclosure />\r\n                                                 </>}\r\n                                            {secondaryTab === 2 && <>\r\n                                                     <Priorities />\r\n                                                 </>}     \r\n                                            </div>}\r\n                   {currentTab === 2 && <div className='my-2'>\r\n                                            <div>{clientTabs()}</div>\r\n                                            {secondaryTab === 1 && <Categories />}\r\n                                            {secondaryTab === 2 && <Pricebands />}\r\n                                            {secondaryTab === 3 && <PaymentModes />}\r\n                                       </div>}\r\n                   {/* {currentTab === 3 && <div className='my-2'>\r\n                                          <div>{printTabs()}</div>\r\n                                         {secondaryTab === 1 && <div><PrintSettingsInvoice /></div>}                                        \r\n                                        </div>}                     */}\r\n\r\n              </>}       \r\n             </div>\r\n            </div>\r\n             <div>\r\n                 {currentTab === 3 && <PrintSettings currentTab = {secondaryTab} />}\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React,{useState} from 'react';\r\nimport { useEffect } from 'react';\r\nimport '../css/home.css'\r\nimport {resetpswd} from './index'\r\n\r\n\r\nconst ForgotPassword = (props) =>  {\r\n\r\n\r\n    const [values,setValues] = useState({\r\n       email :'',\r\n        \r\n    })\r\n   \r\n\r\n  const handleChange = (e) => {\r\n      e.preventDefault()\r\n      setValues({email :e.target.value })\r\n  }\r\nconst checkEmail = () => {\r\n    resetpswd(values)\r\n      .then(data => {\r\n          window.alert(\"Please check email\")\r\n        })\r\n        .catch(err => console.log(err))\r\n    }  \r\n\r\n\r\nuseEffect(()=>{\r\n    \r\n},[])\r\n    return (\r\n        <div className='container-reset'  >\r\n        <div className = \"container-signin\">\r\n              <h3 className = 'text-dark fs-2 text-center'>Password Reset</h3>             \r\n                        <div>Send Reset Link on : </div>          \r\n                              <div className='text-dark'>Email</div> \r\n                              <input type = 'email'\r\n                                     className='w-75'\r\n                                     onChange={handleChange}\r\n                                    />  \r\n                        \r\n                        <button className='btn btn-primary my-2  w-50 fs-4'\r\n                                onClick={()=>checkEmail()}\r\n                                >Send</button>\r\n                \r\n                         \r\n                         \r\n        \r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\n\r\nconst ProductContext = React.createContext();\r\nProductContext.displayName = 'ProductContext'\r\nexport default ProductContext;","import React from 'react';\r\n\r\nconst InvoiceContext = React.createContext();\r\nInvoiceContext.displayName = 'InvoiceContext'\r\nexport default InvoiceContext;","import React from 'react';\r\n\r\nconst ReceiptContext = React.createContext();\r\nReceiptContext.displayName = 'ReceiptContext'\r\nexport default ReceiptContext;","import React from 'react';\r\nimport '../css/tooth.css'\r\n\r\n\r\n\r\n\r\nconst Tooth = ({index,onSelectTooth,state})  => {\r\n\r\n   \r\n\r\nconst currentState = () => {\r\n   \r\n     return  (state)? {backgroundColor : '#0694d1', border: '2px solid #000' } : {backgroundColor : '#aaacad'}\r\n          \r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className = 'btn-tooth'\r\n                    style ={currentState()}                           \r\n                 onClick = {(e) => { \r\n                     e.preventDefault()   \r\n                     onSelectTooth(index)              \r\n                                         \r\n                 }}    \r\n                     >{index}</button>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tooth;","import React  from 'react';\r\nimport Tooth from './Tooth'\r\n\r\nconst TeethList = ({selectorClass,division,handleSelectTooth,selectedTeeth }) =>  {  \r\n \r\n\r\n\r\n\r\n    return (\r\n        <div className = {`d-flex + m-2 + ${selectorClass}`} division = {division} >\r\n         { selectedTeeth.map(tooth =>  <Tooth    key = {(Math.random(1000)*100)+division} index = {tooth.index} state = {tooth.state} onSelectTooth = {(index) => handleSelectTooth(index,division)} />)\r\n           }  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeethList;","import React from 'react';\r\nimport ToothList from './TeethList'\r\n\r\n\r\nconst JobDisplay = ({jobs}) => {\r\n   \r\n   \r\n\r\n// const { units ,\r\n//         price,\r\n//         product,\r\n//         type,\r\n//         productId,\r\n//         discount,\r\n//         discount_type,\r\n//         total,\r\n//         productTypeCategory,\r\n       \r\n//       } = job\r\n\r\n\r\n const upperArch1 = [\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n ]  \r\n const upperArch2 = [\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n ]\r\n const lowerArch3 = [\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n ]\r\n const lowerArch4 = [\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n ]\r\n\r\nconst getIndex = (tooth) =>{\r\n\r\n    return tooth.slice(1)\r\n}\r\n\r\nconst getArch = (tooth) =>{\r\n   \r\n     return tooth.slice(0,1)\r\n}\r\n\r\nconst setArch = (toothIndex,arch) => {\r\n\r\n    if(arch === '1')         \r\n         {\r\n             let newIndex = upperArch1.findIndex( tooth => tooth.index === toothIndex )\r\n             upperArch1[newIndex].state = true\r\n    \r\n         }\r\n    else if(arch === '2')\r\n          {\r\n            let newIndex = upperArch2.findIndex( tooth => tooth.index === toothIndex )\r\n            upperArch2[newIndex].state = true\r\n            \r\n          }  \r\n      else if(arch === '3')\r\n            {\r\n                let newIndex = lowerArch3.findIndex( tooth => tooth.index === toothIndex )\r\n                lowerArch3[newIndex].state = true\r\n            \r\n            }\r\n       else if(arch === '4') \r\n         {\r\n            let newIndex = lowerArch4.findIndex( tooth => tooth.index === toothIndex )\r\n            lowerArch4[newIndex].state = true\r\n        \r\n         }\r\n        \r\n\r\n}\r\nconst getArchs = () => {\r\n  if(jobs.length>0){\r\n   jobs.forEach(job => {\r\n\r\n   let teethArray = [...job.teethSelected]\r\n      \r\n        if(teethArray.length > 0){\r\n\r\n            for(let i = 0;i < teethArray.length;i++){\r\n            \r\n            let  toothIndex =   getIndex(teethArray[i])\r\n            let  arch =  getArch(teethArray[i])\r\n            \r\n            \r\n    \r\n            setArch(toothIndex,arch)\r\n    \r\n            }\r\n    \r\n        }\r\n   })\r\n      \r\n  \r\n    \r\n }\r\n}\r\n\r\nconst toothSelectionForm = () => {\r\n\r\n  \r\n \r\n    return (\r\n               <div className = 'tooth-container  ' >\r\n               {/* <div className = 'tooth-container border border-secondary my-2' > */}\r\n                         \r\n                 {/* <div className = 'd-flex justify-content-between'>\r\n                     <div> {type}</div>\r\n                     <div className = 'd-inline-flex '>\r\n                       <div className = 'fs-2'>{product}</div> \r\n                       \r\n                     </div>\r\n                     <div> {productTypeCategory}</div>\r\n                 </div> */}\r\n                 <div className = ' border border-dark  px-2 toothSelector '>                     \r\n                 {/* <div className = ' border border-dark  px-2 toothSelector '>                      */}\r\n                             {/* <div className = 'hr'>Selected Teeth</div> */}\r\n                            \r\n                     \r\n               \r\n                 <div className = \"d-flex\">\r\n                     <ToothList selectorClass = 'flex-md-row-reverse' \r\n                                 division = {1} \r\n                                //  handleSelectTooth = {handleToothSelection}\r\n                                 selectedTeeth = {upperArch1}                              \r\n                                 />\r\n                                     <span className = \"divider-vt\"></span>\r\n                                     <span> <ToothList division = {2}  \r\n                                                    //    handleSelectTooth = {handleToothSelection}\r\n                                                       selectedTeeth = {upperArch2}  \r\n                                                       /> </span>\r\n                 </div>\r\n                     \r\n                 <div className = 'divider-hz '></div>\r\n   \r\n   \r\n                 <div className = \"d-flex\">\r\n                     <ToothList selectorClass = 'flex-row-reverse' \r\n                                 division = {4}   \r\n                                //  handleSelectTooth = {handleToothSelection} \r\n                                 selectedTeeth = {lowerArch4}  \r\n                                 />\r\n                                     <span className = \"divider-vt\"></span>\r\n                                     <span> <ToothList division = {3}  \r\n                                                    //    handleSelectTooth = {handleToothSelection}\r\n                                                       selectedTeeth = {lowerArch3}                                                            \r\n                                                       /> </span>\r\n                 </div>\r\n                 </div>\r\n   \r\n                 {/* <div className = 'd-flex flex-row justify-content-between fs-4 m-2 '>\r\n                   <div>\r\n                       <div>Teeth :{teethArray.join()}</div>\r\n                       <div>Units :{units} </div>\r\n                       <div>Unit Rate : <input type = 'number'\r\n                                               className = 'input-group' \r\n                                               defaultValue = {price}\r\n                                            //    onChange = {handleChange('price')}\r\n                                               />\r\n                                               </div>\r\n                        <div className = \"fs-3\">Total : {total} </div>                       \r\n                     \r\n                   </div>\r\n                   <div className = 'd-flex flex-column mw-50'>\r\n                            <div className=\"d-flex flex-row justify-content-between\">\r\n                                <div className=\"col-5\">Discount Type:{discount_type === 'a'? 'Amount' : 'Percentage' }</div>\r\n                                \r\n                                <div className = \"col-5 \">Discount Amount: {discount}                                               \r\n        \r\n                            </div>\r\n                         \r\n                            </div>\r\n                                            \r\n                               \r\n                               <button className = \" btn btn-success fs-4 my-3 w-50 align-self-end \"\r\n                                   onClick ={(e)=>{\r\n                                     e.preventDefault() \r\n                                     onJobDelete(index)\r\n                                       }               \r\n                                         \r\n                                       }\r\n                                   >Delete</button>                      */}\r\n                         \r\n                       \r\n                     \r\n   \r\n                                         \r\n                 </div>\r\n            //    </div>\r\n            //    </div>\r\n             )\r\n   }\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n             {getArchs()}\r\n             {toothSelectionForm()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobDisplay;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\n\r\n\r\n\r\nconst  DropdownMenu = ({title,option1,option2,option3 ,onSelectOption}) =>{\r\n\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = (option) => {\r\n        setAnchorEl(null);\r\n        onSelectOption(option)\r\n    };\r\n\r\n\r\n    return (\r\n        <div >\r\n        <Button\r\n          className = \"fs-5 text-white\"\r\n          id=\"demo-positioned-button\"\r\n          aria-controls=\"demo-positioned-menu\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n          onClick={handleClick}\r\n        >\r\n          {title}\r\n        </Button>\r\n        <Menu\r\n          id=\"demo-positioned-menu\"\r\n          aria-labelledby=\"demo-positioned-button\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n        >\r\n          <MenuItem  style = {{color : '#5c5c5c' , fontSize : '1.5rem'}} onClick={() => handleClose(option1)}>{option1}</MenuItem>\r\n          <MenuItem  style = {{color : '#5c5c5c' , fontSize : '1.5rem'}} onClick={() => handleClose(option2)}>{option2}</MenuItem>\r\n          <MenuItem  style = {{color : '#5c5c5c' , fontSize : '1.5rem'}} onClick={() => handleClose(option3)}>{option3}</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default DropdownMenu;","import React, {useEffect,useContext } from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport tableIcons from '../icons/MaterialUiIcons';\r\nimport {getProducts} from '../admin/clientApi'\r\nimport UserContext from '../context/UserContext';\r\nimport { useState } from 'react';\r\n\r\nfunction ProductsTable({onProductSelection}) {\r\n\r\n\r\n   const  columns = [\r\n       { title : \"Name\", field : \"name\" ,cellStyle : {fontSize : '1.8rem'}, defaultSort : 'asc'},\r\n       { title : \"Type\", field : \"productType.name\", cellStyle : {fontSize : '1.8rem'} },\r\n       { title : \"Price\", field : \"price\", cellStyle : {fontSize : '1.8rem'} },\r\n      \r\n   ] \r\n\r\n    const [products,setProducts] = useState([])\r\n    const {user,token} = useContext(UserContext)\r\n    const [values,setValues] = useState([{\r\n        error:'',\r\n        loading:false\r\n    }])\r\n\r\n    const fetchProducts = async () => {     \r\n        setValues({error : '',loading:true})\r\n\r\n        await getProducts(user._id,token)\r\n                       .then(data => {\r\n                           if(data.error){\r\n                           setValues({error : data.error,loading:false})\r\n                           }\r\n                           else {\r\n                               setProducts(data)\r\n                           setValues({error : '',loading:false})\r\n\r\n                           }\r\n                       })\r\n                       .catch(err => { \r\n                                 setValues({error : err,loading:false})\r\n   \r\n                                           })\r\n\r\n\r\n}\r\n\r\nuseEffect(()=>{\r\n  fetchProducts()\r\n},[])\r\n\r\nconst {loading} = values\r\n\r\n    return (\r\n        <div className = 'w-75 m-auto  ' style ={{zIndex : '10'}}>\r\n            {loading && <div className='fs-3 text-secondary text-center'>Loading...</div>}\r\n        <MaterialTable columns = {columns}\r\n                       data = {products}\r\n                       icons = {tableIcons}   \r\n                       title = \"Products\"\r\n                       onRowClick = {(row,data) => {\r\n                                        onProductSelection(data)\r\n                                    }}\r\n                       options = {{\r\n                           filtering : true,\r\n                           pageSizeOptions:[5,10,20,50,100],\r\n                           padding:'dense',\r\n                           paginationType: 'stepped',\r\n                           headerStyle: {\r\n                            backgroundColor: '#01579b',\r\n                            color: '#FFF',\r\n                            fontSize:'2rem',\r\n                            position:'relative',\r\n                            zIndex:'0'\r\n                          },                           \r\n                         \r\n\r\n                       }}\r\n                       > \r\n        </MaterialTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductsTable;","import React, { useState,useEffect, useContext } from 'react';\r\nimport { getProductTypes } from '../admin/clientApi';\r\nimport DropdownMenu from './DropdownMenu';\r\nimport ProductsTable from './ProductsTable';\r\nimport ToothList from './TeethList';\r\nimport ProductContext from '../context/ProductContext';\r\n\r\nconst Teethselector = ({ job, onAddOrderCancel,onJobSave,onEditJob}) => {\r\n \r\n  // const [jobs,setJobs] = useState([])\r\n  \r\n  \r\n    const [productSelected,setProductSelected] = useState(null);  \r\n     \r\n    const [productTypes,setProductTypes] = useState([])\r\n    const [update,setUpdate] = useState(false)\r\n    const {products} = useContext(ProductContext)\r\n    const [showSlabPrice, setShowSlabPrice] = useState(false)\r\n    const [slabValues,setSlabValues] = useState()\r\n\r\n   const [teethSelected,setteethSelected] = useState([]) \r\n  const  [values,setValues] = useState({\r\n      id:0,\r\n      discount:0,\r\n      discount_type:'a',\r\n      price:0,\r\n      product:'',\r\n      total:0,\r\n      type:'',\r\n      units:0,     \r\n      slab1End:0,\r\n      slab1Price:0,\r\n      slab2End:0,\r\n      slab2Price:0,\r\n      slab3Price:0,\r\n\r\n  })\r\n \r\n  const [upperArch1,setUpperArch1] = useState([\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n  \r\n])\r\n  const [upperArch2,setUpperArch2] = useState([\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n  \r\n])\r\n  const [lowerArch3,setLowerArch3] = useState([\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n  \r\n])\r\n  const [lowerArch4,setLowerArch4] = useState([\r\n    {index:'1',state:false},\r\n    {index:'2',state:false},\r\n    {index:'3',state:false},\r\n    {index:'4',state:false},\r\n    {index:'5',state:false},\r\n    {index:'6',state:false},\r\n    {index:'7',state:false},\r\n    {index:'8',state:false},\r\n  \r\n])\r\nconst {slab1End,slab1Price,slab2End,slab2Price,slab3Price} = values\r\n\r\nconst handleAddRemoveTooth = (toothState,division,index) => {\r\n\r\n  if(toothState)setteethSelected(prev => [...prev,`${division}${index}`])\r\n\r\n  else setteethSelected(teethSelected.filter(t => t !== `${division}${index}`))\r\n\r\n  \r\n}\r\nconst findProductSelected = (id) => {\r\n     \r\n   let newProduct = products.filter(product => product._id === id)\r\n   return (newProduct[0])\r\n}\r\nconst fetchProductTypes = async () => {\r\n     \r\n  const data = await getProductTypes()\r\n  setProductTypes(data)\r\n  \r\n}\r\n\r\n\r\nuseEffect (() => {\r\n\r\n   fetchProductTypes()\r\n   if(job.length>0){   \r\n     \r\n     setUpdate(true)\r\n     setteethSelected(job.teethSelected)\r\n     getArchs()\r\n     setValues({...job})\r\n     setProductSelected(findProductSelected(job.productId))\r\n     \r\n     \r\n    }\r\n},[update])\r\n\r\n\r\n\r\nconst getIndex = (tooth) =>{\r\n\r\n  return tooth.slice(1)\r\n}\r\n\r\nconst getArch = (tooth) =>{\r\n \r\n   return tooth.slice(0,1)\r\n}\r\n\r\nconst setArch = (toothIndex,arch) => {\r\n\r\n  if(arch === '1')         \r\n       {\r\n          // console.log(\"INside upperArch1n\")\r\n           let newIndex = upperArch1.findIndex( tooth => tooth.index === toothIndex )\r\n           let newArch = [...upperArch1] \r\n           newArch[newIndex].state = true\r\n           setUpperArch1(newArch)\r\n  \r\n       }\r\n  else if(arch === '2')\r\n        {\r\n          let newIndex = upperArch2.findIndex( tooth => tooth.index === toothIndex )\r\n          let newArch = [...upperArch2] \r\n          newArch[newIndex].state = true\r\n          setUpperArch2(newArch)\r\n          \r\n        }  \r\n    else if(arch === '3')\r\n          {\r\n              let newIndex = lowerArch3.findIndex( tooth => tooth.index === toothIndex )\r\n              let newArch = [...lowerArch3] \r\n              newArch[newIndex].state = true\r\n              setLowerArch3(newArch)\r\n          \r\n          }\r\n     else if(arch === '4') \r\n       {\r\n          let newIndex = lowerArch4.findIndex( tooth => tooth.index === toothIndex )\r\n          let newArch = [...lowerArch4] \r\n          newArch[newIndex].state = true\r\n          setLowerArch4(newArch)\r\n      \r\n       }\r\n      \r\n\r\n}\r\nconst getArchs = () => {\r\n   \r\n  // console.log(\"TEETH  SELECTED IN GETARCH\",teethSelected)\r\n if(teethSelected.length > 0){\r\n  \r\n let teethArray = [...job.teethSelected]\r\n    \r\n      if(teethArray.length > 0){\r\n\r\n          for(let i = 0;i < teethArray.length;i++){\r\n          \r\n          let  toothIndex =   getIndex(teethArray[i])\r\n          let  arch =  getArch(teethArray[i])\r\n          \r\n          \r\n  \r\n          setArch(toothIndex,arch)\r\n  \r\n          }\r\n  \r\n      }\r\n    } \r\n\r\n}\r\n\r\n\r\n const handleToothSelection = (index,division) => {\r\n     let toothId\r\n     let newArray\r\n  \r\n    //  setteethSelected(prev => [...prev,`${division}${index}`])\r\n    //  console.log(\"Selected teeth set :::::\", teethSelected)\r\n     if(division === 1)   \r\n         {\r\n             toothId  = upperArch1.findIndex(t => t.index === index)\r\n             newArray = [...upperArch1];\r\n            (newArray[toothId].state = !newArray[toothId].state)  \r\n             handleAddRemoveTooth(newArray[toothId].state,division,index)\r\n            setUpperArch1(newArray)\r\n         }\r\n     else if(division === 2)         \r\n          {\r\n            toothId  = upperArch2.findIndex(t => t.index === index)\r\n            newArray = [...upperArch2];\r\n            (newArray[toothId].state = !newArray[toothId].state)\r\n            handleAddRemoveTooth(newArray[toothId].state,division,index)\r\n            setUpperArch2(newArray)\r\n          } \r\n\r\n     else if(division === 3)      \r\n            {\r\n                toothId  = lowerArch3.findIndex(t => t.index === index)\r\n                newArray = [...lowerArch3];\r\n               (newArray[toothId].state = !newArray[toothId].state)\r\n               handleAddRemoveTooth(newArray[toothId].state,division,index)\r\n                setLowerArch3(newArray)\r\n            }   \r\n     else if( division === 4)\r\n            {\r\n                toothId  = lowerArch4.findIndex(t => t.index === index)\r\n                newArray = [...lowerArch4];\r\n                (newArray[toothId].state = !newArray[toothId].state)\r\n                handleAddRemoveTooth(newArray[toothId].state,division,index)\r\n                setLowerArch4(newArray)\r\n            }\r\n\r\n } \r\n\r\nconst handleToothReset = (option) => {\r\n    // console.log(\"In handleToothReset\",option)\r\n  let newArray;\r\n  \r\n if(option === 'None')   \r\n  {\r\n\r\n    newArray = [...upperArch1]\r\n    newArray.forEach(t => t.state = false)\r\n    setUpperArch1(newArray)\r\n  \r\n   newArray = [...upperArch2]\r\n   newArray.forEach(t => t.state = false)\r\n   setUpperArch2(newArray)\r\n\r\n   \r\n   newArray = [...lowerArch3]\r\n   newArray.forEach(t => t.state = false)\r\n   setLowerArch3(newArray)\r\n\r\n   \r\n   newArray = [...lowerArch4]\r\n   newArray.forEach(t => t.state = false)\r\n   setLowerArch4(lowerArch4)\r\n   \r\n   setteethSelected([])\r\n  }\r\n  else if(option === 'Upper Arch')\r\n  {\r\n    newArray = [...upperArch1]\r\n    newArray.forEach(t => t.state = true)\r\n    setUpperArch1(newArray)\r\n  \r\n   newArray = [...upperArch2]\r\n   newArray.forEach(t => t.state = true)\r\n   setUpperArch2(newArray)\r\n\r\n   setteethSelected(prev => [...prev,'11','12','13','14','15','16','17','18','21','22','23','24','25','26','27','28'])\r\n  }\r\n else if( option === 'Lower Arch')\r\n {\r\n    newArray = [...lowerArch3]\r\n    newArray.forEach(t => t.state = true)\r\n    setLowerArch3(newArray)\r\n \r\n    \r\n    newArray = [...lowerArch4]\r\n    newArray.forEach(t => t.state = true)\r\n    setLowerArch4(lowerArch4)\r\n    \r\n    setteethSelected(prev => [...prev,'41','42','43','44','45','46','47','48','31','32','33','34','35','36','37','38'])\r\n\r\n }\r\n\r\n\r\n}\r\nconst handleProductSelection = (product) => {\r\n      //  event.preventDefault() \r\n      //  console.log(\"Product selected  in tooth selector:\", product)\r\n  \r\n       setProductSelected(product);\r\n       if(product.slabPrice){\r\n         setShowSlabPrice(true)\r\n        setValues({\r\n          ...values,\r\n          slab1Price :product.slab1.s1price,\r\n          slab1End :  product.slab1.end,\r\n          slab2End :  product.slab2.end,\r\n          slab2Price :product.slab2.s2price,\r\n          slab3Price: product.slab3.s3price\r\n        })\r\n       }  \r\n       \r\n  }\r\n\r\nconst handleProductChange = () => {\r\n  setProductSelected(null)\r\n}\r\nconst handleChange = name => event => {\r\n   event.preventDefault()\r\n   \r\n   setValues({...values,[name]:event.target.value})\r\n}\r\nconst handleJobEdit =() => {\r\n  // console.log(\"JOB ID IN EDIT \",job.id)\r\n  let productTypeSeleceted = productTypes.filter(p => p.name === productSelected.productType.name )\r\n\r\n  let newValues ={\r\n    id: job.id,\r\n    units : teethSelected.length,\r\n    price: productSelected.price,\r\n    product : productSelected.name,\r\n    type:productSelected.productType.name,\r\n    productTypeCategory:productTypeSeleceted[0].category.name,\r\n    productId:productSelected._id,\r\n    discount:values.discount,\r\n    discount_type:values.discount_type,\r\n    total : calculateBill(),  \r\n    slab1End,\r\n    slab1Price,\r\n    slab2End,\r\n    slab2Price,\r\n    slab3Price,  \r\n    teethSelected\r\n  }\r\n  \r\n  // console.log(\"NEW JOB TO BE SAVED IS :\",newValues)\r\n  onEditJob(newValues)\r\n   setValues({\r\n    id:0, \r\n   units:0,\r\n   price:0,\r\n   discount:0,\r\n   total:0,\r\n   discount_type:'a',\r\n   product:'',\r\n   category:'',\r\n   productId:'',\r\n   type:'',\r\n   slab1End:0,\r\n   slab1Price:0,\r\n   slab2End:0,\r\n   slab2Price:0,\r\n   slab3Price:0,\r\n   \r\n   })\r\nhandleToothReset('None')\r\nsetProductSelected(null)\r\n}\r\nconst handleJobSave = () => { \r\n \r\n   let productTypeSeleceted = productTypes.filter(p => p.name === productSelected.productType.name )\r\n  //  console.log(\"Details of product type selected :\",productTypeSeleceted[0])\r\n\r\n\r\n  let newValues ={\r\n\r\n    units : teethSelected.length,\r\n    price: productSelected.price,\r\n    product : productSelected.name,\r\n    type:productSelected.productType.name,\r\n    productTypeCategory:productTypeSeleceted[0].category.name,\r\n    productId:productSelected._id,\r\n    discount:values.discount,\r\n    discount_type:values.discount_type,\r\n    total : calculateBill(),    \r\n    slab1End,\r\n    slab1Price,\r\n    slab2End,\r\n    slab2Price,\r\n    slab3Price,\r\n    teethSelected\r\n  }\r\n \r\n  onJobSave(newValues)\r\n  setValues({\r\n         id:0, \r\n        units:0,\r\n        price:0,\r\n        discount:0,\r\n        total:0,\r\n        discount_type:'a',\r\n        product:'',\r\n        category:'',\r\n        productId:'',\r\n        type:'',\r\n        slab1End:0,\r\n        slab1Price:0,\r\n        slab2End:0,\r\n        slab2Price:0,\r\n        slab3Price:0,\r\n        \r\n        })\r\n   handleToothReset('None')\r\n   setProductSelected(null)\r\n}\r\nconst calculateBill = () => {\r\n  // console.log(\"Product SELECTED :::::\",productSelected)\r\n  let amount = 0;\r\n  \r\n  if(productSelected.slabPrice){\r\n    // console.log(\"SlabPrice true\")\r\n     let totalTeeth = teethSelected.length\r\n    //  let  slab1End = productSelected.slab1.end\r\n    //  let  slab2End = productSelected.slab2.end\r\n    \r\n     let teethArray = 0;\r\n    while(teethArray < slab1End && teethArray < totalTeeth)\r\n     {\r\n          amount= amount + parseInt(slab1Price)\r\n          teethArray++\r\n          // console.log(\"Amount:\",amount)\r\n     } \r\n     if(slab2End){\r\n       while(teethArray < slab2End && teethArray<totalTeeth){\r\n        amount= amount + parseInt(slab2Price)\r\n        teethArray++\r\n        // console.log(\"Amount:\",amount)\r\n\r\n       }\r\n     }\r\n     if(teethArray < totalTeeth ){\r\n       while(teethArray < totalTeeth){\r\n          amount= amount + parseInt(slab3Price)\r\n          teethArray++\r\n          \r\n\r\n       }\r\n     }\r\n  }\r\n  else{\r\n    amount = productSelected.price*teethSelected.length\r\n    \r\n  }\r\n  let discount = values.discount \r\n  if(values.discount_type === 'p')\r\n  {\r\n    discount = (values.discount * amount)/100   \r\n    } \r\n  return (amount-discount)\r\n}\r\n\r\n const slabPriceForm = () => {\r\n   return ( <div>\r\n        { productSelected.slabPrice  &&    \r\n                        <div className = 'border border-dark rounded fs-4  px-3'>\r\n                            <div className = 'd-flex flex-row justify-content-between'>\r\n                                        <div className=\"d-flex flex-row justify-content-around py-2 mx-2 \">\r\n                                            <div className=\"d-flex flex-row \">\r\n                                            <div className = 'w-75'> First </div> \r\n                                                <input className = 'form-control w-25 mx-2' type = 'number'\r\n                                                                                            name = 'slEnd1' \r\n                                                                                            value = {slab1End}\r\n                                                                                            onChange = {handleChange('slab1End')}\r\n                                                                                            />\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-row \">\r\n                                            <div className = 'w-75'> Units@ </div>\r\n                                               <input className = 'form-control w-25' name = 's1Price' \r\n                                                                                      type = 'number'\r\n                                                                                      value = {slab1Price}\r\n                                                                                      onChange = {handleChange('slab1Price')}                                                                                      \r\n                                                                                      />\r\n                                            </div>\r\n                                            <div>Per Unit</div>\r\n                                        </div>\r\n                                        </div>     \r\n                             \r\n                          {   (slab2End > 0) && <div className=\"d-flex flex-row justify-content-around  py-2\"  >\r\n                                <div className=\"d-flex flex-row \">\r\n                                <div className = 'w-75'>  Next</div>\r\n                                    <input className = 'form-control w-25 mx-2' name = 'slEnd2'\r\n                                                                                type = 'number'    \r\n                                                                                value = {slab2End} \r\n                                                                                onChange = {handleChange('slab2End')}                                                                                \r\n                                                                                />\r\n                                </div>\r\n                                <div className=\"d-flex flex-row \">\r\n                                    <div className = 'w-75'> Units@ </div>\r\n                                         <input className = 'form-control w-25' name = 's2Price' \r\n                                                                                type = 'number'\r\n                                                                                value = {slab2Price}\r\n                                                                                onChange = {handleChange('slab2Price')}                                                                                \r\n                                                                                />\r\n                                </div>\r\n                                <div>Per Unit</div>\r\n                            </div>\r\n                               }\r\n\r\n\r\n                            <div className=\"d-flex flex-row  py-2\">\r\n                                <div className=\"w-50 \">\r\n                                    Remaining Units@ \r\n                                </div>\r\n                                <div className=\"w-25 \">\r\n                                    <input className = 'form-control' name = 's3Price' \r\n                                                                      type = 'number'    \r\n                                                                      value = {slab3Price} \r\n                                                                      onChange = {handleChange('slab3Price')}                                                                      \r\n                                                                      />\r\n                                    </div>\r\n                                    <div className =  'px-2'>Per Unit</div>\r\n                            </div>\r\n                                \r\n\r\n                      \r\n                        </div>\r\n                   }\r\n\r\n     </div>\r\n   )\r\n }\r\n\r\n\r\n\r\nconst toothSelectionForm = () => {\r\n\r\n  \r\n \r\n return (\r\n            <div className = 'tooth-container' >\r\n                      \r\n              <div className = 'd-flex justify-content-between lh-1'>\r\n                  <div>{productSelected.product_type}</div>\r\n                  <div>{productSelected.productTypeCategory}</div>\r\n                  <div className = 'd-inline-flex '>\r\n                    <div className = 'fs-2'>{productSelected.name}</div> \r\n                    <div className = 'btn btn-secondary mx-2 fs-3'\r\n                          onClick = {handleProductChange} >Change</div>\r\n                  </div>\r\n                  \r\n              </div>\r\n              <div className = ' border border-dark  px-auto toothSelector'>\r\n                  <div className = 'd-flex justify-content-between bg-info fs-4 text-white p-2'> \r\n                          <div className = ''>Select Teeth</div>\r\n                          <DropdownMenu title = {'Quick Select'} \r\n                                        option1 = {'None'}\r\n                                        option2 = {'Upper Arch'}\r\n                                        option3 = {'Lower Arch'} \r\n                                        onSelectOption = {handleToothReset}        \r\n                                          />\r\n                  </div>\r\n            \r\n              <div className = \"d-flex\">\r\n                  <ToothList selectorClass = 'flex-md-row-reverse' \r\n                              division = {1} \r\n                              handleSelectTooth = {handleToothSelection}\r\n                              selectedTeeth = {upperArch1}                              \r\n                              />\r\n                                  <span className = \"divider-vt\"></span>\r\n                                  <span> <ToothList division = {2}  \r\n                                                    handleSelectTooth = {handleToothSelection}\r\n                                                    selectedTeeth = {upperArch2}  \r\n                                                    /> </span>\r\n              </div>\r\n                  \r\n              <div className = 'divider-hz '></div>\r\n\r\n\r\n              <div className = \"d-flex\">\r\n                  <ToothList selectorClass = 'flex-row-reverse' \r\n                              division = {4}   \r\n                              handleSelectTooth = {handleToothSelection} \r\n                              selectedTeeth = {lowerArch4}  \r\n                              />\r\n                                  <span className = \"divider-vt\"></span>\r\n                                  <span> <ToothList division = {3}  \r\n                                                    handleSelectTooth = {handleToothSelection}\r\n                                                    selectedTeeth = {lowerArch3}                                                            \r\n                                                    /> </span>\r\n              </div>\r\n              </div>\r\n\r\n              <div className = 'd-flex flex-column justify-content-between fs-4 m-2 '>\r\n                <div>\r\n                    <div>Teeth :{teethSelected.join()}</div>\r\n                    <div>Units :{teethSelected.length} </div>\r\n                    { !productSelected.slabPrice && <div className = 'w-50'>Unit Rate : <input type = 'number'\r\n                                            className = 'input-group' \r\n                                            defaultValue = {productSelected.price}\r\n                                            onChange = {handleChange('price')}\r\n                                            />\r\n                                            </div>}\r\n                    \r\n                    {teethSelected.length > 0 && <div className = \"fs-3\">Total : {calculateBill()} </div> }                       \r\n                   \r\n                    </div>\r\n                   {productSelected.slabPrice && <div>{slabPriceForm()}</div>}\r\n\r\n               \r\n                <div className = 'd-flex flex-column mw-50'>\r\n                  <div className=\"d-flex flex-row justify-content-between\">\r\n                    <div className=\"col-5\">Discount Type:\r\n                        <select  onChange = {handleChange('discount_type') }> \r\n                              <option value=\"p\">Precent</option>\r\n                              <option value=\"a\" selected>Amount</option>\r\n                          </select> \r\n                    </div>\r\n                        \r\n                      <div className = \"col-5 \">Discount: <input type = 'number'\r\n                                              className = 'input-group'  \r\n                                              value = {values.discount}                                              \r\n                                              onChange = {handleChange('discount')}\r\n                                              /></div>\r\n\r\n                  </div>\r\n                      \r\n                    <div className=\"d-flex flex-row justify-content-between\">\r\n                      <div className=\"my-3 fs-3\">\r\n                        Gross Amount: {calculateBill()}\r\n                      </div>\r\n                      <div className = 'd-flex  flex-md-column align-items-end flex-sm-row mt-3'>\r\n                        <button className = \" btn btn-success fs-4 my-3 \"\r\n                                onClick ={(e)=>{\r\n                                  e.preventDefault() \r\n                                 if(update){\r\n                                  if(teethSelected.length>0) handleJobEdit()\r\n                                  else {\r\n                                    let reply =  window.confirm(\"No Teeth selected , Are you sure you want to continue?\")        \r\n                                      if(reply === true) \r\n                                            handleJobEdit()\r\n                                            \r\n                                 }  \r\n                                  \r\n                                 } \r\n                                 else{\r\n                                   \r\n                                                                \r\n                                  if(teethSelected.length>0) handleJobSave()\r\n                                 else {\r\n                                         let reply =  window.confirm(\"No Teeth selected , Are you sure you want to continue?\")        \r\n                                           if(reply === true) \r\n                                                 handleJobSave()\r\n                                                 \r\n                                      }\r\n                                    }               \r\n                                      \r\n                                    }\r\n                                  }\r\n                                >Save</button>                             \r\n                           \r\n                           {/* <div className = '  btn btn-secondary fs-3 my-3 '\r\n                            style = {{marginLeft:'45%'}}\r\n                            onClick = {() => {\r\n                              setValues({\r\n                                teethArray :[],\r\n                                units:0,\r\n                                price:0,\r\n                                discount:0,   \r\n                                discount_type:'a'                                   \r\n                            })\r\n                              onAddOrderCancel()\r\n                            }\r\n\r\n                            }\r\n                            >Cancel</div>  */}\r\n                       </div> \r\n                                        </div>\r\n                    \r\n                      \r\n                    \r\n                </div>\r\n                  \r\n\r\n                                      \r\n              </div>\r\n            </div>\r\n          )\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'container '>\r\n          {productSelected   &&   <>     {toothSelectionForm()}     </>           }\r\n          {!productSelected &&  !update  && <>\r\n           <ProductsTable onProductSelection = {handleProductSelection} />\r\n           {/* <div className = '  btn btn-secondary fs-3 my-3 '\r\n                            style = {{marginLeft:'45%'}}\r\n                            onClick = {e => {\r\n                              setValues({\r\n                                teethArray :[],\r\n                                units:0,\r\n                                price:0,\r\n                                discount:0,   \r\n                                discount_type:'a'                                   \r\n                            })\r\n                              onAddOrderCancel()\r\n                            }\r\n\r\n                            }\r\n                            >Cancel**</div>  */}\r\n                             </>  } \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Teethselector;","import React,{useState,useEffect} from 'react';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Teethselector from './Teethselector';\r\n\r\nconst  JobSummary = ({job,index,onJobDelete,onJobEdit,onAddOrderCancel,onEditJobClick}) => {\r\n\r\n  const [update,setUpdate] = useState(false)\r\n  \r\n   \r\n  const {\r\n        id,\r\n        units ,\r\n        price,\r\n        product,\r\n        type,\r\n        productId,\r\n        discount,\r\n        discount_type,\r\n        total,\r\n        productTypeCategory,\r\n        teethSelected,\r\n      } = job\r\n\r\nconst  handleJobEdit = (index) => {\r\n    setUpdate(true)\r\n  \r\n}\r\nconst handleEditCancel = ()=>{\r\n    setUpdate(false)\r\n}\r\n\r\nuseEffect(()=>{\r\n   \r\n setUpdate(false)\r\n},[job])\r\n\r\n    return (\r\n        <>\r\n        {!update && <div className = ' border border-secondary' >\r\n                         \r\n        <div className = 'd-flex flex-row w-75 justify-content-start'>\r\n            \r\n              <div className = '  border border-dark p-2 mx-3 '> {type}</div>\r\n              <div className = 'border border-dark p-2 mx-5'>{productTypeCategory}</div> \r\n              \r\n            \r\n            </div>\r\n            <div className = 'd-flex w-75 justify-content-start align-items-center'>\r\n\r\n                <div className = 'text-primary fs-3'><b>{product}</b></div>\r\n                <div className = 'fs-3 mx-5'><b>{teethSelected.join()}</b></div>         \r\n            </div>   \r\n            <div className = 'd-flex'>\r\n            <div className = 'd-flex w-75 justify-content-start align-items-center my-1 mx-1'>\r\n               <div><b>{units}</b> Unit  @ <b>{price}</b> </div>\r\n               <div className = 'mx-2' >{discount? `discount : ${discount}` : '' }</div> \r\n               <div className = 'mx-2'>{discount? `discount type : ${discount_type}`:''}</div>\r\n               <div className = 'mx-2'>Total charge :<b> {total}</b></div>\r\n              </div>\r\n              <div className ='d-flex w-25 justify-content-end'>\r\n               <div className = 'btn '>\r\n                     <Edit  style = {{fontSize : 24 ,border : '1px solid black',borderRadius : '0.5rem'}}\r\n                             onClick = {()=> handleJobEdit(index)}\r\n                             />\r\n                     \r\n                      </div>\r\n                <div className = 'btn'> \r\n                     <DeleteOutline style ={{ color :'red',fontSize : 24 , border:'1px solid red',borderRadius : '0.5rem'}}\r\n                                    onClick = {()=>{\r\n                                        onJobDelete(id)\r\n                                    }}\r\n                                    /> \r\n                      </div>\r\n             </div>\r\n             </div>  \r\n            <div className = 'd-flex justify-content-end'>\r\n             \r\n            </div>\r\n        </div>}\r\n        {update && <div>\r\n                 <Teethselector job = {job} \r\n                                onAddOrderCancel = {handleEditCancel}  \r\n                                onJobSave = {onJobEdit}\r\n                                onEditJob = {onEditJobClick}\r\n                                />\r\n            </div>}\r\n        </>\r\n       \r\n    );\r\n}\r\n\r\nexport default JobSummary;","import React,{Fragment, useState,useEffect} from 'react';\r\nimport JobDisplay from './JobDisplay';\r\nimport Teethselector from './Teethselector';\r\nimport JobSummary from './jobSummary';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst JobSet = ({products,onAddOrderCancel,onConfirmOrder,onJobEdit,onDelete,onEditJob}) =>  {\r\n\r\n const [jobs,setJobs] = useState([])\r\n\r\n\r\n\r\n\r\n\r\n const handleJobSave = (jobValues) => { \r\n    console.log(\"New job received :\",jobValues)\r\n \r\n   \r\n   setJobs(prev => [...prev,jobValues])\r\n\r\n }\r\n\r\nconst handleJobDelete = (index) => {\r\n   console.log(\"index Received\",index)\r\n   \r\n    setJobs(jobs.filter((j,i)=>i !== index ))  \r\n\r\n}\r\n\r\n\r\nconst handleJobEdit = (index) => {\r\n  console.log(\"Job Selected after Edit in**** JobSET :\",jobs[index])\r\n   \r\n}\r\n\r\n const showJobDetails = () => {\r\n  \r\n\r\n  \r\n  \r\n    return(\r\n\r\n      <div>\r\n      <div><JobDisplay jobs = {products} /></div>  \r\n      {products.length > 0  && \r\n                     <div className = ' m-auto fs-4 job-details'>\r\n                      {\r\n                                 products.map((job,index) =>                                  \r\n                                  <JobSummary  job = {job}  \r\n                                               index = {index}  \r\n                                               onJobDelete = {onDelete}\r\n                                               onJobEdit = {handleJobEdit}\r\n                                               onAddOrderCancel = {onAddOrderCancel}                                             \r\n                                               onEditJobClick = {onEditJob}\r\n                                                />\r\n                                           \r\n                                           )}\r\n         \r\n      </div>}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n useEffect(()=>{\r\n  \r\n  if(products.length>0){\r\n    setJobs(products)\r\n  }\r\n},[])\r\n\r\n\r\nconsole.log(\"Jobs confirmed :\",jobs.length)\r\n \r\n    return (\r\n        <div className = 'd-flex flex-column '>\r\n            {console.log(\"Products received in JobSet :\",products)}\r\n            {jobs.length > 0 && \r\n                <Fragment>\r\n                        <div>{showJobDetails()}</div>\r\n                         \r\n                        {/* <div className = \"btn btn-info text-white fs-3 w-10 mx-auto my-3  \"\r\n                            onClick = {()=>onConfirmOrder(jobs)}\r\n                            >Confirm Order</div> */}\r\n                </Fragment>\r\n                }\r\n                \r\n        { jobs.length<1 &&   <Teethselector     onAddOrderCancel = {onAddOrderCancel} \r\n                               onJobSave = {onConfirmOrder}\r\n                               />   }        \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobSet;","import React,{useState,useContext, useEffect} from 'react';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport tableIcons from '../icons/MaterialUiIcons'\r\nimport {getClients} from '../admin/clientApi'\r\nimport UserContext from '../context/UserContext';\r\nimport ClientContext from '../context/ClientContext'\r\n\r\n\r\nconst ClientOrderTable = ({onClientSelection}) =>  {\r\n\r\n  \r\n  const [clients,setClients] = useState([])\r\n  const {user,token} = useContext(UserContext)\r\n  const {setClientSelected} = useContext(ClientContext)\r\n  const  [values,setValues] = useState({\r\n   error:'',\r\n   loading:false\r\n })\r\n\r\n\r\n  const {error,loading} = values\r\n\r\n\r\n  \r\n    const columns = [\r\n        {title : 'Name',field : 'name',defaultSort:'asc',cellStyle : {fontSize:'1.8rem'}},      \r\n        {title : 'Mobile',field : 'phoneM',cellStyle : {fontSize:'1.8rem'}},\r\n        {title : 'City',field : 'city',cellStyle : {fontSize:'1.8rem'}},\r\n        \r\n    ]\r\n    const fetchClients =  async () => {\r\n      setValues({error : '',loading : true});\r\n    await  getClients(user._id,token)\r\n        .then(data => {\r\n            if(data.error){\r\n            setValues({error : \"Error fetching data\",loading : false})       \r\n            window.alert(\"Failed to Connect to database \")\r\n            }\r\n            else {\r\n                setClients(data)\r\n                setValues({error : '',loading : false})\r\n            }\r\n        })\r\n        .catch(err => {       \r\n                            setValues({error : err,loading: false})\r\n                            window.alert(\"Failed to Connect to database \")\r\n                          \r\n                            })\r\n\r\n} \r\nuseEffect(()=>{\r\n  fetchClients()\r\n  \r\n},[])\r\n \r\n\r\n    return (\r\n        <div className = 'container-fluid ' >\r\n          {loading && <div>Loading...</div>}\r\n          \r\n        <MaterialTable columns = {columns} \r\n                       data = {clients}   \r\n                       icons = {tableIcons} \r\n                       title = \"Client Data\"\r\n                       onRowClick = {(event,rowData) => {   \r\n                                                                   \r\n                          onClientSelection(rowData)\r\n                       }}\r\n                                           \r\n                       options = {{filtering : true, pageSizeOptions:[10,25,50,100],\r\n                                    pageSize : 25     \r\n                                   ,paginationType:'stepped',exportAllData : true,\r\n                                    padding:'dense',\r\n                                    exportFileName : 'clientdata',addRowPosition:\"first\",\r\n                                    actionsColumnIndex:6,\r\n                                    columnsButton:true,                                   \r\n                                    headerStyle: {\r\n                                        backgroundColor: '#01579b',\r\n                                        color: '#FFF',\r\n                                        fontSize:'2rem',\r\n                                       \r\n                                      },\r\n                                     style:{\r\n                                     fontSize : '2rem'\r\n                                   } \r\n                                }}\r\n                                                   \r\n                       />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ClientOrderTable;","import React,{useState,useContext,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {getToDate} from '../components/date.js'\r\nimport JobSet from '../components/JobSet';\r\nimport ClientOrderTable from './ClientOrderTable.jsx';\r\nimport { getNextOrderSequence, updateOrder } from '../admin/clientApi/index.js';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Teethselector from './Teethselector.jsx';\r\n// import { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n// import { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\n// import LuxonUtils from '@date-io/luxon';\r\nimport {\r\n    \r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n  } from '@material-ui/pickers';\r\n  \r\n\r\nimport UserContext from '../context/UserContext.js';\r\nimport ClientContext from '../context/ClientContext.js';\r\nimport OrderContext from '../context/OrderContext.js';\r\nimport { createOrder } from '../admin/clientApi/index.js';\r\nimport Menu from '../components/menu'\r\nimport '../css/order.css'\r\n\r\nimport { IconButton } from '@mui/material';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport {getClients} from '../admin/clientApi'\r\n\r\n\r\n\r\n\r\nconst NewOrderForm = () =>  {\r\n\r\nconst history = useHistory()\r\n\r\nconst {user,token} = useContext(UserContext)\r\n\r\nconst {clientSelected,onClientSelect,setPathRedirect,setRedirect,setClientSelected} = useContext(ClientContext)\r\n const {fetchOrders,orderSelected,setOrderSelected} = useContext(OrderContext)\r\n// const {products} = useContext(ProductContext)\r\nconst [orderNumber,setOrderNumber] = useState(null)\r\nconst [currentOrderTab,setCurrentOrderTab] = useState(1)\r\n\r\n\r\n// let totalOrderAmount = 0\r\nconst [values,setValues] = useState({\r\n    \r\n    orderNo:0,\r\n    orderAmount:0,\r\n    status:'New',\r\n    orderDate:new Date(),\r\n    updated:new Date(),\r\n    duedate:new Date(),\r\n    dateIn:new Date(),\r\n    deliverytime:'',\r\n    deliveryMethod:'',\r\n    department:'',\r\n    ordertime:'',\r\n    client:'',\r\n    clientId:'',\r\n    patient:'',\r\n    user:user.name,\r\n    shipment:'',\r\n    assignedTo:'',\r\n    error:'',\r\n    additionalAmount:0,\r\n    trayNo:0,\r\n    shade1:'',\r\n    shade2:'',\r\n    shade3:'',\r\n    shadeNote:'',\r\n    articulatorTag:'',\r\n    priority:'',  \r\n    notes:'',\r\n    priceBand:'',\r\n    billTo:'',\r\n    orderNotes:'',\r\n    invoiceId:'',\r\n    productsList:'',\r\n    products:[],\r\n    workType:'new',\r\n    log:[],\r\n    modelno:'',\r\n})\r\n\r\n\r\nconst [alert,setAlert] = useState(false)\r\nconst [message,setMessage] = useState('')\r\nconst [isUpdate,setIsUpdate] = useState(false)\r\nconst [addProduct,setAddProduct] = useState(false)\r\nconst [order_Date,handleOrderDate] = useState(new Date())\r\nconst [due_Date,handleDueDate] = useState(new Date())\r\nconst [dateIn_Date,handleDateIn] = useState(new Date())\r\n// const [update_Date,handleUpdateDate] = useState(new Date())\r\nconst [jobs,setJobs] = useState([])\r\nconst [clients,setClients] = useState([])\r\nconst [dataFetch,setDataFetch] = useState({\r\n    error:'',\r\n    loading:false\r\n})   \r\nconst {_id,modelno,orderNo,orderAmount,status,orderDate,updated,dueDate,dateIn,deliverytime,deliveryMethod,ordertime,client,clientId,\r\n       patient,shipment,additionalAmount,trayNo,shade1,shade2,shade3,shadeNote,articulatorTag,priority,notes,department,\r\n       priceBand,billTo,orderNotes,invoiceId,products,productsList,assignedTo,workType} = values\r\n\r\nconst fetchClients =  async () => {\r\n        setDataFetch({error : '',loading : true});\r\n      await  getClients(user._id,token)\r\n          .then(data => {\r\n              if(data.error){\r\n              setDataFetch({error : \"Error fetching data\",loading : false})       \r\n              window.alert(\"Failed to Connect to database \")\r\n              }\r\n              else {\r\n                  setClients(data)\r\n                  setDataFetch({error : '',loading : false})\r\n              }\r\n          })\r\n          .catch(err => {       \r\n                              setDataFetch({error : err,loading: false})\r\n                              window.alert(\"Failed to Connect to database \")\r\n                            \r\n                              })\r\n  \r\n  } \r\n\r\nconst handleChange = name => event => {\r\n  const value = event.target.value;  \r\n  setValues({...values,[name]:value})\r\n \r\n} \r\n\r\n// const handleClientSelect = (data) => {\r\n//   console.log(\"Client in new Order form :\",data)\r\n//   setNewClientSelected(data)\r\n//   onClientSelect(data)\r\n//   setClientSelected(data)\r\n  \r\n\r\n// }\r\nconst renderTable = () => {\r\n    return(\r\n      <div>\r\n        <table style = {{width:'60%',fontSize:'1.6rem',marginTop:'2rem'}} className='border border-dark mx-auto'>\r\n           <thead>\r\n          <tr className='fs-3 bg-info fw-bold p-2' >\r\n            <td>#</td>\r\n            <td className='col border border-secondary'>Name</td>\r\n            <td className='col border border-secondary'>Mobile</td>\r\n            <td className='col border border-secondary'>City</td>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n        {clients.length > 0 && clients.map((client,index) =><tr key = {client._id} \r\n                                                                style = {{fontSize:'1.8rem',padding:'1.2rem',cursor:'pointer'}}\r\n                                                                onClick= {()=>{    \r\n                                                                    console.log(\"Client : \",client)                                                                 \r\n                                                                      setClientSelected(client)}}\r\n                                                                >\r\n                                                      <td className='border border-secondary p-1'>{index+1}</td>\r\n                                                      <td className='border border-secondary p-1'>{(client.name).toUpperCase()}</td>\r\n                                                      <td className='border border-secondary p-1'>{client.phoneM}</td>\r\n                                                      <td className='border border-secondary p-1'>{client.city}</td>\r\n                                                   </tr>) }\r\n              </tbody>   \r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\nconst calculateTotalBill = (jobset) => {  \r\n\r\n    let totalBill = 0;    \r\n    for(let i =0; i<jobset.length;i++){\r\n       totalBill += jobset[i].total  \r\n        \r\n    }       \r\n   \r\n    return totalBill \r\n}\r\nconst calculateFinalBill = (jobset) => {\r\n    if(additionalAmount && additionalAmount>0)\r\n             return ( calculateTotalBill(jobs) +  parseInt(additionalAmount))\r\n\r\n   else return calculateTotalBill(jobs)\r\n\r\n} \r\n\r\nconst handleOrderCancel = () => {\r\n \r\n    // setProductSelected(null)\r\n    //redirect to ordertable\r\n    \r\n    history.goBack();\r\n}\r\nconst addTojobs = job => {\r\n    \r\n    let temp  = {...job}\r\n    temp.id = jobs.length+1;\r\n    let newJobs = [...jobs,temp]\r\n    setJobs(newJobs)\r\n    let total = calculateTotalBill(newJobs)\r\n    setValues({...values,orderAmount:total})\r\n    // console.log(\"NEW JOBS RECEIVED IN ADDTOJOBS\",newJobs)\r\n    setAddProduct(false)\r\n}\r\n\r\nconst addToJobCancel = ()=>{\r\n    setAddProduct(false)\r\n\r\n}\r\nconst editExistingJob = job => {\r\n    // console.log(\"JOB RECIEVED FOR EDITING :\",job)\r\n    let replaceIndex = jobs.findIndex(j => j.id === job.id)\r\n    let newJobs = [...jobs]\r\n    newJobs[replaceIndex] = {...job}\r\n    setJobs(()=> [...newJobs])  \r\n\r\n    // console.log(\"Job recieved in NewOrderForm NEWJOBS********: \",newJobs)\r\n    let total = calculateTotalBill(newJobs)\r\n    setValues({...values,orderAmount:total})\r\n}\r\nconst deleteExistingJob = id => {     \r\n    \r\n      \r\n     if(jobs.length === 1){\r\n        let reply =  window.confirm(\"Are you sure you want to delete the order ?\")\r\n        if(reply === true){\r\n            let newJobs = jobs.filter(j => j.id !== id)          \r\n            setJobs(()=>[...newJobs])\r\n            calculateTotalBill(jobs)\r\n            let total = calculateTotalBill(newJobs)\r\n            setValues({...values,orderAmount:total})\r\n     }\r\n    }\r\n     else{\r\n        let newJobs = jobs.filter(j => j.id !== id)\r\n        // console.log(`New JOB :::AFTER DELETING ID ${id} `,newJobs)\r\n        setJobs(newJobs)\r\n        let total = calculateTotalBill(newJobs)\r\n        setValues({...values,orderAmount:total})\r\n\r\n     }\r\n    \r\n}\r\n\r\n\r\nconst handleOrderSave = ( )=>{\r\n  \r\n    let jobset = [...jobs]\r\n\r\n   \r\n    \r\n    \r\n    const newValues = {\r\n       \r\n        orderNo:orderNumber,        \r\n        orderAmount: calculateFinalBill(jobs),\r\n        products : jobset,           \r\n        modelno:modelno,\r\n        status:status,\r\n        orderDate:order_Date,       \r\n        updated:new Date(),\r\n        duedate:due_Date,\r\n        dateIn:dateIn_Date,\r\n        deliverytime,\r\n        deliveryMethod,\r\n        ordertime,\r\n        client:clientSelected.name,\r\n        clientId:clientSelected._id,\r\n        patient,\r\n        user:user.name,        \r\n        shipment:'',\r\n        assignedTo,\r\n        additionalAmount,\r\n        trayNo:0,\r\n        shade1,\r\n        shade2,\r\n        shade3,\r\n        shadeNote,\r\n        articulatorTag,\r\n        priority,          \r\n        priceBand:clientSelected.priceBand,\r\n        billTo:clientSelected.billTo,\r\n        orderNotes,\r\n        department,\r\n        invoiceId:'',\r\n        isInvoiced:false,\r\n        workType:'',\r\n        \r\n  \r\n       \r\n     }\r\n   \r\nif(isUpdate){\r\n\r\n    // console.log(\"Order Values  in NewOrderForm UPDATE: \",newValues)\r\n\r\n\r\n    newValues._id = orderSelected._id\r\n   updateOrder(user._id,token,newValues)\r\n   .then(data => {\r\n    if(data.status !==200){\r\n        setMessage('Error While Updating Order')\r\n        setAlert(true)\r\n        setTimeout(()=>setAlert(false),2000)\r\n    }\r\n    else{\r\n          setMessage('Order updated Successfully')\r\n          setAlert(true)\r\n          setTimeout(()=>setAlert(false),2000)\r\n          setPathRedirect(`/order`)\r\n          fetchOrders()\r\n          setRedirect(true)\r\n          setClientSelected(null)\r\n        }\r\n        } )\r\n        .catch(err => {\r\n            setMessage('Error While Updating Data: ')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n\r\n        }) \r\n}\r\nelse {  \r\n    \r\n       \r\n         createOrder(user._id,token,newValues)\r\n          .then(data => {\r\n              if(data.status !==200){\r\n                  setMessage('Error While Saving Order')\r\n                  setAlert(true)\r\n                  setTimeout(()=>setAlert(false),2000)\r\n              }\r\n              else{\r\n                    setMessage('Order Saved Successfully')\r\n                    setAlert(true)\r\n                    setTimeout(()=>setAlert(false),2000)\r\n                    setPathRedirect(`/order`)\r\n                    fetchOrders()\r\n                    setRedirect(true)\r\n                    setClientSelected(null)\r\n              }\r\n          } )\r\n          .catch(err => {\r\n              setMessage('Error While Saving Data: ')\r\n              setAlert(true)\r\n              setTimeout(()=>setAlert(false),2000)\r\n    \r\n                \r\n    \r\n    \r\n          }) \r\n\r\n}\r\n \r\n   history.goBack()\r\n\r\n         \r\n}\r\nconst formHeader = () => {\r\n    return (       <form >        \r\n                                   <div className=\" d-flex flex-column flex-sm-row w-100 fs-4\">\r\n                                      <div className=\"col  border border-dark \">\r\n                                          <div className=\"\">\r\n                                                 <div className = \"d-flex flex-row flex-wrap \">\r\n                                                         <div className = 'col-5  d-flex flex-row mb-1 ' >\r\n                                                             <div className = 'col-6 col-md-4 '>Order # : </div>\r\n                                                             <input className = 'col-6 col-md-8' \r\n                                                                    value = {orderNo}\r\n                                                                    type = 'number'  \r\n                                                                    readOnly                                                                  \r\n                                                                    />                                                        \r\n                                                         </div>\r\n                                                        <div className=\"col-md-1 \"></div>\r\n                                                         <div className = ' col-5 d-flex flex-row mb-1' >\r\n                                                             <div className = 'col-6 col-md-4'>Charge : </div>\r\n                                                             <div className = 'col-6 col-md-8'>{calculateFinalBill(jobs)}</div>\r\n                                                         </div>\r\n                                                  </div>\r\n                                                  <div className=\"d-flex flex-sm-row flex-column justify-content-between\">\r\n                                                         <div className = 'col-sm-5 d-md-inline-flex  ' >\r\n                                                             <div className = 'col-md-4'>Order Date : </div>\r\n                                                            \r\n                                                               <DatePicker selected = {order_Date} \r\n                                                                           onChange = {date => handleOrderDate(date)}\r\n                                                                           dateFormat = 'dd/MM/yyyy'\r\n                                                                           minDate = {new Date()}                                                                        //    isClearable \r\n                                                                           showYearDropdown\r\n                                                                           scrollableMonthYearDropdown\r\n                                                                           \r\n                                                                           />\r\n                                                                                                                    \r\n                                                            \r\n                                                         </div>\r\n                                                       \r\n                                                         <div className = ' col-sm-5 d-md-inline-flex mb-1' >\r\n                                                             <div className = 'col-sm-4'>Model# :</div>\r\n                                                             <input id = 'modelno' className = ' col col-md-8' type = 'number' />                                                            \r\n                                                         </div>\r\n                                                  </div>\r\n                                                  <div className=\"d-flex flex-sm-row flex-column justify-content-between\">\r\n                                                         <div className = 'col-sm-5 d-md-inline-flex mb-1 ' >\r\n                                                             <div className = 'col-md-4 '>Due Date : </div>\r\n                                                           \r\n                                                                <DatePicker selected = {due_Date} \r\n                                                                        onChange = {date => handleDueDate(date)}\r\n                                                                        dateFormat = 'dd/MM/yyyy'\r\n                                                                        minDate = {new Date()}  \r\n                                                                        style = {{zIndex : '1000', fontSize:'1.8rem'}}                                                                                                                                          //    isClearable \r\n                                                                        showYearDropdown\r\n                                                                        scrollableMonthYearDropdown                                                                           \r\n                                                                        />                                                      \r\n                                                         </div>\r\n                                                        \r\n                                                         <div className = ' col-sm-5 d-md-inline-flex mb-1' >\r\n                                                               <div className=\"col-md-4 \">@</div>\r\n                                                             <select id = 'deliverytime'\r\n                                                                     className = 'col col-md-8 ' \r\n                                                                     value = {deliverytime}\r\n                                                                    //  defaultValue={'Evening 4 - 5'}\r\n                                                                     onChange = {handleChange('deliverytime')} >\r\n                                                                  <option value = 'Morning 10 AM'>Morning 10 AM</option>\r\n                                                                  <option value = 'Afternoon 3'>Afternoon 3</option>     \r\n                                                                  <option value = 'Evening 4 - 5' >Evening 4 - 5</option>     \r\n                                                                  <option value = 'Prcel 6:30'>Prcel 6:30</option>     \r\n                                                                  <option value = 'Self Delivery'>Self Delivery</option>     \r\n                                                                  <option value = 'Urgent Any-time'>Urgent Any-time</option>     \r\n                                                                  <option value = '>Next Morning 8AM'>Next Morning 8AM</option>     \r\n                                                              </select>                                                           \r\n                                                         </div>\r\n                                                  </div>\r\n                                                  <div className=\"d-flex flex-sm-row flex-column justify-content-between\">\r\n                                                         <div className = 'col-md-5 d-md-inline-flex mb-1 ' >\r\n                                                             <div className = 'col-md-4 '>Date In : </div>\r\n                                                             \r\n                                                                <DatePicker selected = {dateIn_Date} \r\n                                                                        onChange = {date => handleDateIn(date)}\r\n                                                                        dateFormat = 'dd/MM/yyyy'\r\n                                                                        minDate = {new Date()}                                                                        //    isClearable \r\n                                                                        showYearDropdown\r\n                                                                        scrollableMonthYearDropdown                                                                           \r\n                                                                        />                                                   \r\n                                                         </div>\r\n                                                        \r\n                                                         <div className = 'col-sm-5 d-md-inline-flex' >\r\n                                                               <div className=\"col-md-4\">@</div>\r\n                                                             <select className = 'col col-md-8' \r\n                                                                     id = 'ordertime'\r\n                                                                     value = {ordertime}\r\n                                                                     onChange = {handleChange('ordertime')} >\r\n                                                                 <option></option>\r\n                                                                  <option value = 'Morning 10 AM'>Morning 10 AM</option>\r\n                                                                  <option value = 'Afternoon 3'>Afternoon 3</option>     \r\n                                                                  <option value = 'Evening 4 - 5'>Evening 4 - 5</option>     \r\n                                                                  <option value = 'Prcel 6:30'>Prcel 6:30</option>     \r\n                                                                  <option value = 'Self Delivery'>Self Delivery</option>     \r\n                                                                  <option value = 'Urgent Any-time'>Urgent Any-time</option>     \r\n                                                                  <option value = 'Next Morning 8AM'>Next Morning 8AM</option>     \r\n                                                              </select>                                                           \r\n                                                         </div>\r\n                                                  </div>\r\n \r\n                                          </div>\r\n                                           \r\n                                           \r\n                                           \r\n                                      </div>\r\n                                      \r\n                                      <div className=\"col border border-dark\">\r\n                                        <ul>\r\n                                            <li className = \"d-flex  flex-column flex-md-row \">\r\n                                                <div className=\"col-md-6 d-flex flex-sm-row \">\r\n                                                     <div className =\"col-md-3 col-6\">Client:</div>\r\n                                                     <div className = \"col-md-3 col-6 text-primary \">\r\n                                                             <b>{clientSelected.name}</b></div> \r\n                                                </div>\r\n                                                <div className=\"col-md-6 d-flex flex-sm-row \">                                                 \r\n                                                   <div className = \"col-md-3 col-6\">Balance:</div>\r\n                                                   <div className = \"col-md-3 col-6\">{clientSelected.balance}</div>\r\n                                                   </div>\r\n                                             </li>\r\n                                             \r\n                                             <li className = \"d-flex flex-md-row flex-column\">\r\n                                                 <div className=\"col-md-6 d-flex flex-sm-row \">\r\n                                                       <div className =\"col-md-3 col-6\" >Price Band:</div>\r\n                                                       <div className =\"col-md-3 col-6\">{clientSelected.priceBand}</div>\r\n                                                   </div>\r\n                                              </li>\r\n \r\n                                            <li className = \"d-flex flex-md-row flex-column\">\r\n                                                    <div  className = \"col-md-3 col-6\">Bill To : </div>\r\n                                                    <div className = 'col-md-3 col-6'>{clientSelected.billTo}</div>\r\n                                            </li>\r\n                                            <li className = \"d-flex flex-md-row\">\r\n                                                     <div  className = \"col-md-auto col-6\">Notes : </div>\r\n                                                     <div className = \"col-md-auto col-6\">{clientSelected.notes}</div>\r\n                                            </li>\r\n                                            <li className = \"d-flex flex-md-row flex-column\">\r\n                                                <div className=\"col-md-6 d-flex flex-sm-row \">\r\n                                                   <div className =\"col-md-auto col-6\">Invoice # : </div>\r\n                                                   <div  className = \"col-md-auto col-6\">{invoiceId}</div>\r\n                                                 </div> \r\n                                                   <li  className = \"col-md-auto col-6\">Shipment # </li>\r\n                                                   <li  className = \"col-md-auto col-6\"></li> \r\n                                                                                           \r\n                                            </li>\r\n \r\n                                            </ul> \r\n                                          \r\n \r\n                                      </div>\r\n                                          \r\n                                   </div>\r\n                                   </form>\r\n    )\r\n}\r\n\r\nconst formFooter = () => {\r\n    return( \r\n        <form>\r\n    <div className = ' ' style = {{fontSize : '1.6rem'}}>\r\n\r\n      \r\n        <div className = 'd-flex flex-column flex-md-row  '>\r\n           <div className = 'd-flex flex-row justify-content-between'>\r\n            <div className = 'mx-2' >\r\n                <div>Additional Amount</div>\r\n                <input  type = 'number'\r\n                        style = {{maxWidth:'45vW'}}\r\n                        value = {additionalAmount}                     \r\n                        onChange= {handleChange('additionalAmount') }\r\n                        />\r\n            </div>\r\n            <div className = 'mx-2'>\r\n                <div>Patient</div>\r\n                <input type = 'text'\r\n                       value = {patient}\r\n                       style = {{maxWidth:'45vW'}}\r\n                       onChange = {handleChange('patient')} \r\n                           />\r\n            </div>\r\n            </div>\r\n            <div className = 'd-flex flex-row justify-content-between'>\r\n            <div className = 'mx-2'>\r\n                <div>Delivery Method</div>\r\n                <select     id = 'deliveryMehtod'\r\n                            type = 'text' \r\n                            value = {deliveryMethod}\r\n                            // defaultValue={'Doctor pickup'}\r\n                            onChange = {handleChange('deliveryMethod')} \r\n                            >\r\n                        \r\n                        <option value = 'courier'>courier</option>\r\n                        <option value = 'Delivery Boy' >Delivery Boy</option>\r\n                        <option value = 'Doctor pickup' >Doctor pickup</option>\r\n                        <option value = 'Mail'>Mail</option>\r\n                    </select> \r\n                    \r\n            </div>\r\n            <div className = 'mx-2' >\r\n                <div>Status</div>\r\n                <select  value = {status}\r\n                        //  defaultValue={'New'}\r\n                         onChange = {handleChange('status')}>\r\n                    <option value = 'New' >New</option>\r\n                    <option value = 'In Production'>In Production</option>\r\n                    <option value = 'Complete'>Complete</option>\r\n                    <option value = 'Hold'>Hold</option>\r\n                    <option value = 'Try In'>Try In</option>\r\n                    <option value = 'Cancelled'>Cancelled</option>\r\n                </select>\r\n            </div>\r\n            \r\n            <div className = 'mx-2'>\r\n               <div>{(new  Date()).toDateString()}</div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <hr/>\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center\">\r\n       \r\n        <div className = 'd-flex flex-row  justify-content-start flex-wrap'>          \r\n           <div className = 'mx-2' >\r\n               <div>Pan/Tray#</div>\r\n               <input type = 'number'\r\n                      value = {trayNo}\r\n                      style = {{maxWidth:'45vW'}}\r\n                      onChange = {handleChange('trayNo')}\r\n                       />  \r\n               </div> \r\n\r\n               <div  className = 'mx-2'>\r\n                   <div>Assign To</div>\r\n                   <select style = {{maxWidth : '45vw'}}\r\n                           value = {assignedTo} \r\n                           onChange = {handleChange('assignedTo')} \r\n                            >\r\n                       <option >staff</option>\r\n                   </select>\r\n               </div>\r\n               <div >\r\n                   <div className=\"mx-2\">Manufacturer</div>\r\n                   <select name=\"\" id=\"\">\r\n                       <option>In house Lab</option>\r\n                   </select>\r\n               </div>\r\n\r\n               </div>\r\n            <div className = 'd-flex flex-row '>\r\n                {/* list of Enclosures   */}\r\n              \r\n               <div className = ' btn text-primary fs-4'>\r\n                   Add Enclosures\r\n               </div>\r\n               <div className = 'btn text-primary fs-4'>\r\n                  Edit Enclosures\r\n               </div>\r\n               </div>\r\n        </div>\r\n         <div className = 'd-flex flex-row justify-content-between align-items-center flex-wrap'>\r\n             <div className = 'mx-2' >\r\n                <div >Department</div>\r\n                  <select   style = {{width:'15rem'}}\r\n                            value = {department}\r\n                            onChange = {handleChange('department')}\r\n                            >\r\n                   <option value=\"\"></option>\r\n                   </select>  \r\n             </div>\r\n             <div className = 'mx-2' > \r\n                 <div>Work Type</div>\r\n                \r\n                     <div className = 'form-check form-check-inline'>\r\n                        <label className = 'form-check-label' htmlFor = 'new'>New</label>\r\n                        <input className = 'form-check-input' name=\"worktypeOption\"\r\n                                                              id=\"new\" value = 'new' \r\n                                                              onChange = {handleChange('workType')} \r\n                                                              type=\"radio\"  />\r\n                     </div>\r\n                    <div className = 'form-check form-check-inline'>\r\n                        <label className = 'form-check-label' htmlFor = 'repeat'>Repeat</label>\r\n                        <input className = 'form-check-input' name=\"worktypeOption\" \r\n                                                              id=\"repeat\" value = 'repeat'\r\n                                                              onChange = {handleChange('workType')} \r\n                                                              type=\"radio\"  />\r\n                    </div>\r\n                   <div className=\"form-check form-check-inline\">\r\n                        <label className = 'form-check-label' htmlFor=\"repair\">Repair</label>\r\n                        <input className = 'form-check-input' name=\"worktypeOption\" \r\n                                                                id=\"repair\" value = 'repair'\r\n                                                                onChange = {handleChange('workType')} \r\n                                                                 type=\"radio\" />\r\n                   </div>\r\n                   \r\n               \r\n                 \r\n             </div>\r\n              <div className = 'mx-2'>\r\n                 Sub Doctor\r\n                 <div className=\"d-flex flex-row align-items-center\">\r\n                    <div>Primary Doctor</div>\r\n                    <IconButton>                  \r\n                      <SearchIcon  sx={{fontSize: 30}} />  \r\n                      </IconButton>  \r\n                      <IconButton>                  \r\n                      <AddIcon  sx={{fontSize: 30}} />  \r\n                      </IconButton>\r\n                 </div>\r\n                  \r\n                 {/* create Doc module* */}\r\n                </div> \r\n                <div className = 'mx-2'>\r\n                 Drop Location\r\n                 <div className=\"d-flex flex-row align-items-center\">\r\n                    <div>Primary Address</div>  \r\n                    <IconButton>                  \r\n                      <SearchIcon  sx={{fontSize: 30}} />  \r\n                      </IconButton>\r\n                      <IconButton>                  \r\n                      <AddIcon  sx={{fontSize: 30}} />  \r\n                      </IconButton>\r\n                 </div>\r\n                 \r\n                 {/* create Doc module* */}\r\n                </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <input type = 'text'\r\n                        style = {{width : '100%'}}\r\n                        placeholder = 'Order Notes'\r\n                        value = {orderNotes}\r\n                        onChange = {handleChange('orderNotes')}\r\n                        />\r\n                </div>\r\n               \r\n         \r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst orderActionButtons = ()=>{\r\n    return (\r\n         <div className=\"d-flex flex-row justify-content-evenly \">\r\n                      {jobs.length>0 &&  <> <div className=\"btn btn-info fs-4\" \r\n                             onClick = {()=>{\r\n                                 setAddProduct(true)\r\n                             }}\r\n                             >+Add Product</div>\r\n                        <div className=\"btn btn-info fs-4\">Save & Print</div>\r\n                        <div className=\"btn btn-info fs-4\"\r\n                             onClick = {handleOrderSave}\r\n                             >Save</div></>}\r\n                        {isUpdate && <div className = 'text-white btn btn-danger fs-4' >\r\n                            <DeleteOutline style = {{fontSize : 24}}/>Delete Order</div>}\r\n                        <div className=\"btn btn-info fs-4\"  \r\n                             onClick = {()=>{\r\n                                 setOrderSelected(null)\r\n                                 setClientSelected(null)\r\n                                 setIsUpdate(false)\r\n                                 setAddProduct(false)\r\n                                 history.goBack()\r\n                                }}    \r\n                             >Cancel</div>\r\n                </div>\r\n    )\r\n}\r\nconst orderTryin = () => {\r\n\r\n    \r\n\r\n\r\n    return( \r\n          <div className = ''>\r\n              <div className=\"d-flex flex-row justify-content-between fs-4\">\r\n                  <div className=\"col\"><b>#tryIn</b></div>\r\n                  <div className=\"col\"><b>Scheduled</b></div>\r\n                  <div className=\"col\"><b>Status</b></div>\r\n              </div>\r\n              <div className=\"d-flex flex-row  justify-content-between align-items-center  \">\r\n                  <div className=\" fs-4\">Zig Trial</div>\r\n                  <div className=\"\"><input type = 'text' \r\n                                                      onChange = {()=>handleChange()} /></div>\r\n                  <div className=\" d-flex flex-row align-items-center\">\r\n                   <div className=\"btn text-primary fs-3\"><b>X</b></div>\r\n                    <div className = ' fs-4' >In Process</div>\r\n\r\n                   </div>\r\n            </div>\r\n                        \r\n\r\n          </div>\r\n          \r\n        \r\n    )\r\n}\r\nconst orderShadeSelection = () => {\r\n    return (\r\n         <div className = 'container fs-4'>\r\n            Shade\r\n            <div className=\"d-flex flex-row justify-content-between my-1\" >\r\n                <div className = 'w-25 ' >\r\n                    <div> Shade1 </div>\r\n                    <input type = 'text'\r\n                           style ={{maxWidth :'80%'}}\r\n                           value = {shade1}   \r\n                           onChange = {handleChange('shade1')} />\r\n                </div>\r\n                <div className = 'w-25' >\r\n                    <div>Shade2</div>\r\n                    <input type = 'text'\r\n                           style ={{maxWidth :'80%'}}\r\n                           value = {shade2}   \r\n                           onChange = {handleChange('shade2')} />\r\n                </div>\r\n                <div  className = 'w-25' >\r\n                    <div>Shade3</div>\r\n                    <input type = 'text'\r\n                           style ={{maxWidth :'80%'}}\r\n                           value = {shade3}   \r\n                           onChange = {handleChange('shade3')} />\r\n                </div>\r\n                </div>\r\n                <input type = 'text' \r\n                        style = {{width : '100%'}}\r\n                       value = {shadeNote} \r\n                       placeholder = 'shade Notes' \r\n                       onChange = {()=> handleChange('shadeNote')} />\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst orderPriority = ()=>{\r\n    return(\r\n         <div className = 'row fs-4'>\r\n             <div className=\"col\">\r\n                 Articulator Tag\r\n                 <input  type = 'text' \r\n                         value = {articulatorTag}\r\n                         onChange = {()=>handleChange('articulatorTag')}\r\n                         />\r\n             </div>\r\n             <div className=\"col\">\r\n                 Priority\r\n                 <select className = 'form-select fs-4'>\r\n                     <option value=\"ASAP\">ASAP</option>\r\n                     <option value=\"Expediate Service\">Expediate Service</option>\r\n                     <option value=\"Normal\">Normal</option>\r\n                     <option value=\"Urgent\">Urgent</option>\r\n                     <option value=\"very Urgent\">very Urgent</option>\r\n                 </select>\r\n             </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst orderTabs = () => {\r\n\r\n\r\n   return(\r\n       <div className = 'd-flex flex-row' >\r\n            <div className=\"btn btn-info fs-4 mx-2\"\r\n                 style = { currentOrderTab===1?  {backgroundColor : 'gold'} : null }\r\n                 onClick = {() => setCurrentOrderTab(1)} \r\n                   >Detail</div> \r\n            <div className=\"btn btn-info fs-4 mx-2\"\r\n                 style = { currentOrderTab===2?  {backgroundColor : 'gold'} : null }\r\n                 onClick = {() => setCurrentOrderTab(2)}                 \r\n                  >Add Images</div> \r\n            <div className=\"btn btn-info fs-4 mx-2\"\r\n                 style = { currentOrderTab===3?  {backgroundColor : 'gold'} : null }\r\n                 onClick = {() => setCurrentOrderTab(3)}                 \r\n                  >Log</div> \r\n       </div>\r\n   )\r\n}\r\n\r\nconst orderForm = () =>{\r\n    \r\n    return (\r\n        <div className =' order-container border border-dark '>\r\n        \r\n            <div className=\"d-flex flex-row justify-content-between\">\r\n                <div className = 'fs-1'><b>{isUpdate?'Edit' : 'New'}{'  '}Order</b></div>\r\n               { jobs.length > 0 && <div className = 'my-1'>{orderTabs()}</div>}\r\n             </div>\r\n            { clientSelected  &&  <div className  = ''>\r\n                                   {formHeader()} \r\n                                   \r\n                                   <div className=\"\">\r\n                                        <div className=\"d-flex flex-column flex-md-row justify-content-between\">\r\n                                            \r\n                                    {(!addProduct && jobs.length >=1 ) &&  <>\r\n                                             <div className=\"col-12 col-md-8 border border-dark \">\r\n                                                    {alert && <div className = 'fs-3 text-danger'>{message}</div>}\r\n                                                        <JobSet products = {jobs} onAddOrderCancel = {handleOrderCancel} \r\n                                                                onConfirmOrder= {addTojobs} \r\n                                                                onEditJob = {editExistingJob} \r\n                                                                onDelete = {deleteExistingJob}/>                              \r\n                                                        \r\n                                                </div>\r\n                                                <div className=\"col-12 col-md-4 container border border-dark\">\r\n                                                    <div>{orderTryin()}</div>\r\n                                                    <hr/>\r\n                                                    <div>{orderShadeSelection()}</div>\r\n                                                    <hr/>\r\n                                                    <div>{orderPriority()}</div>\r\n                                                </div>\r\n                                            </>\r\n                                            }\r\n                                            </div> \r\n                                            { (jobs.length<=0 || addProduct) &&  <Teethselector       job ={jobs}\r\n                                                                                                      onAddOrderCancel = {addToJobCancel} \r\n                                                                                                       onJobSave = {addTojobs}                                                                                               \r\n                                                                                                       onEditJob = {editExistingJob}\r\n                                                        />   } \r\n                                            \r\n                                     </div>\r\n                                 \r\n                                    {!addProduct && jobs.length>0 && formFooter()}\r\n                                </div>\r\n                            \r\n            }\r\n         {!clientSelected && !isUpdate &&    <div className = ' text-center  '>\r\n                       <span className = 'text-danger fs-4'>\r\n                           <strong>Select Client to create New Order</strong></span>\r\n                                      <ClientOrderTable  onClientSelection = {onClientSelect}/>\r\n                                       {/* {renderTable()} */}\r\n                                 </div>\r\n           }   \r\n         {!addProduct && orderActionButtons()}\r\n        </div> \r\n       \r\n           \r\n     )\r\n}  \r\n\r\nconst convertToSequnceString = (num) => {\r\n\r\n   let newString = num.toString()\r\n \r\n   let numlength = newString.length\r\n   if(numlength < 6 ){\r\n        for(let i=0; i< 6-numlength ;i++){\r\n            newString = \"0\"+newString;           \r\n        }\r\n   }\r\n   return newString\r\n\r\n} \r\n\r\nconst getOrderSequence = async () => {\r\n    \r\n    await  getNextOrderSequence()\r\n        .then(data => {          \r\n            \r\n            setOrderNumber(convertToSequnceString(data.sequence_val))  \r\n            \r\n\r\n        })\r\n        .catch(err => {\r\n            setMessage(\"Error in sequence\")\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        })\r\n}\r\n\r\nuseEffect(()=>{\r\n   fetchClients()\r\n},[])\r\n\r\nuseEffect(()=>{\r\n   if(orderSelected){\r\n      \r\n       setIsUpdate(true)  \r\n       setClientSelected(orderSelected.clientId)     \r\n    \r\n       setJobs([...orderSelected.products])\r\n       setOrderNumber(orderSelected.orderNo)\r\n       setValues({...orderSelected})\r\n     \r\n   }\r\n   else if(clientSelected){\r\n\r\n        // fetchClients()\r\n        console.log(\"Client Selected :\",clientSelected)\r\n        getOrderSequence()   \r\n        setValues({...values,orderNo:orderNumber})\r\n        setIsUpdate(false)\r\n   }\r\n   else {\r\n       fetchClients()\r\n   }\r\n},[orderNumber])\r\n\r\n\r\n\r\n    return (\r\n   \r\n   \r\n            <div className = ''>\r\n                <Menu />\r\n            <div className = 'lh-1'>\r\n                {orderForm()}\r\n            </div>\r\n            </div>\r\n   \r\n    )\r\n\r\n\r\n   \r\n}\r\n\r\nexport default NewOrderForm;","import React from 'react';\r\n\r\nconst OfficeContext = React.createContext();\r\nOfficeContext.displayName = 'OfficeContext'\r\nexport default OfficeContext;","import React from 'react';\r\n// import {Field,ErrorMessage} from 'formik'\r\n// import TextError from './TextError';\r\n\r\n\r\nconst Select = (props) => {\r\n   const {label,name,options,...rest} = props;\r\n\r\n    \r\n    return (\r\n        <div className = 'mx-2 '>\r\n            <label htmlFor = {name} className = ' mx-2'>{label} </label>\r\n            <select id = {name} \r\n                   as = 'select'\r\n                   name = {name}\r\n                   className = 'form-select '\r\n                   {...rest} \r\n                   >{\r\n                   options.map(option => {\r\n                       return(\r\n                           <option key = {option.value}\r\n                                   value = {option.value}>\r\n                                       {option.value}</option>\r\n                       )\r\n                   })\r\n                   }</select>\r\n                   {/* <ErrorMessage name = {name} component = {TextError}/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\nimport '../css/modal.css'\r\n\r\nconst Modal = (props) => {\r\nconst {children,title} = props\r\n\r\n\r\n\r\n    return (\r\n     \r\n\r\n        \r\n        <div className = \"modal-background  \"\r\n                >\r\n              \r\n           \r\n            <div className = \"my-modal d-flex flex-column \" >\r\n                <div className=\"modal-heading fs-3 px-5 py-2\"><b>{title}</b></div>\r\n                <hr/>\r\n                <div className=\"modal-body\">\r\n                         {children}\r\n                    </div>\r\n                <hr/>\r\n                  \r\n\r\n             </div>\r\n             \r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Modal;","import React,{useEffect, useState} from 'react';\r\nimport Modal from '../../components/Modal'\r\nimport '../../css/modal.css'\r\nimport Select from '../../components/Select'\r\n\r\n\r\nconst  NewAddressForm = ({onAddressConfirm,onAddressCancel,currentLocation}) => {\r\n\r\n    const [values,setValues] = useState({\r\n        \r\n            name :'',\r\n            address1:'',\r\n            address2:'',\r\n            area:'',\r\n            city:'',\r\n            pincode:'',\r\n            state:'',\r\n            contactPerson:'',\r\n            phoneO:'',\r\n            phoneM:'',\r\n            workHours:'',\r\n            route:''\r\n          \r\n    })\r\n  \r\nconst [message,setMessage] = useState('')\r\nconst [alert,setAlert] = useState(false)\r\n\r\n\r\nconst handleChange = name => event => {\r\n    event.preventDefault()\r\n    const data = event.target.value;\r\n    setValues({...values,[name]:data})\r\n}\r\n\r\n\r\n    const {name,address1,address2,area,city,state,pincode,contactPerson,phoneM,phoneO,workHours,route} = values\r\n\r\n\r\nuseEffect(()=>{\r\n    console.log(\"Current LOcation ::::::::::\",currentLocation)\r\n    if(currentLocation.address){\r\n        setValues({...currentLocation.address})\r\n    }\r\n},[])\r\n\r\n\r\nconst validate = ()=>{\r\n    if((name === '' || name.length<3) || (contactPerson.length<3)  || phoneM.length<6   ) {\r\n        \r\n        \r\n        setMessage(\"Please enter valid Name ,contact person and mobile phone number\")\r\n        setAlert(true)\r\n        setTimeout(()=>setAlert(false),2000)\r\n        \r\n        return false\r\n    }\r\n     return true\r\n}\r\n\r\n    return (\r\n        <div>\r\n            \r\n       <form action=\"\">\r\n                            \r\n                            <div className = 'row fs-4'>\r\n                            {alert && <div className = 'text-danger ' style = {{fontSize : '1.6rem'}}><b>{message}</b></div>}                \r\n                                <div className=\"col w-50 mx-3\">\r\n\r\n                                <label>Name</label>\r\n                                <input  className = 'form-control' \r\n                                              type = 'text' \r\n                                              label = 'Name'\r\n                                              name = 'name'\r\n                                              value = {name}\r\n                                              required\r\n                                              onChange = {handleChange('name')}\r\n                                              />\r\n                                <label>Address:</label>\r\n                                <input className = 'form-control my-2' \r\n                                                      type = 'text' \r\n                                                      placeholder = 'address line 1'\r\n                                                      name = 'address1'\r\n                                                      value = {address1}\r\n                                                      onChange = {handleChange('address1')}\r\n                                                      />  \r\n                                      <input  className = 'form-control my-2'\r\n                                                      type = 'text' \r\n                                                      placeholder = 'address line 2'\r\n                                                      name = 'address2'\r\n                                                      value = {address2}\r\n                                                      onChange = {handleChange('address2')}\r\n                                                      />\r\n                                       <input className = 'form-control my-2' \r\n                                                      type = 'text' \r\n                                                      placeholder = 'Area'\r\n                                                      name = 'area'\r\n                                                      value = {area}\r\n                                                      onChange = {handleChange('area')}\r\n                                                      />\r\n                                       <input className = 'form-control my-2' \r\n                                                      type = 'text' \r\n                                                      placeholder = 'City'\r\n                                                      name = 'city'\r\n                                                      value = {city}\r\n                                                      onChange = {handleChange('city')}\r\n\r\n                                                      />\r\n\r\n                                        <div className=\"d-flex flex-row align-items-end\">\r\n                                           \r\n                                          \r\n                                              <Select   type = 'text' \r\n                                                        className = 'fs-5 px-4 w-100 '                                                          \r\n                                                        name = 'state'\r\n                                                        label = 'State'\r\n                                                        value = {state}\r\n                                                        options = {[{value : 'Select State'},{value: 'GUJARAT'},{value : 'MAHARASHTRA'},{ value : 'MADHYA PRADESH'}]}\r\n                                                        onChange = {handleChange('state')}\r\n                                                        />\r\n                                                                                                 <input className = 'w-50' \r\n                                                      type = 'number' \r\n                                                      placeholder = 'Pincode'\r\n                                                      name = 'pincode' \r\n                                                      value = {pincode}\r\n                                                      onChange = {handleChange('pincode')}\r\n                                                      />    \r\n                                          </div>              \r\n                                                  \r\n                                        \r\n                                       \r\n                                </div>\r\n                                <div className=\"col w-50 mx-5\">\r\n                              \r\n                                              <label>Contact Person</label>                                                         \r\n                                              <input     className = 'form-control' \r\n                                                              type = 'text'\r\n                                                              label = 'Contact Person'\r\n                                                              name = 'contactPerson'\r\n                                                              value = {contactPerson} \r\n                                                              onChange = {handleChange('contactPerson')}\r\n                                                              />\r\n                                                  \r\n                                               <label>Office Phone</label>                                              \r\n                                              <input  className = 'form-control' \r\n                                                      type = 'number' \r\n                                                      name = 'phoneO'\r\n                                                      label = 'Office Phone'\r\n                                                      value = {phoneO}\r\n                                                      onChange = {handleChange('phoneO')}\r\n                                                      /> \r\n                                              <label>Cell Phone</label>\r\n                                              <input className = 'form-control' \r\n                                                      type = 'number' \r\n                                                      name = 'phoneM'\r\n                                                      label = 'Cell Phone'\r\n                                                      value = {phoneM}\r\n                                                      required\r\n                                                      onChange = {handleChange('phoneM')}\r\n                                                      />   \r\n                                               <label>Working Hours</label>\r\n                                              <input  className = 'form-control' \r\n                                                                      type = 'text'\r\n                                                                      label = 'Working Hours'\r\n                                                                      name = 'workHours'\r\n                                                                      value = {workHours}\r\n                                                                      onChange = {handleChange('workHours')} \r\n                                                                      />                                                        \r\n                                             <Select    className = 'form-select'\r\n                                                              type = 'text'\r\n                                                              label = 'Route'\r\n                                                              name = 'route'\r\n                                                              value = {route}\r\n                                                              options = {[{value : 'CTM'},{value : 'ASARVA'}]}\r\n                                                              onChange = {handleChange('route')}\r\n                                                              />  \r\n                                </div>\r\n                               \r\n                            </div>\r\n                         <div className=\" d-flex  justify-content-end  px-5 mt-5\">\r\n\r\n                                    <div className = 'btn fs-3  bg-info pt-3  mb-3 px-5 mx-5' onClick = {()=>{\r\n                                                                                                            if(validate())                                            \r\n                                                                                                                 onAddressConfirm(values)\r\n                                                                                                            }}>Save</div>\r\n                                    <div className=\"btn btn-info fs-3 pt-3  mb-3 px-5 mx-5\" onClick = {onAddressCancel}>Cancel</div>\r\n                          </div>\r\n                            </form>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewAddressForm;\r\n","import React from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport {  Tooltip } from '@material-ui/core';\r\n\r\n\r\n\r\nconst  AddressTable = ({addressBook,onAddressEdit})=> {\r\n    \r\n    console.log(\"AddressBook received :\",addressBook)    \r\n  \r\n\r\n    \r\n         \r\n    return (\r\n        <ul>\r\n         {addressBook.length > 0 && addressBook.map((address,index) => <li key = {index}>\r\n                                         <div className=\"\">\r\n                                             <div className=\"row\">\r\n                                                 <div className=\"col-8 border border-dark\">\r\n                                                    {address.name}\r\n                                                 </div>\r\n                                                 <div className=\"col-4 border border-dark\">\r\n                                                 <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Edit Location</div>}>\r\n                                                      <EditIcon sx={{fontSize : 30}} onClick = {()=>onAddressEdit(address,index)}/></Tooltip>\r\n                                                   \r\n                                                 </div>\r\n                                             </div>\r\n                                         </div>\r\n                                       </li>)}                \r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default AddressTable;","import React, { useState,useEffect } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\n\r\nconst AddDoc = ({addDoc,onAddDocConfirm,onAddDocCancel,onAddDocEdit}) => {\r\n\r\n   const [values,setValues] = useState({\r\n       name : '',\r\n       cellno:'',\r\n       designation:''\r\n   }) \r\n  const [show,setShow] =useState(false)\r\n  const [message,setMessage] = useState('')\r\n  const [alert,setAlert] = useState(false)\r\n  const [edit,setEdit] = useState(false)\r\n  const [editIndex,setEditIndex] = useState(null)\r\n\r\nconst handleChange = name => event => {\r\n    \r\n    let data = event.target.value\r\n    setValues({...values,[name]:data})\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    if(addDoc.length === 0)setShow(true)\r\n\r\n},[])\r\n\r\nconst handleEdit = (doc,index) => {\r\n  setValues(doc)\r\n  setShow(true)  \r\n  setEdit(true)\r\n  setEditIndex(index)\r\n} \r\n\r\n\r\nconst {name,cellno,designation} = values\r\n\r\nconst validate = () => {\r\n\r\nconst {name,cellno,designation} = values\r\n\r\n    if((name === '' || name.length<3) || cellno === '' ){\r\n        \r\n        setMessage(\"Please enter valid Name and Cell phone number\")\r\n        setAlert(true)\r\n        setTimeout(()=>setAlert(false),2000)\r\n        return false\r\n    }\r\n    \r\n    return true\r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'container '>\r\n    { show &&  <ul className ='fs-4'>\r\n                {alert && <li className ='text-danger fs-4'><b>{message}</b></li>}\r\n                <li >\r\n                    <div className=\"d-flex flex-row justify-content-between \">\r\n                               <div className = 'w-75'>\r\n                                <label>Name</label>\r\n                                <input  className = 'form-control' \r\n                                              type = 'text' \r\n                                              name = 'name'\r\n                                              value = {name}                                             \r\n                                              onChange = {handleChange('name')}\r\n                                              />\r\n                                 </div>\r\n                                 <div>\r\n                                    <label>Cell Phone</label>\r\n                                    <input  className = 'form-control' \r\n                                                type = 'number' \r\n                                                name = 'cellno'\r\n                                                value = {cellno}                                              \r\n                                                onChange = {handleChange('cellno')}\r\n                                                /> \r\n                                </div>   \r\n                             </div>                          \r\n                </li>\r\n                <li>\r\n                               <label>Designation Preference</label>\r\n                                <input  className = 'form-control' \r\n                                              type = 'text' \r\n                                              name = 'designation'\r\n                                              value = {designation}                                              \r\n                                              onChange = {handleChange('designation')}\r\n                                              />  \r\n                </li>\r\n                <li className=\" d-flex  justify-content-end  px-5 mt-5\">\r\n\r\n                    <div className = 'btn fs-3  bg-info pt-3  mb-3 px-5 mx-5'                         \r\n                         onClick = {()=>{  if(validate()){\r\n                                           if(edit){\r\n                                               onAddDocEdit(values,editIndex)\r\n                                           }\r\n                                           else  onAddDocConfirm(values)\r\n\r\n                                           setEdit(false)\r\n                                           setShow(false)\r\n                                       }\r\n                                            }}>Save</div>\r\n                    <div className=\"btn btn-info fs-3 pt-3  mb-3 px-5 mx-5\" onClick = {onAddDocCancel}>Cancel</div>\r\n                </li>\r\n            </ul>}\r\n            {!show && <ul>\r\n                    {\r\n                        addDoc.map((doc,index) =><li key = {index}>\r\n                             <div className=\"d-flex flex-row mx-3 \">\r\n                             <div className = 'btn w-75 border border-dark ' style ={{fontSize : '1.6rem'}} onClick = {()=> setValues(doc)}>{doc.name}</div> \r\n                             <div className='btn border border-dark'  onClick = {()=>handleEdit(doc,index)}><EditIcon sx={{fontSize : 24}} /></div>\r\n                             </div>\r\n                            </li> )\r\n                    }\r\n                     <li className = 'btn btn-info  mx-2 mt-2' style ={{fontSize : '1.6rem'}} onClick = {() => setShow(true)} >+ Add Doctors</li>\r\n                     <li className = 'btn btn-info mx-2 mt-2' style ={{fontSize : '1.6rem'}} onClick = {onAddDocCancel} >cancel</li>\r\n                </ul>}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddDoc;","import React,{useState,useContext, useEffect} from 'react';\r\nimport {Redirect,useHistory} from 'react-router-dom'\r\n\r\nimport UserContext from '../../context/UserContext';\r\nimport {createClient,updateClient} from '../../admin/clientApi'\r\nimport TextError from '../TextError';\r\nimport OfficeContext from '../../context/OfficeContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getNextClientSequence} from '../../admin/clientApi'\r\n\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Menu from '../menu'\r\n\r\nimport Select from '../../components/Select'\r\nimport ClientContext from '../../context/ClientContext';\r\nimport CompanyContext  from '../../context/CompanyContext';\r\n\r\nimport Modal from '../../components/Modal'\r\nimport NewAddressForm from './NewAddressForm';\r\nimport AddressTable from './AddressTable';\r\nimport AddDoc from './AddDoc';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction NewClientForm({onCancel}) {\r\n\r\n   const history = useHistory()\r\n    const {clients,fetchClients,onClientSelect,setClient,\r\n        clientSelected,setClientSelected,setPathRedirect,setRedirect,redirect} = useContext(ClientContext)\r\n         \r\n    const {currentCompany,setCurrentCompany} = useContext(CompanyContext)    \r\n\r\n    const [clientNumber,setClientNumber] = useState(0)\r\n\r\n\r\n    const [values,setValues] = useState({\r\n        addDoc:[],\r\n        area : \"\",\r\n        address1 : \"\",\r\n        address2:\"\",\r\n        address:[],\r\n        acmanager :'',\r\n        balance:'',\r\n        billTo:'',       \r\n        creditLimit:0,\r\n        code : 0,\r\n        company:currentCompany,\r\n        contactPerson :'', \r\n        category : '',\r\n        city:'',\r\n        dcireg:'',   \r\n        deliveryMethod :'',\r\n        drcr : 'dr',\r\n        emailPrimary :'' ,\r\n        emailSecondary:'',  \r\n        emailOption:false,\r\n        gstin :'',  \r\n        isLab : false,\r\n        name: \"\",\r\n        notes : '',\r\n        pincode:'',\r\n        phoneO:'',\r\n        phoneR:'',\r\n        phoneM:'',  \r\n        priceBand:'',\r\n        paymentTerms :'',\r\n        route:'',\r\n        regDate : new Date().toDateString(),\r\n        state:\"\",\r\n        smsOption:false,\r\n        salutation:'Dr', \r\n        taxEx:false,\r\n        workHours : '',\r\n        \r\n    })\r\n  \r\n  const {user,token} = useContext(UserContext)\r\n \r\n  \r\n  const {staff} = useContext(OfficeContext)\r\n\r\n\r\n\r\n  const [errorAlert,setErrorAlert] = useState(false)\r\n  const [errorMessage,setErrorMessage] = useState('')\r\n  const [success,setSuccess] = useState(false)\r\n  const [update,setUpdate] = useState(false)\r\n  const [placeOrder,setPlaceOrder] = useState(false)\r\n  const [additionalDoc,setAdditionalDoc] = useState([])\r\n  const [show,setShow] = useState(false)\r\n  const [isModalOpen ,setisModalOpen] = useState(false)\r\n  const [addressBook ,setAddressBook] = useState([])\r\n  const [location,setLocation] = useState(false)\r\n  const [editLocation,setEditLocation] = useState(false)\r\n  const [currentLocation,setCurrentLocation] = useState({})\r\n  \r\n  const clientNames = [{value : 'Select Client'}]\r\n  if(clients.length > 0){\r\n      \r\n            let clientAp  =    clients.map(client => client.name)    \r\n            clientAp.forEach((c,index) =>clientNames[index+1] = {value : c} )    \r\n         \r\n  }\r\n \r\nconst performRedirect = (path) => {\r\n    return <Redirect to = {path}/>\r\n}\r\n\r\nconst validateData = () => {\r\n\r\n\r\n    if(values.name === '' || values.name.length<3 ){\r\n\r\n        setErrorMessage('Please Enter Valid Name')\r\n        setErrorAlert(true)\r\n        setTimeout(()=> setErrorAlert(false),2000)\r\n       return false\r\n    }\r\n    \r\n    if(values.phoneM === '' || toString(values.phoneM).length<10 )\r\n    {\r\n        setErrorMessage('Please Enter Valid Cell phone Number')\r\n        setErrorAlert(true)\r\n       setTimeout(()=> setErrorAlert(false),2000)\r\n       return false  \r\n    }\r\n     return true\r\n\r\n}\r\n\r\nconst findCurrentClient = (name,mobile) => {\r\n\r\n      let newClient =  clients.filter(client => (client.name === name && client.phoneM === mobile))\r\n      console.log(\"Client found from set : \",newClient)\r\n      return newClient[0]\r\n}\r\n\r\n\r\nconst handleSubmit =  e => {\r\n            e.preventDefault()\r\n   \r\n   let validData = validateData()\r\n  \r\n  if(validData){\r\n\r\n  \r\n   let checkedData = document.getElementById('taxEx')\r\n    if(checkedData.checked) values.taxEx = true\r\n    checkedData = document.getElementById('isLab')\r\n    if(checkedData.checked) values.isLab = true\r\n    checkedData = document.getElementById('smsOption')\r\n    if(checkedData.checked)values.smsOption = true\r\n    checkedData = document.getElementById('emailOption')\r\n    if(checkedData.checked) values.emailOption = true\r\n\r\n\r\n\r\n  console.log(\"New Values Received in NewForm ::::\",values)\r\n  \r\n if(update){\r\n     let newValues = {...values,_id:clientSelected._id,addDoc:additionalDoc,address:addressBook}\r\n     setValues({...values, _id : clientSelected._id})\r\n    console.log(\"UPDATE CLIENT VALUES :\",newValues)\r\n     \r\n     updateClient(user._id,token,newValues)                     \r\n                    .then(data  => {   \r\n                                        \r\n                        if(data.status !== 200){\r\n                            \r\n                            // setValues({values})\r\n                            setErrorMessage('Some error while updating data!')\r\n                            setErrorAlert(true)\r\n                            setTimeout(()=>setErrorAlert(false),2000)\r\n                        }\r\n                        else{                         \r\n\r\n                          setSuccess(true);                           \r\n                          setTimeout(() =>setSuccess(false),2000)\r\n                            fetchClients()\r\n\r\n                          if(placeOrder){\r\n                               //find current client and new generated  id                              \r\n                              //set current client as clientSelected                              \r\n                              setClientSelected(findCurrentClient(values.name,values.phoneM)) \r\n                              setPathRedirect('/order/neworder')\r\n                              setRedirect(true)\r\n                          }  \r\n                          else {\r\n                            setPathRedirect('/client')\r\n                            setRedirect(true)\r\n                        }\r\n                          //reset  values\r\n                          setValues({salutation:'Dr', contactPerson :'', dcireg:'',name: \"\", code : '',emailPrimary :'' ,\r\n                            emailSecondary:'',address1 : \"\",address2:\"\",area : \"\",state:\"\",city:'',pincode:'',phoneO:'',\r\n                            phoneR:'',phoneM:'',deliveryMethod :'',emailOption:false,smsOption:false,route:'',priceBand:'',\r\n                            billTo:'',gstin :'',creditLimit:0,taxEx:false,isLab : false,paymentTerms :'',balance:'',\r\n                            drcr : '1',notes : '',category : '',workHours : '',acmanager :'',\r\n                            regDate : new Date(), company:currentCompany   , addDocSalutation:'',\r\n                                        \r\n                            })\r\n                        }\r\n                       })\r\n                    .catch(err => {\r\n                        setErrorMessage('Error while updating Data')\r\n                        setErrorAlert(true)\r\n                        setTimeout(()=>setErrorAlert(false),2000)\r\n                                  }\r\n                          )\r\n\r\n }\r\nelse{\r\n    \r\n    console.log(\"UPDATE CLIENT VALUES :\",{...values,name : name.toUpperCase(),addDoc:additionalDoc,address:addressBook})\r\n   \r\n \r\n    createClient(user._id,token,{...values,name : name.toUpperCase(),addDoc:additionalDoc,address:addressBook})                     \r\n    .then(data  => {   \r\n                         \r\n        if(data.status !== 200){\r\n            \r\n            // setValues({values})\r\n            setErrorAlert(true)\r\n            setTimeout(()=>setErrorAlert(false),2000)\r\n        }\r\n        else{                         \r\n\r\n            setSuccess(true);                           \r\n            setTimeout(() =>setSuccess(false),2000)\r\n            fetchClients()\r\n\r\n            if(placeOrder){\r\n                //find current client and new generated  id                              \r\n               //set current client as clientSelected                              \r\n               setClientSelected(findCurrentClient(values.name,values.phoneM)) \r\n               setPathRedirect('/order')\r\n               setRedirect(true)\r\n           }  \r\n           else {\r\n               console.log(\"Public_URL :\",`${process.env.PUBLIC_URL}`)\r\n               setPathRedirect(`${process.env.PUBLIC_URL}/client`)\r\n            //    setRedirect(true)\r\n              performRedirect(`${process.env.PUBLIC_URL}/client`)            \r\n           }\r\n           //reset \r\n           setValues({salutation:'Dr', contactPerson :'', dcireg:'',name: \"\", code : '',emailPrimary :'' ,\r\n             emailSecondary:'', address1 : \"\",address2:\"\",area : \"\",state:\"\",city:'',pincode:'',\r\n             phoneO:'', phoneR:'',phoneM:'',deliveryMethod :'',\r\n             emailOption:false,smsOption:false,route:'',priceBand:'',addDoc :[],\r\n             billTo:'',gstin :'',creditLimit:0,taxEx:false,isLab : false,paymentTerms :'',balance:'',\r\n             drcr : '1',notes : '',category : '',workHours : '',acmanager :'',\r\n             regDate : new Date(),  company:currentCompany, addDocSalutation:'',\r\n             addDocName:'',                \r\n             })\r\n        }\r\n    })\r\n    .catch(err => {\r\n        setErrorMessage('Error while saving Data')\r\n        setErrorAlert(true)\r\n        setTimeout(()=>setErrorAlert(false),2000)\r\n    }\r\n            )\r\n\r\n      }           \r\n\r\n\r\n\r\n        \r\n\r\n    }\r\n        \r\n\r\n      \r\n}\r\n\r\n const { salutation,name,code,dcireg,emailPrimary,emailSecondary,address1,address2,area,city,state,pincode,phoneO,contactPerson,\r\n        phoneR,phoneM,deliveryMethod,emailOption,smsOption,route,\r\n        priceBand, billTo,gstin,creditLimit,taxEx,isLab,paymentTerms , balance,company,\r\n        drcr,notes ,category, workHours, acmanager, addDocSalutation,addDocName\r\n        }  =  values\r\n\r\nconst handleChange = name => event => {\r\n    event.preventDefault()\r\n      const val = event.target.value;\r\n      setValues({...values,[name]:val})\r\n} \r\n\r\nconst handleAddEmail = () => {\r\n    let addEmail = document.getElementById('extraemail')\r\n    addEmail.classList.toggle('d-none')\r\n   let icon = document.getElementById('addEmailIcon')\r\n   icon.classList.add('d-none')\r\n\r\n}\r\n\r\nconst  handleBillTo = () => {  \r\n \r\n   \r\n    let billTo = document.getElementById('billTo')\r\n    billTo.classList.remove('d-none')\r\n    billTo.classList.add('d-block')\r\n    let self = document.getElementById('self')\r\n    self.classList.add('d-none')\r\n}\r\n\r\nconst convertToSequnceString = (num) => {\r\n\r\n    let newString = num.toString()\r\n  \r\n    let numlength = newString.length\r\n    if(numlength < 6 ){\r\n         for(let i=0; i< 6-numlength ;i++){\r\n             newString = \"0\"+newString;           \r\n         }\r\n    }\r\n    return newString\r\n \r\n } \r\n \r\n const getCodeSequence = async () => {\r\n     \r\n     await  getNextClientSequence()\r\n         .then(data => {          \r\n           \r\n             setClientNumber(convertToSequnceString(data.sequence_val)) \r\n             setValues({...values,code : convertToSequnceString(data.sequence_val)})\r\n\r\n         })\r\n         .catch(err => {\r\n             setErrorMessage(\"Error in sequence\")\r\n             setErrorAlert(true)\r\n             setTimeout(()=>setErrorAlert(false),2000)\r\n         })\r\n }\r\nuseEffect (() => {\r\n    \r\n     // to enable redirecting without fail\r\n     setRedirect(false)\r\n     if(clientSelected){        \r\n         setUpdate( true)\r\n         \r\n         \r\n         setValues({...clientSelected})\r\n         setAdditionalDoc(clientSelected.addDoc)\r\n         setAddressBook(clientSelected.address)\r\n        }\r\n        else {\r\n         //get next client code from database   \r\n        getCodeSequence()  \r\n        setAdditionalDoc([])\r\n        setAddressBook([])\r\n    }\r\n},[update])\r\n\r\nconst handleClientCancel = () => {\r\n   \r\n    \r\n        history.go(-1)     \r\n        setClientSelected(null)    \r\n  \r\n  \r\n\r\n}\r\n//**CRUD Operations for adding locations */\r\nconst handleAddLocation = (newLocation) =>{    \r\n\r\n    if(editLocation){\r\n        let index = currentLocation.index\r\n        let oldAddressList = addressBook\r\n        oldAddressList[index] = newLocation\r\n       setAddressBook(oldAddressList)\r\n       setisModalOpen(false) \r\n       setCurrentLocation(null)\r\n    }  \r\n    else {\r\n        setisModalOpen(false)        \r\n        setAddressBook(prev => [...prev,{...newLocation}])\r\n    }\r\n    setEditLocation(false) \r\n    \r\n}\r\nconst handleAddressCancel = () =>{\r\n    setisModalOpen(false)\r\n}\r\nconst handleAddressEdit = (newAddress,index) => {   \r\n   \r\n   setCurrentLocation({address: newAddress, index})\r\n   setEditLocation(true)\r\n   setisModalOpen(true)\r\n   \r\n}\r\n\r\n//CRUD Operations for Adding addintional Doctors details\r\nconst handleAddDocConfirm = (newDoc) => {\r\n \r\n   setShow(false)  \r\n   setAdditionalDoc(prev=>[...prev,newDoc])\r\n}\r\n\r\nconst handleAddDocCancel = ()=>{\r\n    setShow(false)\r\n}\r\n\r\nconst handleAddDocEdit = (doc,index) => {\r\n    \r\n     let docList = additionalDoc\r\n      docList[index] = doc\r\n      setAdditionalDoc(docList)\r\n}\r\n\r\n\r\n\r\n\r\n            return (\r\n                <>\r\n                  <Menu />  \r\n                 <div>\r\n                 {isModalOpen && <Modal  title = 'Add  Location'                        \r\n                        onCloseModal = {()=> setisModalOpen(false)}>\r\n                   <NewAddressForm  onAddressConfirm = {handleAddLocation} \r\n                                    onAddressCancel = {handleAddressCancel}\r\n                                    currentLocation = {currentLocation}\r\n                                    />\r\n                  </Modal>}     \r\n                 </div>\r\n                 {show && <Modal title = 'Add Doctor Information' >\r\n                     <AddDoc  addDoc = {additionalDoc} \r\n                              onAddDocConfirm = {handleAddDocConfirm} \r\n                              onAddDocCancel = {handleAddDocCancel}\r\n                              onAddDocEdit = {handleAddDocEdit}/>\r\n                     </Modal>}\r\n                  <div className=\"container mt-5 fs-4\">\r\n                     {/* <SubMenu /> */}\r\n                     { errorAlert && <TextError >{<h3>{errorMessage}</h3>}</TextError>}\r\n                  <div className=\"client-form-container mx-auto \">\r\n                  \r\n                    <form>\r\n                              <div className = \"border border-dark px-3 \">\r\n                                <div className=\"d-flex flex-row justify-content-between \">\r\n                                      <div>\r\n                                      <h2 className = 'w-30'>{update ?  'Edit': 'New'} { ' '}Client</h2>\r\n                                      <label className = 'fs-4'>Company :</label>  \r\n                                      <select name=\"company\" \r\n                                              className = 'fs-4 mx-2'\r\n                                              value = {company} \r\n                                              onChange = {handleChange('company')} >\r\n                                                  <option  value=\"1\">1</option>\r\n                                                  <option  value=\"2\">2</option>\r\n                                                  <option  value=\"3\">3</option>\r\n                                              </select>\r\n                                      </div>\r\n                                        \r\n                                    <div className=\"d-flex flex-column  \">\r\n                                                    <div className = 'w-100 d-flex flex-sm-row  align-items-center justify-content-between '>\r\n                                                        <div className=\"\">\r\n                                                            <Select  className = 'form-select'\r\n                                                                            label = \"Salutation\"\r\n                                                                            name = 'salutation'\r\n                                                                            value = {salutation}\r\n                                                                            onChange = {handleChange('salutation')}\r\n                                                                            options = {[{value : 'Dr.'},{value : 'Dr(Mrs.)'},{value :'M/s'},{value :'Mr.'}] }            \r\n                                                                                />\r\n                                                        </div>\r\n                                                        <div className=\"w-50\">\r\n                                                            <label>Name</label>\r\n                                                                <input  className = 'form-control' \r\n                                                                                type = 'text' \r\n                                                                                label = 'Name'\r\n                                                                                name = 'name'\r\n                                                                                value = {name}\r\n                                                                                required\r\n                                                                                onChange = {handleChange('name')}\r\n                                                                                />\r\n                                                        </div>\r\n                                                        <div className=\"w-25 mx-2\">\r\n                                                            <label>Contact Person</label>                                                         \r\n                                                            <input     className = 'form-control' \r\n                                                                            type = 'text'\r\n                                                                            label = 'Contact Person'\r\n                                                                            name = 'contactPerson'\r\n                                                                            value = {contactPerson} \r\n                                                                            onChange = {handleChange('contactPerson')}\r\n                                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"btn text-primary fs-5 mx-2 \" onClick = {()=>setShow(true)}>\r\n                                                              <b> Add Doctor</b>                                   \r\n                                                        </div>\r\n                                                </div> \r\n                                               \r\n                                               \r\n                                            \r\n                                               \r\n                                                <div className = 'd-flex flex-sm-row  align-items-center justify-content-between'> \r\n                                                            <div className=\"w-20 px-1\">\r\n                                                                     <div>Code</div>\r\n                                                                    <input  className = 'form-control'\r\n                                                                                    disabled \r\n                                                                                    type = 'number'\r\n                                                                                    label = 'Code'\r\n                                                                                    name = 'code' \r\n                                                                                    value = {code}\r\n                                                                                    />\r\n                                                            </div>\r\n                                                                <div className=\"w-20 px-1\">\r\n                                                                    <div>DCI Reg#</div>\r\n                                                                    <input   className = 'form-control' \r\n                                                                                    type = 'text'\r\n                                                                                    label = 'DCI Reg#'\r\n                                                                                    name = 'dcireg' \r\n                                                                                    value = {dcireg}\r\n                                                                                    onChange = {handleChange('dcireg')}\r\n                                                                                    />   \r\n                                                            </div>\r\n                                                            <div className=\"w-40 px-1\">\r\n                                                            <label>Working Hours</label>\r\n                                                            <input  className = 'form-control' \r\n                                                                                    type = 'text'\r\n                                                                                    label = 'Working Hours'\r\n                                                                                    name = 'workHours'\r\n                                                                                    value = {workHours}\r\n                                                                                    onChange = {handleChange('workHours')} \r\n                                                                                    />   \r\n                                                            </div>\r\n                                                            <div className=\"w-20 px-1\">                                                                   \r\n                                                                    <Select         label = 'Account Manager'\r\n                                                                                    name = 'acmanager'\r\n                                                                                    onChange = {handleChange('acmanager')} \r\n                                                                                    value = {acmanager}\r\n                                                                                    options = {[{value : 'select'},{value : 'Shilpin Patel'},{value : 'Jayesh Jain'}]}\r\n                                                                                    /> \r\n                                                            </div>\r\n                                                    </div>\r\n\r\n                                       </div>  \r\n                                    </div>\r\n                                      \r\n\r\n                     </div>                                         \r\n                                \r\n                        <div className = 'border border-5 border-dark  row'>                             \r\n                             <div className=\"col  \">\r\n                                      <div className = ' '>\r\n                                          \r\n                                                <div className=\"btn btn-info fs-5  \" \r\n                                                        onClick = {()=>{\r\n                                                                         setisModalOpen(false)\r\n                                                                          setLocation(false) \r\n                                                                     }}>\r\n                                                    Primary Address\r\n                                                </div>\r\n                                                <div className=\"btn btn-warning fs-5 mx-2 px-4\"  onClick = {()=> setLocation(true)}>\r\n                                                   Locations\r\n                                                </div>\r\n                              { location &&  <div className = 'location-list'>\r\n                                             <div className=\"btn btn-info\"  \r\n                                                  onClick = {()=>{\r\n                                                      setisModalOpen(true)  \r\n                                                  }\r\n\r\n                                                  } >+New Location</div>\r\n\r\n                                        {addressBook.length >0 &&  <div>\r\n                                                            <AddressTable addressBook = {addressBook} onAddressEdit = {handleAddressEdit}/>\r\n                                                           </div>}\r\n                                        </div>}  \r\n                            {  !location && <>\r\n                                        <input className = 'form-control fs-4' \r\n                                                        type = 'text' \r\n                                                        placeholder = 'address line 1'\r\n                                                        name = 'address1'\r\n                                                        value = {address1}\r\n                                                        onChange = {handleChange('address1')}\r\n                                                        />  \r\n                                        <input  className = 'form-control fs-4'\r\n                                                        type = 'text' \r\n                                                        placeholder = 'address line 2'\r\n                                                        name = 'address2'\r\n                                                        value = {address2}\r\n                                                        onChange = {handleChange('address2')}\r\n                                                        />\r\n                                         <input className = 'form-control fs-4' \r\n                                                        type = 'text' \r\n                                                        placeholder = 'Area'\r\n                                                        name = 'area'\r\n                                                        value = {area}\r\n                                                        onChange = {handleChange('area')}\r\n                                                        />\r\n                                         <input className = 'form-control ' \r\n                                                        type = 'text' \r\n                                                        placeholder = 'City'\r\n                                                        name = 'city'\r\n                                                        value = {city}\r\n                                                        onChange = {handleChange('city')}\r\n\r\n                                                        />\r\n                                           <input className = 'form-control ' \r\n                                                        type = 'number' \r\n                                                        placeholder = 'Pin'\r\n                                                        name = 'pincode' \r\n                                                        value = {pincode}\r\n                                                        onChange = {handleChange('pincode')}\r\n                                                        />             \r\n                                           <Select        \r\n                                                          type = 'text' \r\n                                                          label = 'State'\r\n                                                          name = 'state'\r\n                                                          className = 'fs-5 mx-2 px-4'\r\n                                                          value = {state}\r\n                                                          options = {[{value : 'Select State'},{value: 'GUJARAT'},{value : 'MAHARASHTRA'},{ value : 'MADHYA PRADESH'}]}\r\n                                                          onChange = {handleChange('state')}\r\n                                                          />\r\n                                        </>\r\n                                         }\r\n                                         </div>\r\n\r\n                                        <div className = 'w-75  px-3'>  \r\n                                                <label>Office Phone</label>                                              \r\n                                                <input  className = 'form-control' \r\n                                                        type = 'number' \r\n                                                        name = 'phoneO'\r\n                                                        label = 'Office Phone'\r\n                                                        value = {phoneO}\r\n                                                        onChange = {handleChange('phoneO')}\r\n                                                        /> \r\n                                                <label>Cell Phone</label>\r\n                                                <input className = 'form-control' \r\n                                                        type = 'number' \r\n                                                        name = 'phoneM'\r\n                                                        label = 'Cell Phone'\r\n                                                        value = {phoneM}\r\n                                                        required\r\n                                                        onChange = {handleChange('phoneM')}\r\n                                                        />         \r\n                                                <label>Res Phone</label>\r\n                                                <input className = 'form-control' \r\n                                                        type = 'number' \r\n                                                        name = 'phoneR'\r\n                                                        label = 'Res Phone'\r\n                                                        value = {phoneR}\r\n                                                        onChange = {handleChange('phoneR')}\r\n                                                        />  \r\n                                            </div>\r\n                                             <div className=\"d-flex flex-row   justify-items-center \">\r\n                                                       <div className = 'w-75  '>                                                          \r\n                                                           <div className=\"d-flex flex-column\">\r\n                                                           <label>Email</label>\r\n                                                           <input className = 'form-control py-1 ' \r\n                                                                            type = 'email'    \r\n                                                                            label = 'Email'                                                                        \r\n                                                                            name = 'emailPrimary'                                                                            \r\n                                                                            value = {emailPrimary}\r\n                                                                            placeholder = 'primary address'\r\n                                                                            onChange = {handleChange('emailPrimary')}\r\n                                                                            />\r\n                                                             <div  id = 'extraemail' className = 'd-none'>\r\n                                                                <input className ='form-control ' \r\n                                                                                type = 'email'                                                                                                                                                    \r\n                                                                                name = 'emailSecondary'\r\n                                                                                value = {emailSecondary}\r\n                                                                                placeholder = 'secondary address'\r\n                                                                                onChange = {handleChange('emailSecondary')}\r\n                                                                                />    \r\n                                                             </div>               \r\n                                                                       \r\n                                                               \r\n                                                            </div> \r\n                                                           \r\n                                                           \r\n                                                       </div>\r\n                                                       <div className=\"btn  fs-3 mt-4 text-dark\" id = 'addEmailIcon'>\r\n                                                           <Tooltip title = {<div style ={{fontSize : '1.4rem', padding:'0.5rem'}}>add Email</div>}>\r\n                                                                {/* <FontAwesomeIcon  icon = 'plus'  \r\n                                                                   onClick = {() => handleAddEmail()}/> */}\r\n                                                                   <IconButton onClick={()=> handleAddEmail()}>\r\n                                                                       <AddIcon />\r\n                                                                   </IconButton>\r\n                                                                </Tooltip>  \r\n\r\n                                                       </div>                                                        \r\n                                                      \r\n                                             </div>\r\n                                             <div className = 'd-flex flex-row'>\r\n                                                      <label>Send Welcome Message</label>\r\n                                                       <div className =\"form-check \">\r\n                                                             <input className =\"form-check-input\" \r\n                                                                    type=\"checkbox\" \r\n                                                                    value = 'sms'\r\n                                                                    id = 'smsOption'\r\n                                                                                                                                      \r\n                                                                     />\r\n                                                             <label className =\"form-check-label\" htmlFor=\"flexCheckDefault\">SMS</label>\r\n                                                        </div>\r\n                                                        <div className =\"form-check  \">\r\n                                                        <input className =\"form-check-input\" \r\n                                                               type=\"checkbox\" \r\n                                                               value = 'email'\r\n                                                               id = 'emailOption'\r\n                                                                                                                         \r\n                                                               />\r\n                                                        <label className =\"form-check-label\" htmlFor=\"flexCheckChecked\">Email </label>\r\n                                                        </div>\r\n\r\n                                             </div>\r\n                                                                                              \r\n                                            \r\n                                  </div> \r\n                                <div className=\"col border border-dark p-0 \">\r\n\r\n                                  <div className = 'd-flex flex-row justify-content-around  border-dark border-bottom pb-2 '>\r\n                                        <div className = 'w-50'>                                                \r\n                                                <Select         type = 'text' \r\n                                                                label = 'Delivey Method'\r\n                                                                name = 'deliveryMethod'\r\n                                                                value = {deliveryMethod}\r\n                                                                options = {[{value: 'Courier'},{value : 'Delivery Boy'},\r\n                                                                            {value : 'Doctor Pickup'},{value : 'Mail'}]}\r\n                                                                onChange = {handleChange('deliveryMethod')}\r\n                                                                />\r\n                                            </div>\r\n                                            <div className = 'w-50 '>\r\n                                                <Select    className = 'form-select'\r\n                                                                type = 'text'\r\n                                                                label = 'Route'\r\n                                                                name = 'route'\r\n                                                                value = {route}\r\n                                                                options = {[{value : 'CTM'},{value : 'ASARVA'}]}\r\n                                                                onChange = {handleChange('route')}\r\n                                                                />                       \r\n                                            </div>\r\n\r\n                                    </div>  \r\n\r\n                                 <div className = 'd-flex flex-column border-dark border-bottom pb-2'>                                               \r\n                                        <div className = 'd-flex flex-row justify-content-around  align-items-center  '>\r\n                                                <div className = 'w-50 '>                                                \r\n                                                    <Select    className = 'form-select' \r\n                                                                    type = 'text' \r\n                                                                    label = 'Price Band'\r\n                                                                    name = 'priceBand'\r\n                                                                    value = {priceBand}\r\n                                                                    options = {[{value: ''},\r\n                                                                                 {value: 'Favourite Clients'},{value : 'International'},\r\n                                                                                {value : 'Laboratory'},{value : 'Out Of State'},\r\n                                                                                {value : 'Regular'},{value : 'Sensitive'},\r\n                                                                                {value : 'Vora'}\r\n                                                                            ]}\r\n                                                                     onChange = {handleChange('priceBand')}       \r\n                                                                    />\r\n                                                </div>\r\n                                                <div className = 'w-50'>  \r\n                                                                    <label>GSTIN</label>\r\n                                                                    <input className = 'form-control' \r\n                                                                                    type = 'text'                                                                                                                                                    \r\n                                                                                    name = 'gstin'\r\n                                                                                    value = {gstin}  \r\n                                                                                    onChange = {handleChange('gstin')}                                                                              \r\n                                                                                    />   \r\n                                                </div>  \r\n\r\n                                            </div>    \r\n                                          <div className=\"d-flex flex-row justify-content-around  align-items-center\">\r\n\r\n                                                \r\n                                                       <div className =\"form-check \">\r\n                                                             <input className =\"form-check-input\" \r\n                                                                    type=\"checkbox\" \r\n                                                                    name = 'taxEx'\r\n                                                                    value = 'TaxEx'\r\n                                                                    id = 'taxEx'                                                                  \r\n                                                                     />\r\n                                                             <label className =\"form-check-label\" >Tax Exemption</label>\r\n                                                        </div>\r\n                                                        <div className =\"form-check \">\r\n                                                        <input className =\"form-check-input\" \r\n                                                               type=\"checkbox\" \r\n                                                               value = \"isLab\" \r\n                                                               id = 'isLab'                                                                                                                            \r\n                                                               />\r\n                                                        <label className =\"form-check-label\">This is a Dental Lab </label>\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n                                            </div>                                      \r\n                                    </div>\r\n                                  <div className = 'd-flex flex-row   justify-content-between  align-items-start border-dark border-bottom pb-2 '>\r\n                                            <h1 >&#x20B9; </h1>\r\n                                            <div className = 'px-1 '>\r\n                                                <label className = ''>Credit Limit</label>\r\n                                                <input className = 'form-control' \r\n                                                                type = 'number'                                                                                                                                                    \r\n                                                                name = 'cerditLimit'\r\n                                                                placeholder = '0'\r\n                                                                value = {creditLimit}\r\n                                                                onChange = {handleChange('creditLimit')}\r\n                                                                />\r\n                                            </div>  \r\n                                            <div className = 'px-1 '>\r\n                                                 <label>  Payment Terms </label>                                                       \r\n                                                 <input className = 'form-control' \r\n                                                                type = 'number'                                                                                                                                                    \r\n                                                                name = 'paymentTerms'\r\n                                                                placeholder = '0'\r\n                                                                value = {paymentTerms}\r\n                                                                onChange = {handleChange('paymentTerms')}\r\n                                                                /> \r\n                                                    <span className=\"input-group-text\">Days</span>            \r\n                                            </div>                                            \r\n                                                \r\n                                              \r\n\r\n                                            <div className = ' px-2  '>\r\n                                                <label className = ''>Opening Balance</label>\r\n                                                <input className = 'form-control ' \r\n                                                                type = 'number'                                                                                                                                                    \r\n                                                                name = 'balance'\r\n                                                                placeholder = '0'\r\n                                                                value = {balance}\r\n                                                                onChange = {handleChange('balance')}\r\n                                                                />                                             \r\n                                              \r\n                                                  <span  className ='d-flex flex-row'>\r\n                                                        <div className=\"form-check form-check-inline\">\r\n                                                            <input className =\"form-check-input\" \r\n                                                                type=\"radio\"\r\n                                                                onChange = {handleChange('drcr')} \r\n                                                                name=\"drcr\"  \r\n                                                                value = 'dr'\r\n                                                                checked\r\n                                                                // checked ={values.drcr === '1'}\r\n                                                                />\r\n                                                            <label className =\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                                                Dr       </label>\r\n                                                            </div>\r\n                                                            <div className=\"form-check form-check-inline\">\r\n                                                            <input className=\"form-check-input\" \r\n                                                                type=\"radio\" \r\n                                                                onChange = {handleChange('drcr')} \r\n                                                                name=\"drcr\"\r\n                                                                value = 'cr'\r\n                                                                \r\n                                                                    />\r\n                                                            <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                                                cr\r\n                                                            </label>\r\n                                                            </div>     \r\n                                                    </span>         \r\n                                            </div>\r\n                                        </div>\r\n                                  <div className = 'd-flex flex-row align-items-end fs-4 border-dark border-bottom pb-2 '>\r\n                                     \r\n                                      <div id ='self' className = 'btn ' onClick = {()=> handleBillTo()}>Bill To :  self</div>\r\n                                   \r\n                                         \r\n                                                    <div className = 'w-75 d-none' id = 'billTo'>\r\n                                                      <Select   className = 'form-select '                                                                         \r\n                                                                        label = 'Bill To'                                                                     \r\n                                                                        name = 'billTo'\r\n                                                                        value = {billTo}\r\n                                                                        options = {clientNames}\r\n                                                                        onChange = {handleChange('billTo')}\r\n                                                                    />\r\n                                                                    </div>\r\n                                                    <Tooltip  title = {<div style ={{fontSize : '1.2rem', padding:'0.5rem'}}>\r\n                                                                            Send Bill to other Company or Doctor instead of the present Client</div>} >\r\n                                                             <IconButton >\r\n                                                                    <InfoIcon sx = {{fontSize : 30}}/>\r\n                                                             </IconButton>\r\n                                                        </Tooltip>\r\n                                           \r\n                                      </div>\r\n                                  <div className = 'border-dark border-bottom pb-2  '>\r\n                                    \r\n                                             <Select type = 'text' \r\n                                                    label = 'Category'\r\n                                                    name = 'category'\r\n                                                    value = {category}\r\n                                                    onChange = {handleChange('category')}\r\n                                                    style = {{ color : '#5c5c5c'}}\r\n                                                    options = {[{value: 'Select associated category'},\r\n                                                                    {value: 'Favourite Clients'},{value : 'International'},\r\n                                                                {value : 'Laboratory'},{value : 'Out Of State'},\r\n                                                                {value : 'Regular'},{value : 'Sensitive'},\r\n                                                                {value : 'Vora'}\r\n                                                            ]}\r\n                                                    />\r\n                                  </div>\r\n                                  <div className = 'border-dark border-bottom pb-2 '>\r\n                                                <label >Notes </label>\r\n                                                <input className = 'form-control'                                                             \r\n                                                                type = 'text'                                                                                                                                                    \r\n                                                                name = 'notes'\r\n                                                                value = {notes}\r\n                                                                onChange = {handleChange('notes')} \r\n                                                                />          \r\n                                  </div>\r\n                                </div>\r\n                                  \r\n                               \r\n                                \r\n    \r\n                     </div>\r\n                     </form>     \r\n                              <div className = 'd-flex flex-row justify-content-end my-3'>\r\n                              <button className = 'btn btn-info fs-3 mx-3  px-5'  type = 'submit' onClick={handleSubmit}  >Save{update? ' changes':''}</button>\r\n                              <button className = 'btn btn-info fs-3 mx-3'  type = 'submit' onClick={(e)=> \r\n                                              {  \r\n                                                 setPlaceOrder(true)\r\n                                                 handleSubmit(e)\r\n                                                  }\r\n                                                  }  >Save and New Order</button>\r\n                              <button className = 'btn btn-info fs-3 mx-3'  \r\n                                      onClick={handleClientCancel} \r\n                                       >Cancel</button>\r\n                              </div>\r\n                              {success && <TextError >Client created successfully</TextError> }\r\n                              {errorAlert && <TextError >Error while saving Client data!</TextError> }\r\n                   \r\n                    </div>\r\n                    </div>\r\n                 </>           \r\n            )\r\n    \r\n    \r\n}\r\n\r\nexport default NewClientForm;","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport tableIcons from '../../icons/MaterialUiIcons'\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport {  Tooltip } from '@material-ui/core';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\n\r\nconst ProductsTable = ({products,fetchProducts,onEditProduct,onDeleteProduct})  => {\r\n\r\nconsole.log(\"Products received  in table:\",products)\r\n       \r\n\r\nconst verifyDelete = (product) => {\r\n     \r\n    if(window.confirm(\"Are You sure you want to delete the Product type ?\")){\r\n        onDeleteProduct(product)\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n   const columns = [\r\n       {title : 'Product',field : 'name',cellStyle :{\r\n           fontSize:'1.8rem'\r\n       },defaultSort:'asc'},\r\n       \r\n   ]\r\n\r\n    return (\r\n        <div className = \"container \">\r\n            <MaterialTable columns = {columns}\r\n                           data = {products} \r\n                           icons = {tableIcons}\r\n                           title = \"Products\"\r\n                           actions = {[                          \r\n                             {\r\n                             icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Edit Product</div>}>\r\n                                        <EditIcon sx={{fontSize : 30}}/></Tooltip>,\r\n                             onClick:(e,data)=>{ \r\n                                                 onEditProduct(data)\r\n                                                 }\r\n \r\n                             },\r\n                             {\r\n                                icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Delete Product</div>}>\r\n                                           <DeleteOutlineIcon sx={{fontSize : 30}}/></Tooltip>,\r\n                                onClick:(e,data)=>{ \r\n                                    verifyDelete(data)\r\n                                                    }\r\n    \r\n                                }\r\n                            ]}\r\n                            options = {{\r\n                                padding:'dense',\r\n                                filtering:true,pageSizeOptions:[10,20,50],\r\n                                paginationType:'stepped',exportAllData:true,\r\n                                exportFileName : 'productdata',actionsColumnIndex:2,\r\n                                \r\n                                headerStyle : {\r\n                                    backgroundColor:'#01579b',\r\n                                    color:'#fff',\r\n                                    fontSize:'1.5rem',                                    \r\n                                },\r\n                                style:{ fontSize : '2rem'}\r\n                            }}\r\n                           >\r\n\r\n            </MaterialTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductsTable;","import React, { useState,useContext,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {createProduct,updateProduct} from '../../admin/clientApi';\r\nimport UserContext  from '../../context/UserContext';\r\nimport Menu from '../menu'\r\n\r\nconst ProductForm = ({categories,productTypes,fetchProducts,productToEdit,onCancel}) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const [values,setValues] = useState({\r\n    name :'',\r\n    code:'',\r\n    warranty:'',\r\n    productType:'MISC',\r\n    cpDays:'',\r\n    price:0,\r\n    isSlab:false,\r\n    slEnd1:'',\r\n    s1Price:'',\r\n    slEnd2:'',\r\n    s2Price:'',\r\n    s3Price:''\r\n  })\r\n  \r\n  const [showSecondSlab,setShowSecondSlab] = useState(false)\r\n  const [message,setMessage] = useState('')\r\n  const [alert,setAlert] = useState(false) \r\n  const [isUpdate,setIsUpdate] = useState(false)\r\n\r\n  const {user,token} = useContext(UserContext)   \r\n  \r\n  \r\n\r\n  useEffect(()=>{\r\n    if(productToEdit){\r\n       setIsUpdate(true)\r\n         \r\n    //    let productTypeName =  productTypes.filter(p => p._id === productToEdit.productType )\r\n       \r\n       \r\n        setValues({\r\n            _id : productToEdit._id,\r\n            name : productToEdit.name,\r\n            code :productToEdit.code,\r\n            warranty:productToEdit.warranty ,\r\n            productType :productToEdit.productType.name,\r\n            productTypeId:productToEdit.productType.productTypeId,\r\n            price:productToEdit.price ,\r\n            isSlab : productToEdit.slabPrice,\r\n            slEnd1 : productToEdit.slab1.end,\r\n            s1Price : productToEdit.slab1.s1price,\r\n            slEnd2:productToEdit.slab2.end,\r\n            s2Price : productToEdit.slab2.s2price,\r\n            s3Price : productToEdit.slab3.s3price,\r\n            priceband:productToEdit.priceband,\r\n            cpDays:productToEdit.cpDays\r\n        })\r\n       console.log(\"Editing mode On :::::::::::::::\")  \r\n      }\r\n  },[])\r\n \r\n  \r\n  const {name,code,warranty,productType,productTypeId,cpDays,price,isSlab,slEnd1,s1Price,slEnd2,s2Price,s3Price}  =  values  \r\n   \r\n   \r\n  const handleChange = (name) => e => {\r\n      e.preventDefault()\r\n      let val = e.target.value\r\n      setValues({...values,[name]:val})\r\n  }\r\n\r\n const handleSlabPricing = () => {\r\n     if(!isSlab) setValues({...values,isSlab : true})\r\n     else setValues({...values,isSlab : false})\r\n }\r\n\r\n\r\nconst handleSave =(e) => {\r\n            e.preventDefault()        \r\n        \r\n            let productTypeSelected = productTypes.filter(p => p.name === productType)\r\n            \r\n        let newValues = {\r\n            \r\n            name ,\r\n            code ,\r\n            warranty ,\r\n            productType : {name : productType,_id : productTypeSelected[0]._id},        \r\n            price ,\r\n            slabPrice:isSlab,\r\n            slab1 : { end : slEnd1, s1price:s1Price  },\r\n            slab2:{end : slEnd2, s2price: s2Price},\r\n            slab3:{s3price : s3Price},\r\n            priceband:'',\r\n            cpDays,\r\n        }\r\n            \r\n\r\nif(isUpdate){\r\n    \r\n    newValues._id = productToEdit._id\r\n    updateProduct(user._id,token,newValues)\r\n    .then(data =>{\r\n        if(data.status !== 200){\r\n            setMessage('Error in updating Product Type')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        }\r\n        else{\r\n            setIsUpdate(false)\r\n            setMessage('Prduct Types updated successfully')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n            fetchProducts()\r\n            setValues({\r\n                name :'',\r\n                code:'',\r\n                warranty:'',\r\n                productType:'MISC',\r\n                productTypeId:'',\r\n                cpDays:'',\r\n                price:0,\r\n                isSlab:false,\r\n                slEnd1:'',\r\n                s1Price:'',\r\n                slEnd2:'',\r\n                s2Price:'',\r\n                s3Price:''\r\n              })\r\n        }\r\n    })\r\n    .catch(err => {\r\n            setMessage('Error in updating Product Type')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n    })\r\n\r\n}\r\nelse {\r\n    createProduct(user._id,token,newValues)\r\n    .then(data =>{\r\n        if(data.status !== 200){\r\n            setMessage('Error in Saving Product Type')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        }\r\n        else{\r\n            setMessage('Prduct Types saved successfully')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n            fetchProducts()\r\n            setValues({\r\n                name :'',\r\n                code:'',\r\n                warranty:'',\r\n                productType: 'MISC', \r\n                productTypeId:'',\r\n                cpDays:'',\r\n                price:0,\r\n                isSlab:false,\r\n                slEnd1:'',\r\n                s1Price:'',\r\n                slEnd2:'',\r\n                s2Price:'',\r\n                s3Price:''\r\n              })\r\n        }\r\n    })\r\n    .catch(err => {\r\n            setMessage('Error in Saving Product Type')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n    })\r\n}\r\n \r\n\r\n\r\n  }  \r\n\r\n    return (\r\n\r\n       \r\n\r\n        <div className = 'container '>\r\n         \r\n            <h1> Add New Product</h1>\r\n            {alert && <div className = 'fs-3 text-danger' >{message}</div>}   \r\n            <div className=\"d-flex\">\r\n                <form>\r\n                    <div className = 'd-flex flex-row'>\r\n                            <div className=\"form-group w-50 fs-4\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input className = ''\r\n                                    type = 'text'\r\n                                    name  = 'name'\r\n                                    value = {name}\r\n                                    onChange = {handleChange('name')}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group mx-2 fs-4\">\r\n                                <label htmlFor=\"code\">code</label>\r\n                                <input className = ''\r\n                                    type = 'text'\r\n                                    name  = 'code'\r\n                                    value = {code}\r\n                                    onChange = {handleChange('code')}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group mx-2 fs-4\">\r\n                                <label htmlFor=\"warranty\">Warranty</label>\r\n                                <div className=\"d-flex flex-row\">\r\n                                    <input className = 'w-50'\r\n                                        type = 'number'\r\n                                        name  = 'warranty'\r\n                                        value = {warranty}\r\n                                        defaultValue = '0'\r\n                                        placeholder = '0'\r\n                                        onChange = {handleChange('warranty')}\r\n                                        />\r\n                                        <span className = 'w-50 px-2'>years</span>\r\n                                    </div>\r\n                            </div>\r\n                    </div>\r\n                    <div className = 'd-flex flex-row justify-content-between'>\r\n                            <div className = 'form-group  w-50'>\r\n                                <label className = 'fs-4'>Type</label>\r\n                                        <select name=\"productType\" \r\n                                                value = {productType}  \r\n                                                onChange = {handleChange('productType')}\r\n                                                defaultValue = \"MISC\"\r\n                                                className = 'form-select fs-4 '>\r\n                                            <option>Select Type</option>\r\n                                        {productTypes.length>0 && productTypes.map(type =>  <option key = {type._id} \r\n                                                                                                value = {type.name}                                                                                                                                                                                        \r\n                                                                                                >{type.name}</option>)}\r\n                                        \r\n                                        </select>\r\n                            </div>\r\n                    \r\n               \r\n                    \r\n                                    <div className=\"form-group w-25 fs-4\">\r\n                                        <label htmlFor=\"name\">Completion Period</label>\r\n                                        <div className = 'row'>\r\n                                                <input className = 'col'\r\n                                                    type = 'number'\r\n                                                    name  = 'cpDays'\r\n                                                    defaultValue = '5'\r\n                                                    placeholder = '5'\r\n                                                    value = {cpDays}\r\n                                                    onChange = {handleChange('cpDays')}\r\n                                                    /><span className = 'col'>Days</span>\r\n                                            </div>\r\n                                    </div>\r\n                            </div>\r\n\r\n                    <div className = 'd-flex flex-row align-items-center'>  \r\n                            <div className=\"form-group w-25 mx-2 fs-4\">\r\n                                <label htmlFor=\"code\">Standard Charge</label>\r\n                                <input className = ''\r\n                                    type = 'text'\r\n                                    name  = 'price'\r\n                                    value = {price}\r\n                                    onChange = {handleChange('price')}\r\n                                    />\r\n                            </div>                  \r\n\r\n\r\n                            <div className = 'form-check fs-4 mx-3'>\r\n                                <input className = 'form-check-input'\r\n                                        type = 'checkbox'\r\n                                        value = {isSlab}   \r\n                                        cheked = {isSlab} \r\n                                        onClick = {() => handleSlabPricing()}                              \r\n                                    />\r\n                                    <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                        use Slab Pricing\r\n                                        </label>\r\n                            </div>\r\n\r\n                    </div>\r\n                 { isSlab &&    \r\n                        <div className = 'border border-dark rounded fs-4  px-3'>\r\n                            <div className = 'd-flex flex-row justify-content-between'>\r\n                                        <div className=\"d-flex flex-row justify-content-around py-2 mx-2 \">\r\n                                            <div className=\"d-flex flex-row \">\r\n                                            <div className = 'w-75'> First </div> \r\n                                                <input className = 'form-control w-25 mx-2' name = 'slEnd1' \r\n                                                                                            value = {slEnd1}\r\n                                                                                            onChange = {handleChange('slEnd1')}\r\n                                                                                            />\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-row \">\r\n                                            <div className = 'w-75'> Units@ </div>\r\n                                               <input className = 'form-control w-25' name = 's1Price' \r\n                                                                                      value = {s1Price}\r\n                                                                                      onChange = {handleChange('s1Price')}                                                                                      \r\n                                                                                      />\r\n                                            </div>\r\n                                            <div>Per Unit</div>\r\n                                        </div>\r\n                                <div className = 'btn btn-info px-3 fs-2 text-white'\r\n                                     onClick = {() => {\r\n                                           \r\n                                          setShowSecondSlab(true)\r\n                                            \r\n                                     }}    ><strong>+</strong></div>\r\n                                </div> \r\n                          {   showSecondSlab && <div className=\"d-flex flex-row justify-content-around  py-2\"  >\r\n                                <div className=\"d-flex flex-row \">\r\n                                <div className = 'w-75'>  Next</div>\r\n                                    <input className = 'form-control w-25 mx-2' name = 'slEnd2' \r\n                                                                                value = {slEnd2} \r\n                                                                                onChange = {handleChange('slEnd2')}                                                                                \r\n                                                                                />\r\n                                </div>\r\n                                <div className=\"d-flex flex-row \">\r\n                                    <div className = 'w-75'> Units@ </div>\r\n                                         <input className = 'form-control w-25' name = 's2Price' \r\n                                                                                value = {s2Price}\r\n                                                                                onChange = {handleChange('s2Price')}                                                                                \r\n                                                                                />\r\n                                </div>\r\n                                <div>Per Unit</div>\r\n                            </div>\r\n                               }\r\n\r\n\r\n                            <div className=\"d-flex flex-row  py-2\">\r\n                                <div className=\"w-50 \">\r\n                                    Remaining Units@ \r\n                                </div>\r\n                                <div className=\"w-25 \">\r\n                                    <input className = 'form-control' name = 's3Price' \r\n                                                                      value = {s3Price} \r\n                                                                      onChange = {handleChange('s3Price')}                                                                      \r\n                                                                      />\r\n                                    </div>\r\n                                    <div className =  'px-2'>Per Unit</div>\r\n                            </div>\r\n                                \r\n\r\n                        </div>\r\n                   }\r\n\r\n                  <div className ='d-flex flex-row justify-content-end mt-3'> \r\n                        <button className=\"btn btn-info mx-3 fs-3 text-white\" onClick = {handleSave}>Save</button>\r\n                        <button className=\"btn btn-info mx-3 fs-3 text-white\"  onClick = {onCancel}>Cancel</button>\r\n                  </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductForm;","import { IconButton } from '@material-ui/core';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport React, { useContext, useState } from 'react';\r\nimport { createProductType, updateProductType ,deleteProductType} from '../../admin/clientApi';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nconst  ProductType = ({categories,productTypes,fetchProductTypes}) => {\r\n \r\n \r\n    const {user,token} = useContext(UserContext)\r\n \r\n    const [values,setValues] = useState({\r\n        name:'', \r\n        category:'',      \r\n        categoryId:''\r\n    })\r\n\r\n    const {_id,name,category,categoryId} = values \r\n\r\n\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n     const [edit,setEdit] = useState(false)\r\n\r\n    \r\n\r\n const handleChange = name => e =>{\r\n        e.preventDefault()\r\n      \r\n        let val = e.target.value;\r\n        setValues({...values,[name]:val})\r\n }\r\n\r\n const verifyDelete = (productType) => {\r\n     \r\n     if(window.confirm(\"Are You sure you want to delete the Product type ?\")){\r\n                   handleDelete(productType)\r\n     }\r\n     \r\n }\r\n\r\nconst handleDelete = productType => {\r\n\r\n   console.log(\"Product to be deleted : \",productType)\r\n\r\n  \r\n    deleteProductType(productType,user._id,token)\r\n    .then(data => {\r\n        if(data.status !== 200){\r\n              setMessage(\"Error deleting Product Type\")\r\n              setAlert(true)\r\n              setTimeout(()=>setAlert(false),2000)\r\n        }\r\n        else{\r\n\r\n            setMessage(\"Product Type was deleted successfully\")\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n            fetchProductTypes()\r\n            setValues({ name : \"\", category :'', categoryId : ''})\r\n        }\r\n    } )\r\n    .catch( err => {\r\n             setMessage(\"Error deleting Product Type\")\r\n              setAlert(true)\r\n              setTimeout(()=>setAlert(false),2000)\r\n    })\r\n       \r\n}\r\n const handleSave = ()=>{      \r\n       \r\n\r\n if(edit){\r\n     console.log(\"Editing Product type \",values)\r\n\r\n            let newValues = {\r\n                _id,\r\n                name,\r\n                category : {name : category, _id : categoryId}\r\n                }\r\n          \r\n             console.log(\" update values : \",newValues)   \r\n             updateProductType(user._id,token,newValues)\r\n             .then(data =>{\r\n                 if(data.status !== 200){\r\n                     setMessage('Error in Saving Product Type')\r\n                     setAlert(true)\r\n                     setTimeout(()=>setAlert(false),2000)\r\n                    }\r\n                    else{\r\n                        setMessage('Prduct Type updated successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>setAlert(false),2000)\r\n                        fetchProductTypes()\r\n                        setValues({ name : '',category: '',categoryId : ''})\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setMessage('Error in Saving Product Type')\r\n                    setAlert(true)\r\n                    setTimeout(()=>setAlert(false),2000)\r\n                })      \r\n                setEdit(false)\r\n\r\n }\r\n else {\r\n    let selectedCategory = categories.filter(c => c.name === category)    \r\n     \r\n    let newValues = {\r\n                name,\r\n                category : {...selectedCategory[0]}\r\n    }\r\n    \r\n \r\n \r\n createProductType(user._id,token,newValues)\r\n .then(data =>{\r\n     if(data.status !== 200){\r\n         setMessage('Error in Saving Product Type')\r\n         setAlert(true)\r\n         setTimeout(()=>setAlert(false),2000)\r\n     }\r\n     else{\r\n         setMessage('Prduct Types saved successfully')\r\n         setAlert(true)\r\n         setTimeout(()=>setAlert(false),2000)\r\n         fetchProductTypes()\r\n         setValues({ name : '', categoryId : ''})\r\n     }\r\n })\r\n .catch(err => {\r\n          setMessage('Error in Saving Product Type')\r\n          setAlert(true)\r\n          setTimeout(()=>setAlert(false),2000)\r\n })\r\n\r\n }\r\n     \r\n        \r\n}\r\n\r\nconst productTypeForm = () => {\r\n\r\n    \r\n    return (\r\n        <div className = ' mx-auto'>\r\n              \r\n              <form>\r\n                  <div className = 'border border-dark p-3 '>\r\n                  {/* <h2>Add New Product Type</h2> */}\r\n                  {alert && <div className = 'fs-3 text-danger' >{message}</div>}   \r\n                  <div className=\"d-flex flex-column flex-md-row justify-content-around \">\r\n                      <div className=\" form-group \">\r\n                            <label className = 'fs-4'>Name</label>\r\n                            <input type=\"text\"\r\n                                    className = 'form-control'\r\n                                    value = {name}\r\n                                    onChange = {handleChange('name')}\r\n                                    />\r\n                      </div>\r\n                         <div className=\" form-group mx-2\">\r\n                         <label className = 'fs-4'>Category</label> \r\n                            <select name = 'category'\r\n                                    className = 'fs-3 form-select'  \r\n                                    value = {category}\r\n                                    onChange = {handleChange('category')}\r\n                                       >\r\n                              <option>Select Category</option>             \r\n                             {categories.length>0 && categories.map(cat =>  <option key = {cat._id} \r\n                                                                                value = {cat.name}                                                                                                                                                                                                                                     \r\n                                                                                >{cat.name}</option>)}\r\n                                </select>  \r\n                         </div>\r\n                      <div className=\"btn btn-info fs-3 text-white px-3\"\r\n                           onClick = {handleSave} \r\n                            >Save</div>\r\n                  </div>\r\n                  \r\n                  </div>        \r\n              </form>\r\n          </div>\r\n    )\r\n}\r\n\r\nconst productTypesTable = () => {\r\n\r\n    return (\r\n        <div className = 'container-fluid  '>\r\n        {productTypes.length>0 && <ul>\r\n            {productTypes.map(productType => <li key = {productType._id}>\r\n                       <div className=\"row  \">\r\n                           <div className=\"col-8 border border-dark fs-3\" onClick = {()=> {\r\n                                                                        setValues({_id:productType._id,\r\n                                                                                    name : productType.name, \r\n                                                                                    category : productType.category.name, \r\n                                                                                    categoryId : productType.category._id})\r\n                                                                     }} >{productType.name}</div>                          \r\n                           <div className=\"col-2 border border-dark \" onClick = {() =>{\r\n                                                                    setEdit(true) \r\n                                                                    setValues({_id:productType._id,\r\n                                                                        name : productType.name, \r\n                                                                        category : productType.category.name, \r\n                                                                        categoryId : productType.category._id})\r\n                                                                        console.log(\"Set Edit : \",edit)\r\n\r\n                                                                }\r\n                               }>            <IconButton  >\r\n                                                 <EditIcon sx={{ fontSize: 30 }} />                                              \r\n                                             </IconButton>\r\n                                             </div>\r\n                                   <div className=\"col-2 border border-dark\"  onClick = {()=>verifyDelete(productType)}>\r\n                                        <IconButton  >   <DeleteOutlineIcon sx={{ fontSize: 30 }}/></IconButton>\r\n                                        </div>\r\n                       </div>\r\n            </li> )}\r\n            \r\n            </ul>}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'container-fluid'>\r\n            <h2>Product Type</h2>\r\n            {productTypeForm()}\r\n          <div className = 'my-3'>\r\n             {productTypesTable()}\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductType;","import React,{useState,useContext} from 'react';\r\nimport UserContext from '../../context/UserContext'\r\n\r\nimport { createCategory,getCategories } from '../../admin/clientApi';\r\n\r\n\r\nconst Category = ({categories,fetchCategories}) => {\r\n\r\n     const [newCategory,setNewCategory] = useState('')\r\n     const [addNewCategory,setAddNewCategory] = useState(false)\r\n     const [alert,setAlert] = useState(false)\r\n     const [message,setMessage] = useState('')\r\n     const [isupdate,setIsUpdate] = useState(false)\r\n     const {user,token} = useContext(UserContext)\r\n\r\n\r\n const handleChange = e => {\r\n    \r\n    setNewCategory(e.target.value)\r\n }\r\n\r\nconst handleSave = () => {\r\n\r\nconsole.log(\"Category to be saved : \",newCategory)\r\n\r\n    createCategory(user._id,token,{name : newCategory})\r\n    .then(data =>{\r\n        if(data.status !== 200){\r\n            setMessage('Error while creating new category')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        }\r\n        else{\r\n            \r\n            setMessage('category created successfully')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n            getCategories()\r\n            setNewCategory('')\r\n        }\r\n    })\r\n    .catch(err => {\r\n            setMessage('Error while creating new category')\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n    })\r\n\r\n}\r\n\r\n    return (\r\n        <div className = 'w-50'>\r\n            <div className=\"btn btn-info m-3 fs-4\"  \r\n                 onClick = {()=> { console.log(\"Hi i m clicked\") \r\n                                         setAddNewCategory(true)} }   \r\n                     >Add New Category</div>\r\n                     {alert && <div className=\"fs-4 text-danger\">{message}</div>}\r\n                   {categories.length > 0 && <ul>\r\n                  {categories.map(cat => <li className = 'border border-dark fs-3 p-3' key = {cat._id}>{cat.name}</li>  )}\r\n                  \r\n              </ul>}\r\n              {addNewCategory &&  <div className=\"container\">\r\n                                        <form>\r\n                                            <div className=\"form-group fs-4\">\r\n                                                <label>Category Name </label><span>\r\n                                                        <input className = 'form-group'\r\n                                                            type = 'text'\r\n                                                            value = {newCategory}\r\n                                                            onChange = {handleChange} \r\n                                                                />\r\n                                                            </span>\r\n\r\n                                            </div>\r\n\r\n                                        </form>\r\n                                            <div className=\"btn btn-info fs-4\"\r\n                                                 onClick = {handleSave}\r\n                                                 >Save</div>  \r\n                                        </div> \r\n                       }   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Category;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Menu from '../components/menu'\r\nimport ProductsTable from '../components/Products/ProductsTable';\r\nimport ProductForm from '../components/Products/ProductForm'\r\nimport ProductType from '../components/Products/ProductType';\r\nimport Category from '../components/Products/Category'\r\nimport {getCategories,getProductTypes,getProducts,deleteProduct} from '../admin/clientApi'\r\nimport ProductContext from '../context/ProductContext'\r\nimport UserContext from '../context/UserContext';\r\nimport '../css/product.css'\r\n\r\n\r\nconst Products = (props) => {\r\n\r\n   \r\n    const [showProductsTable,setShowProductsTable] = useState(true)\r\n    const [productForm,setProductForm] = useState(true)\r\n  \r\n    const [categories,setCategories] = useState([])\r\n    const [productTypes,setProductTypes] = useState([])\r\n    const [productSelected,setProductSelected] = useState(null) \r\n    const [products,setProducts] = useState([])\r\n    const {user,token} = useContext(UserContext)\r\n    const [values,setValues] = useState({\r\n        error:'',\r\n        loading:false\r\n    })\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n    const [currentTab ,setCurrentTab] = useState(1)\r\n\r\n    const fetchProducts = async () => {     \r\n          setValues({error:'', loading:true})\r\n        await getProducts(user._id,token)\r\n                       .then(data => {\r\n                           if(data.error){\r\n                          setValues({error : data.error,loading : false})\r\n                           }\r\n                           else {\r\n                              setValues({error : '',loading : false})\r\n                              setProducts(data)\r\n                           }\r\n                       })\r\n                       .catch(err => { \r\n                        setValues({error : err,loading : false}) })\r\n\r\n\r\n}\r\n\r\n\r\nconst fetchCategories = async () => {\r\n \r\n        let categories = await  getCategories()\r\n        setCategories(categories) \r\n\r\n   }\r\n   const fetchProductTypes = async () => {      \r\n       \r\n       let productTypes = await getProductTypes()\r\n       setProductTypes(productTypes)\r\n\r\n       \r\n   }\r\n\r\nconst handleEditProduct = product => {  \r\n    \r\n    setProductSelected(product)\r\n    setCurrentTab(3)   \r\n \r\n}\r\n\r\nconst handleDeleteProduct =  async product => {\r\n  \r\n    await deleteProduct(user._id,token,product)\r\n         .then(\r\n              data => {           \r\n                setMessage(\"Product  was deleted successfully\")\r\n                setAlert(true)\r\n                setTimeout(()=>setAlert(false),2000)\r\n                fetchProducts()\r\n                \r\n        \r\n         }\r\n         )\r\n         .catch(err => {\r\n            setMessage(\"Error deleting Product\")\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n         })\r\n\r\n}\r\n\r\nconst productMenuTabs = ()=> {\r\n    return (\r\n        <div className = 'd-flex flex-row  justify-content-around  '\r\n        style = {{backgroundColor : 'dodgerblue'}} >\r\n         \r\n           <div className=\"btn  text-white fs-3 p-2\" \r\n                style = {currentTab === 1 ?{backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'} }\r\n                onClick = {()=>{\r\n                   \r\n                    setCurrentTab(1)\r\n                }}\r\n                >Products</div> \r\n           <div className=\"btn  text-white fs-3 p-2\" \r\n                style = {currentTab === 2 ?{backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'} }\r\n                onClick = {()=>{\r\n                   \r\n                    setCurrentTab(2)\r\n                }}\r\n                >Product Types</div> \r\n           <div className=\"btn  text-white fs-3 p-2\" \r\n                style = {currentTab === 3 ?{backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'} }\r\n                onClick = {()=>{                   \r\n                    setCurrentTab(3)\r\n                }}\r\n                >Add New Product</div> \r\n           <div className=\"btn  text-white fs-3 p-2\" \r\n                style = {currentTab === 4 ?{backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'} }\r\n                onClick = {()=>{\r\n                    \r\n                    setCurrentTab(4)\r\n                }}\r\n                >Category</div> \r\n\r\n        </div>\r\n    )\r\n} \r\n\r\nconst handleCancel = () => {\r\n    setProductSelected(null)\r\n    setCurrentTab(1)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    fetchProducts()\r\n    fetchCategories()\r\n    fetchProductTypes()\r\n},[productSelected])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n\r\n           <div className=\" container-100-mdx60-xlx50 \">\r\n             {productMenuTabs()}   \r\n                  <div className = 'p-5'>\r\n                    {alert && <div className = 'fs-3 text-danger' >{message}</div>}   \r\n\r\n                    {currentTab===2 && <ProductType categories = {categories} \r\n                                                      productTypes = {productTypes} \r\n                                                      fetchProductTypes = {fetchProductTypes}/>}\r\n                    { currentTab===3 &&  <ProductForm  categories = {categories} \r\n                                                    productTypes = {productTypes}\r\n                                                    productToEdit = {productSelected}\r\n                                                    fetchProducts = {fetchProducts}\r\n                                                    onCancel={handleCancel}\r\n                                                    /> }\r\n                    { currentTab===1 && <ProductsTable products = {products} \r\n                                                          fetchProducts = {fetchProducts}\r\n                                                          onEditProduct = {handleEditProduct}\r\n                                                          onDeleteProduct = {handleDeleteProduct}\r\n                                                          />}\r\n                    {currentTab===4 && <Category categories = {categories} fetchCategories = {fetchCategories} />}  \r\n                    </div>  \r\n                   \r\n\r\n               </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;","import React from 'react';\r\nimport Menu from '../components/menu'\r\n\r\nconst Shipment = (props) =>  {\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            Shipment Page is under construction\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Shipment;","import React from 'react';\r\n\r\nconst AdjustmentContext = React.createContext();\r\nAdjustmentContext.displayName = 'AdjustmentContext'\r\nexport default AdjustmentContext;","const getIndex = (tooth) =>{\r\n\r\n    return tooth.slice(1)\r\n}\r\n\r\nconst getArch = (tooth) =>{\r\n   \r\n     return tooth.slice(0,1)\r\n}\r\n\r\n\r\nexport const getTeethArchset = (teethArray) => {\r\n    const teeth = []\r\n    \r\n\r\n    if(teethArray.length>0){\r\n          teethArray.forEach((tooth,index) => {\r\n                        let arch =   getArch(tooth)\r\n                        let val = getIndex(tooth)\r\n                           \r\n                       \r\n                        if(arch == '1')\r\n                        {\r\n                            teeth[1] = (teeth[1]?teeth[1] :'') + '' + val\r\n                        }\r\n                        else if(arch == '2') \r\n                               teeth[2] = (teeth[2]?teeth[2] :'') + ''+ val\r\n\r\n                        else if(arch == '3')  \r\n                                teeth[3]  = (teeth[3]?teeth[3] :'') + ''+ val\r\n                        else if(arch == '4')  teeth[4]  = (teeth[4]?teeth[4]:'') + ''+ val\r\n        \r\n                    })        \r\n        \r\n         \r\n    }\r\n    return teeth\r\n}","import React,{useContext} from 'react';\r\nimport OrderContext from '../../../context/OrderContext';\r\nimport ClientContext from '../../../context/ClientContext';\r\nimport AdjustmentContext from '../../../context/AdjustmentContext';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport {Tooltip } from '@material-ui/core';\r\nimport {addToPrint} from '../../print/printAPI'\r\nimport {getTeethArchset} from './productsApi'\r\n\r\n\r\nconst InvoicePrintIcon = ({invoice}) => {\r\n        \r\n    \r\n     const {orders} = useContext(OrderContext)\r\n     const {clients} = useContext(ClientContext)\r\n     const {adjustments} = useContext(AdjustmentContext)\r\n     \r\n\r\n\r\n\r\n\r\nconst getOrdersList = () => {\r\n\r\n\r\n   return  orders.filter(order => invoice.ordersList.includes(order._id))  \r\n\r\n}\r\nconst getAdjustmentDetail = (adjustmentNo) => {\r\n\r\n   const ad = adjustments.filter(adj => adj.adjNo === adjustmentNo)\r\n    return ad[0]\r\n\r\n}\r\nconst getClient = () => {\r\n    return clients.filter(client => invoice.clientId === client._id)\r\n}\r\nconst makeInvoiceToPrint = () =>{\r\n    \r\n        let invoiceOrdersList = getOrdersList()    \r\n        let newOrderList = [...invoiceOrdersList] \r\n        let clientdata = getClient()                                                \r\n        let totalunits = 0                                                      \r\n        let adjustment = {}\r\n        if(invoice.adjustmentNo)\r\n               adjustment =  getAdjustmentDetail(invoice.adjustmentNo)\r\n               console.log(\"Adjustment Found :\" ,adjustment)\r\n         invoiceOrdersList.forEach((order,index) => {\r\n            let productsList = []    \r\n            let ts = []                                                           \r\n            let units = 0\r\n            let teethList = []\r\n                 if(order.products.length > 0 ){\r\n                 order.products.forEach(product =>{ \r\n                                                       productsList.push(` ${product.product}`)                                                      \r\n                                                       if(product.teethSelected.length>0)\r\n                                                             ts = [...ts,...product.teethSelected] \r\n                                                            units += product.teethSelected.length\r\n                                                         })\r\n               }\r\n\r\n             newOrderList[index].productsList = productsList.join()\r\n             newOrderList[index].teethSelected = [...ts]\r\n             newOrderList[index].units = units\r\n             totalunits += units                                                            \r\n             teethList = getTeethArchset(newOrderList[index].teethSelected)\r\n            \r\n             newOrderList[index].teethList = [...teethList] \r\n             })\r\n         \r\n             console.log(\"Invoice Value sent for  Print :\",{...invoice,discount : adjustment.amount,totalunits:totalunits ,ordersList : newOrderList,clientDetail : clientdata})\r\n            \r\n             addToPrint({...invoice,discount : adjustment.amount,totalunits:totalunits, ordersList : newOrderList,clientDetail : clientdata})\r\n    \r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Print Invoice</div>}>                              \r\n                                                <PrintIcon sx={{fontSize : 30}}  onClick = {()=>{                                                    \r\n                                                    makeInvoiceToPrint()\r\n                                                }}/>\r\n                                         \r\n                                            </Tooltip>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InvoicePrintIcon;","import React,{useContext, useEffect, useState} from 'react';\r\nimport  {Link,useHistory} from 'react-router-dom'\r\nimport InvoiceContext from '../../../context/InvoiceContext';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport tableIcons from '../../../icons/MaterialUiIcons'\r\nimport {  TablePagination, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CancelPresentationIcon from '@mui/icons-material/CancelPresentation';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport MoneyIcon from '@mui/icons-material/Money';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ClientContext  from '../../../context/ClientContext';\r\nimport OrderContext from '../../../context/OrderContext';\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\nimport InvoicePrintIcon from './InvoicePrintIcon';\r\nimport SearchComponent from '../../searchComponent';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"blue\",\r\n      color: \"green\"\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"white\"\r\n    },\r\n    caption: {\r\n      color: \"black\",\r\n      fontSize: \"20px\"\r\n    },\r\n    selectIcon: {\r\n      color: \"blue\",\r\n      fontSize:'2rem'\r\n    },\r\n    select: {\r\n      color: \"blue\",\r\n      fontSize: \"2rem\"\r\n    },\r\n    actions: {\r\n      color: \"blue\"\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\nconst  InvoiceTable = ({invoices,onInvoiceSelect,path}) =>  {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const {invoiceSelected,setInvoiceSelected} = useContext(InvoiceContext)\r\n    const {clients,setClientSelected,onClientSelect} = useContext(ClientContext) \r\n    const [searchString,setSearchString] = useState('')\r\n    const {orders} = useContext(OrderContext)\r\n    const [data,setData] = useState([])\r\n    const [filteredData,setFilteredData] = useState([])\r\n\r\nconst findClientSelected = (id) => {\r\n        let newClient = clients.filter(client => client._id === id)\r\n          \r\n        return newClient[0]\r\n}\r\nconst handleUpdate = (filtered) => {\r\n  setFilteredData(filtered)\r\n}\r\nconst handleSearch = e =>{\r\n   \r\n   setSearchString(e.target.value)\r\n}\r\n\r\n\r\n   const columns = [\r\n    {title : 'Invoice#',field : 'invoiceNo',cellStyle :{fontSize:'1.6rem'},\r\n                        render: rowData => <Link style = {{textDecoration : 'none'}} \r\n                                                 to = {path} \r\n                                                 onClick = {()=>\r\n                                                          {\r\n                                                          setClientSelected(findClientSelected(rowData.clientId))   \r\n                                                          setInvoiceSelected(rowData)\r\n                                                          onInvoiceSelect(rowData)}}>\r\n                                                          {rowData.invoiceNo}\r\n                                                          </Link>},\r\n    {title : 'Invoice Date',field : 'invoiceDate',cellStyle :{fontSize:'1.6rem'},render : rowData => <div>{new Intl.DateTimeFormat(\"en-GB\").format(new Date(rowData.invoiceDate))}</div>},\r\n    {title : 'Client', field:'client',cellStyle :{fontSize:'1.6rem'},\r\n                      render : rowData => <Link to = '/client/clientprofile' \r\n                                                style = {{textDecoration : 'none'}} \r\n                                                onClick = {()=> {\r\n                                         onClientSelect(findClientSelected(rowData.clientId))\r\n                                                 }}>{rowData.client.toUpperCase()}</Link>},\r\n    {title : 'Amount',field : 'amount',cellStyle :{fontSize:'1.6rem'}},\r\n    {title :'Due Date',field :'invoiceDueDate',cellStyle :{fontSize:'1.6rem'}},\r\n    {title :'Paid',field :'paid',cellStyle :{fontSize:'1.6rem'}},\r\n    {title :'Balance',field :'balance',cellStyle :{fontSize:'1.6rem'},\r\n                      render : rowData => <div style = {(!rowData.drcr) ? {color:'red'}:{color:'green'}}>{rowData.balance}</div>  },\r\n    {title :'Actions',field : '',maxWidth :'15px',render : rowData => <Link target={\"_blank\"} \r\n                                                    style = {{color:'#000'}}\r\n                                                    to = {`/print/invoice/${rowData._id}`} >\r\n                                                     <InvoicePrintIcon invoice = {rowData} /></Link>},\r\n   {title :'', field :'', maxWidth :'15px',render : rowData => <Link style = {{textDecoration : 'none',color : '#000'}} \r\n                                                    to = {path} \r\n                                                    onClick = {()=>\r\n                                                            {\r\n                                                            setClientSelected(findClientSelected(rowData.clientId))   \r\n                                                            setInvoiceSelected(rowData)\r\n                                                            onInvoiceSelect(rowData)}}>\r\n                                     <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Edit</div>}>\r\n                                     <EditIcon sx={{fontSize : 30}} /></Tooltip> \r\n                                    </Link>}\r\n   \r\n                    ]\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n  setFilteredData(invoices)\r\n  setData(invoices)\r\n},[])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'container-fluid'> \r\n         <div className='fs-4'>Invoice Date</div>\r\n         <SearchComponent data = {data} \r\n                          onUpdate = {handleUpdate} \r\n                          searchField='invoiceDate'/>\r\n         { (invoices.length > 0) &&                   \r\n            <MaterialTable  columns = {columns}\r\n                            data = {filteredData}\r\n                            icons = {tableIcons}\r\n                            title = \"INVOICE TABLE\"                           \r\n                            actions = {[                             \r\n                            \r\n                              {icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Email</div>}>\r\n                                     <MailOutlineIcon sx={{fontSize : 30}} /></Tooltip>,\r\n                               onClick:(e,data)=>{  \r\n                                                    console.log(data)\r\n                                                    // onCancelOrderInInvoice(data)\r\n                                                  \r\n                                                  } \r\n                                  },\r\n                              {icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>sms</div>}>\r\n                                     <PhoneAndroidIcon sx={{fontSize : 30}} /></Tooltip>,\r\n                               onClick:(e,data)=>{  \r\n                                                   setInvoiceSelected(data)\r\n                                                   history.push('/invoice/newinvoice')\r\n                                                    // onCancelOrderInInvoice(data)\r\n                                                  \r\n                                                  } \r\n                                  },\r\n                              {icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>WhatsApp</div>}>\r\n                                     <WhatsAppIcon sx={{fontSize : 30}} /></Tooltip>,\r\n                               onClick:(e,data)=>{  \r\n                                                    console.log(data)\r\n                                                    // onCancelOrderInInvoice(data)\r\n                                                  \r\n                                                  } \r\n                                  },\r\n                           \r\n                            ]}\r\n                            components = {{\r\n                              Toolbar : props => (\r\n                                <div style = {{padding:'10px 0px'}}>\r\n                                  <MTableToolbar {...props} />\r\n                                  <div>\r\n                                    <select name = 'search'\r\n                                            className = 'fs-4 px-3 mx-3'\r\n                                            onChange = {handleSearch} \r\n                                             >\r\n                                      <option value = ''>Last 1 week</option>\r\n                                      <option value = ''></option>\r\n                                      <option value = ''></option>\r\n                                      <option value = ''></option>\r\n                                      <option value = ''></option>\r\n                                      <option value = ''></option>\r\n                                    </select>\r\n                                  </div>\r\n                                </div>\r\n                              )\r\n                              ,\r\n                                Pagination:props => (\r\n                                  \r\n                                  (\r\n                                    <TablePagination \r\n                                    component = 'div'\r\n                                    colSpan={props.colSpan}\r\n                                    count={props.count}\r\n                                    rowsPerPage={props.rowsPerPage}\r\n                                    page={props.page}\r\n                                    onChangePage={props.onChangePage}\r\n                                    onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                                    classes = {{\r\n                                      root: classes.root,\r\n                                      toolbar:classes.toolbar,\r\n                                      caption:classes.caption,\r\n                                      selectIcon:classes.selectIcon,\r\n                                      select:classes.select,\r\n                                      actions:classes.actions,                                                     \r\n                                    }}\r\n                                    />\r\n                                  )\r\n                                )\r\n                              }}\r\n                      \r\n                         options={{\r\n                           filtering:true,\r\n                           pageSize:50,\r\n                           padding:'dense',\r\n                           actionsColumnIndex:-1,\r\n                           pageSizeOptions:[10,20,50,100],\r\n                           paginationType:'stepped',\r\n                           exportAllData : true,\r\n                           exportFileName:'orderdata',\r\n                           columnsButton:true,                             \r\n                           rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\"}:null  ,\r\n                           showTextRowsSelected:false,\r\n                           headerStyle: {\r\n                            backgroundColor: '#01579b',\r\n                            color: '#FFF',\r\n                            fontSize:'1.5rem'\r\n                          },\r\n                         style:{\r\n                         fontSize : '1.5rem'\r\n                       } \r\n                       }}\r\n                  >\r\n\r\n            </MaterialTable>\r\n            }\r\n            {invoices.length === 0 && <div className = 'fs-3 text-center'>No Invoices found </div>}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default InvoiceTable;","import React from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n const SubMenuAccounts  = ({history}) => {\r\n\r\n    const currentTab = (history, path) => {\r\n    \r\n        if(history.location.pathname === path) return {backgroundColor: \"#0b8df7\"};\r\n        else return {color:\"#FFFFFF\"};\r\n     \r\n     };\r\n   \r\n\r\n\r\n        return (\r\n            <div className = ''>\r\n                <div className=\"d-flex flex-row  flex-wrap bg-info\">\r\n                    <Link className=\"btn btn-info fs-4 text-white px-3 py-2 mx-2 \" style = {currentTab(history,\"/accounts/invoices\")}   to = '/accounts/invoices'>Invoices     </Link>\r\n                    <Link className=\"btn btn-info fs-4 text-white px-3 py-2 mx-2 \" style = {currentTab(history,\"/accounts/collections\")}  to = '/accounts/collections'>Collections  </Link>\r\n                    <Link className=\"btn btn-info fs-4 text-white px-3 py-2 mx-2 \" style = {currentTab(history,\"/accounts/receipt\")}  to = '/accounts/receipt'>Payment      </Link>\r\n                    <Link className=\"btn btn-info fs-4 text-white px-3 py-2 mx-2 \" style = {currentTab(history,\"/accounts/adjustments\")}  to = '/accounts/adjustments'>Adjustments  </Link>\r\n                    <Link className=\"btn btn-info fs-4 text-white px-3 py-2 mx-2 \" style = {currentTab(history,\"/accounts/manage\")}  to = '/accounts/manage'>Manage       </Link>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n }\r\n\r\n\r\nexport default withRouter(SubMenuAccounts);\r\n","import React,{useState,useContext,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport MaterialTable from 'material-table';\r\nimport tableIcons from '../../../icons/MaterialUiIcons'\r\nimport {  TablePagination, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CancelPresentationIcon from '@mui/icons-material/CancelPresentation';\r\nimport OrderContext  from '../../../context/OrderContext';\r\nimport ClientContext  from '../../../context/ClientContext';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"blue\",\r\n      color: \"green\"\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"white\"\r\n    },\r\n    caption: {\r\n      color: \"black\",\r\n      fontSize: \"20px\"\r\n    },\r\n    selectIcon: {\r\n      color: \"blue\",\r\n      fontSize:'2rem'\r\n    },\r\n    select: {\r\n      color: \"blue\",\r\n      fontSize: \"2rem\"\r\n    },\r\n    actions: {\r\n      color: \"blue\"\r\n    }\r\n  });\r\n  \r\n\r\nconst  OrderActionTable = ({rOrders,onRowSelect,showAction}) => {\r\n\r\n   const classes = useStyles();\r\n   const {orders,setOrderSelected} = useContext(OrderContext)\r\n   const {clients,setClientSelected} = useContext(ClientContext)\r\n  \r\n   \r\n\r\n\r\n\r\n   const getProductsList = products => {\r\n          \r\n         let productsList = []    \r\n        if(products.length > 0 ){\r\n          products.forEach(product => productsList.push(`${product.product} - ${product.units}`))\r\n           \r\n        }\r\n       \r\n        return productsList.join()  \r\n\r\n   }\r\n  \r\n\r\n   const columns = [\r\n       {title : 'Order#',field : 'orderNo',maxWidth:'5rem',\r\n                         render : rowData => showAction? <div>{rowData.orderNo}</div> :\r\n                                     <Link style = {{textDecoration :'none'}} \r\n                                           to = 'order/newOrder'\r\n                                           onClick = {() =>{\r\n                                            setOrderSelected(rowData)\r\n                                           } }\r\n                                            >{rowData.orderNo}</Link>  \r\n                         },\r\n       {title : 'Order Date',field : 'orderDate',maxWidth:'8rem',\r\n                             render : rowData => <div>{new Intl.DateTimeFormat(\"en-GB\").format(new Date(rowData.orderDate))}</div>},\r\n       {title : 'Client', field:'client',render : rowData => <div>{rowData.client.toUpperCase()}</div>},\r\n       {title : 'patient',field : 'patient',maxWidth : '12rem'},\r\n       {title :'products',field :'',render : rowData => <div>{getProductsList(rowData.products)}</div>},\r\n       {title :'Order Amount',field :'orderAmount',maxWidth:'7rem'},\r\n       \r\n   ]\r\n\r\n\r\nuseEffect(()=>{\r\n  // setOrderSelected(null)\r\n},[])\r\n  \r\n\r\n    return (\r\n        <div className = 'container-fluid'>\r\n       \r\n            <div className = 'border border-info fs-4 mx-auto my-2   '>                            \r\n                              \r\n            <MaterialTable  columns = {columns}\r\n                            data = {rOrders}\r\n                            icons = {tableIcons}\r\n                            title = 'Orders'\r\n                            \r\n                            actions = {[\r\n                             showAction &&  {icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Cancel</div>}>\r\n                                         <CancelPresentationIcon sx={{fontSize : 25}} /></Tooltip>,\r\n                               onClick:(e,data)=>{  \r\n                                                        \r\n                                                        onRowSelect(data)                                                      \r\n                                                      } \r\n                                      },\r\n                             \r\n                            ]}\r\n                            components = {{\r\n                                Pagination:props => (\r\n                                  console.log(props),\r\n                                  (\r\n                                    <TablePagination \r\n                                    component = 'div'\r\n                                    colSpan={props.colSpan}\r\n                                    count={props.count}\r\n                                    rowsPerPage={props.rowsPerPage}\r\n                                    page={props.page}\r\n                                    onChangePage={props.onChangePage}\r\n                                    onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                                    classes = {{\r\n                                      root: classes.root,\r\n                                      toolbar:classes.toolbar,\r\n                                      caption:classes.caption,\r\n                                      selectIcon:classes.selectIcon,\r\n                                      select:classes.select,\r\n                                      actions:classes.actions,                                                     \r\n                                    }}\r\n                                    />\r\n                                  )\r\n                                )\r\n                              }}\r\n                      \r\n                         options={{\r\n                           filtering:false,\r\n                           padding:'dense',\r\n                           pageSize:5,\r\n                           search:false,\r\n                           actionsColumnIndex:6,\r\n                           pageSizeOptions:[5,10,20,50,100],\r\n                           paginationType:'stepped',\r\n                           exportAllData : true,\r\n                           exportFileName:'orderdata',\r\n                          //  columnsButton:true, \r\n                           selection:false,  \r\n                           showTextRowsSelected:false,                      \r\n                           headerStyle: {\r\n                            backgroundColor: '#01579b',\r\n                            color: '#FFF',\r\n                            fontSize:'1.5rem'\r\n                          },\r\n                         style:{\r\n                         fontSize : '1.5rem'\r\n                       } \r\n                       }}\r\n                  >\r\n\r\n            </MaterialTable>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderActionTable;","import React,{useEffect, useState,useContext} from 'react';\r\n\r\nimport {getNextAdjustmentSequence, updateClient,updateInvoice,createAdjustment} from '../../../admin/clientApi'\r\nimport ClientContext from '../../../context/ClientContext'\r\nimport InvoiceContext from '../../../context/InvoiceContext'\r\nimport UserContext from '../../../context/UserContext'\r\n\r\n\r\n\r\nconst AdjustmentForInvoice = ({invoice, onAdjustmentCancel}) =>{\r\n\r\n  const {setClientSelected,clientSelected} = useContext(ClientContext)\r\n  const {user,token} = useContext(UserContext)\r\n  \r\n\r\n  const [invoiceSelected,setInvoiceSelected] = useState(invoice)\r\n  \r\n  const [adjustmentNumber,setAdjustmentNumber] = useState()\r\n  const [message,setMessage]  = useState('')\r\n  const [alert,setAlert] = useState(false)\r\n  \r\n  \r\n  const [values,setValues] = useState({\r\n     amount:0,\r\n     adjDate:new Date(),\r\n     adjNo:'',\r\n     adjType:'Discount',\r\n     notes:'', \r\n     client:'',\r\n     invoice : '',\r\n     \r\n  })\r\n\r\n\r\n  const handleChange = name =>event =>{\r\n       \r\n    setValues({...values,[name]:event.target.value})\r\n    console.log(`${name} : ${event.target.value}`)\r\n}\r\n\r\nconst updateSelectedInvoice = ()=>{\r\n      \r\n    let invBalance = parseInt(invoiceSelected.balance)-parseInt(amount)\r\n\r\n    let newInvoice = {...invoiceSelected,adjustmentNo:adjustmentNumber, balance : invBalance,discount : amount}\r\n    console.log(\"Invoice values after update :\",newInvoice)\r\n     \r\n    updateInvoice(user._id,token,newInvoice)\r\n         .then(data => {\r\n             if(data.error){\r\n                window.alert(\"Error while saving Invoice Data\")\r\n\r\n             }\r\n         })\r\n         .catch(err => {\r\n             window.alert(\"Error while saving Invoice Data\")\r\n         })\r\n\r\n}\r\n\r\nconst updateClientBalance = () => {\r\n    \r\n    let newClient = {...clientSelected}\r\n    newClient.balance -= amount \r\n\r\n    console.log(\"Client Values after update : \",newClient)\r\n    updateClient(user._id,token,newClient)\r\n       .then(data => {\r\n           if(data.error){\r\n\r\n            window.alert(\"error while saving Client data\")\r\n\r\n           }\r\n       })\r\n       .catch(err => {\r\n           window.alert(\"error while saving Client data\")\r\n       })\r\n}\r\nconst handleSave = () => {\r\n    \r\n    let newValues = {...values,adjNo:adjustmentNumber,invoice:invoiceSelected._id,client : clientSelected._id}   \r\n    console.log(\"New Values Adjustment to save \",newValues)\r\n    createAdjustment(user._id,token,newValues)\r\n          .then(data => {\r\n              if(data.error){\r\n                window.alert(\"Error Saving new Adjustment\")\r\n              }\r\n          })\r\n          .catch(err => {\r\n              window.alert(\"Error Saving new Adjustment\")\r\n          })\r\n//     ///save changes adjustment and blance changed in perticular invoice\r\n//     // save adjustment documnet with current clientSelected && invoiceNo\r\n    updateSelectedInvoice()\r\n    updateClientBalance()\r\n    setClientSelected(null)\r\n   onAdjustmentCancel()\r\n    \r\n}\r\n\r\nconst {amount,adjDate,adjNo,adjType,notes} = values\r\n\r\n\r\n\r\n\r\nconst convertToSequnceString = (num) => {\r\n\r\n    let newString = num.toString()\r\n  \r\n    let numlength = newString.length\r\n    if(numlength < 6 ){\r\n         for(let i=0; i< 6-numlength ;i++){\r\n             newString = \"0\"+newString;           \r\n         }\r\n    }\r\n    return newString\r\n \r\n } \r\nconst getAdjustmentCode = async () => {\r\n    await getNextAdjustmentSequence()\r\n        .then(data => {           \r\n            setAdjustmentNumber(convertToSequnceString(data.sequence_val))  \r\n            console.log(\"Adjustment Number :\",data.sequence_val)\r\n        })\r\n        .catch(err => {\r\n            setMessage(\"Error in sequence\")\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        })\r\n}\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n    \r\n    getAdjustmentCode()\r\n    setValues({...values,adjNo:adjustmentNumber})\r\n},[])\r\n\r\n\r\n    return (\r\n        <div >         \r\n         \r\n            \r\n            {invoiceSelected  && \r\n            <div className =  ' container  my-5 border border-dark'\r\n                 style = {{maxWidth :'fit-content', marginLeft : 0}}\r\n                 >               \r\n               \r\n               \r\n\r\n               \r\n                <h2><b>Apply Credit Adjustment to Invoice# : {invoiceSelected.invoiceNo}</b></h2>\r\n                {alert && <div className = 'fs-4 text-red'>{message}</div>}\r\n\r\n                    <div className = 'd-flex flex-column flex-md-row   fs-4 '>\r\n                        <div>\r\n                                <div>Amount</div>\r\n                                <input type = 'number'\r\n                                    value = {amount}\r\n                                    onChange = {handleChange('amount')}\r\n                                    />                       \r\n                        </div>  \r\n                        <div className = 'mx-4'>\r\n                                <div>Adjustment Date</div>\r\n                                <input  type = 'date'\r\n                                        value = {adjDate}\r\n                                        onChange = {handleChange('adjDate')}   \r\n                                        />\r\n                        </div>\r\n                        <div>\r\n                            <div>Reference#</div>\r\n                            <input   type ='text'\r\n                                    value = {adjNo}\r\n                                    /> \r\n                            </div> \r\n                        </div> \r\n                    \r\n                            <div className = 'fs-4'>\r\n                                <div>Adjustment Type</div>\r\n                            <select type = 'text'\r\n                                    value = {adjType} \r\n                                    onChange = {handleChange('adjType')}  \r\n                                    >\r\n                                <option value = 'Discount' >Discount</option>\r\n                                <option value = 'Early Payment Discount' >Early Payment Discount</option>\r\n                                <option value = 'Sales Return' >Sales Return</option>\r\n                                <option value = 'Write Off' >Write Off</option>\r\n                                \r\n                                </select>                      \r\n                            </div>\r\n                            <div className = 'fs-4'>\r\n                                <div>Notes</div>\r\n                                <input  type = 'text'\r\n                                        value = {notes}\r\n                                        onChange = {handleChange('notes')}\r\n                                        />\r\n                            </div>\r\n                            <hr/>\r\n                            <div className = 'd-flex flex-row justify-content-end my-2' >\r\n                               {amount > 0 && invoiceSelected &&   <div className = 'btn btn-info  fs-4 mx-5'\r\n                                    onClick ={handleSave}\r\n                                    >Save Adjustment</div>}\r\n                                <div className=\"btn btn-info fs-4 \"\r\n                                      onClick = {onAdjustmentCancel}   \r\n                                         >Cancel</div>\r\n                            </div>\r\n                </div>\r\n           \r\n            }\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default AdjustmentForInvoice;\r\n","import React from 'react';\r\n\r\nimport PrintIcon from '@mui/icons-material/Print';\r\n\r\n\r\n\r\n\r\nconst PrintButton = ({onPrint}) =>  {\r\n\r\n     return (\r\n        <div className=\"btn btn-warning fs-4 mx-1 my-1 px-4\" \r\n             style = {{width : '10rem'}}    \r\n          \r\n            onClick = {onPrint}  \r\n             >                  \r\n                <PrintIcon />Print\r\n       \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nexport default PrintButton;","import React, { useContext,useState,useEffect } from 'react';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport OrderContext from '../../../context/OrderContext'\r\nimport ClientContext from '../../../context/ClientContext'\r\nimport UserContext from '../../../context/UserContext'\r\nimport InvoiceContext from '../../../context/InvoiceContext';\r\nimport AdjustmentContext from '../../../context/AdjustmentContext'\r\nimport { getFormatDate} from '../../DateAPI';\r\nimport {updateClient, updateInvoice,getAdjustmentByNumber} from '../../../admin/clientApi'\r\nimport OrderActionTable from './OrderActionTable'\r\nimport AdjustmentForInvoice from '../Adjustment/AdjustmentForInvoice';\r\nimport PrintButton from '../../PrintButton';\r\nimport {addToPrint} from '../../print/printAPI'\r\nimport {getTeethArchset} from '../../../components/Accounts/Invoice/productsApi'\r\n\r\n\r\nconst  InvoiceDetail = ({invoice,path}) => {\r\n \r\n    const {clients,setClientSelected,clientSelected} = useContext(ClientContext)\r\n    const {invoiceSelected,fetchInvoices} = useContext(InvoiceContext)\r\n    const {orders} = useContext(OrderContext)\r\n    const {adjustments} = useContext(AdjustmentContext)\r\n    const history = useHistory()\r\n    const {user,token} = useContext(UserContext)\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n    const [invoiceOrdersList,setInvoiceOrdersList] = useState([])\r\n    const [showAdjustmentDetail,setShowAdjustmentDetail] = useState(false)\r\n   \r\n\r\n\r\n\r\n      const [values,setValues]= useState({\r\n         _id : '', \r\n        invoiceNo:'',\r\n        invoiceDate:'',\r\n        dueDate:'',  \r\n        taxOption:'',\r\n        taxAmount:'',\r\n        amount:'',\r\n        paid:0,\r\n        balance:0,\r\n        ordersList:[],\r\n        client:'',\r\n        cancelled:'',\r\n      }) \r\n   \r\n useEffect(()=> {\r\n     if(invoiceSelected){\r\n         console.log(\"OrdersList in orderAction form:\",invoiceSelected.ordersList)\r\n         let list = orders.filter(order => invoiceSelected.ordersList.includes(order._id))  \r\n         setInvoiceOrdersList(list)            \r\n         setValues({...invoiceSelected,ordersList: invoiceSelected.ordersList})\r\n     }\r\n },[])\r\n const {\r\n    _id, \r\n   invoiceNo,\r\n   invoiceDate,\r\n   dueDate,  \r\n   taxOption,\r\n   taxAmount,\r\n   amount,\r\n   paid,\r\n   balance,\r\n   ordersList,\r\n   client,\r\n   cancelled,\r\n } = values\r\n\r\n\r\nconst handleAdjustmentSave = adjustment => {\r\n      \r\n} \r\nconst handleAdjustmentCancel = () => {\r\n    setShowAdjustmentDetail(false)\r\n}\r\nconst handlePrint = () => {\r\n            //  onClick={()=>window.open('/print/invoice','_blank')}     \r\n\r\n}\r\nconst generateOrdersTable = () => {\r\n    \r\n\r\n    \r\n    return (\r\n        <div>\r\n            {!showAdjustmentDetail && \r\n              <div>\r\n                <OrderActionTable rOrders = {invoiceOrdersList} onRowSelect = {()=> console.log('Row selected')}/>\r\n                <div className = 'border border-dark d-flex flex-row justify-content-between'>\r\n                    <div>Total Applied : {paid} </div>\r\n                    <div>Balance : {balance}</div>\r\n                    <div className = 'btn btn-info fs-4'\r\n                        onClick = {()=>{\r\n                        \r\n                            setShowAdjustmentDetail(true)\r\n                        }}\r\n                        >Add Credit Adjustment</div>\r\n                </div>\r\n             </div>}\r\n             <div>\r\n                {showAdjustmentDetail &&   \r\n                      <AdjustmentForInvoice invoice = {invoiceSelected}   onAdjustmentCancel = {handleAdjustmentCancel} />}             \r\n             </div>\r\n        </div>\r\n    )\r\n}\r\nconst onCancelInvoice = () => {\r\n\r\n    let values = {...invoice,cancelled : true}\r\n    //TODO : UPDATE CLIENT BALANCE (DEDUCT THE INVOICE AMOUNT FROM THE BALANCE )\r\n    let updatedClient = {...clientSelected}\r\n    updatedClient.balance -= values.balance\r\n   \r\nupdateInvoice(user._id,token,values)\r\n   .then(data => {\r\n    if(data.err){\r\n        window.alert(\"Error while cancelling invoice\")\r\n        }\r\n    else{\r\n           fetchInvoices()\r\n        \r\n        setMessage(\"Invoice cancelled\")\r\n        setAlert(true)\r\n        setTimeout(()=>setAlert(false),2000)\r\n        \r\n       }\r\n       })\r\n        .catch(err => {\r\n        window.alert(\"Error while canceling invoice\")\r\n        })    \r\n\r\n\r\nupdateClient(user._id,token,updatedClient)\r\n        .then(data => {\r\n            if(data.error){\r\n                window.alert(\"Error Saving Client Detail\")\r\n            }\r\n            else{\r\n                setClientSelected(updatedClient)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            window.alert(\"Error Saving Client Detail\")\r\n        }) \r\n\r\n}\r\nconst getAdjustmentDetail = (adjustmentNo) => {\r\n\r\n   const ad = adjustments.filter(adj => adj.adjNo === adjustmentNo)\r\n    return ad[0]\r\n\r\n}\r\n\r\n    return (\r\n\r\n        <div className = 'container w-100 fs-4'>\r\n        {alert && <div className = 'fs-4 text-red'>{message}</div>}\r\n{ invoiceSelected && <>\r\n           <div>Client</div>\r\n           <div className = 'fs-4'><b>{client}</b></div>\r\n           <div className='d-flex flex-row justify-content-between'>\r\n                <div className = 'd-flex flex-row'>\r\n                        <div>\r\n                            <div className = ''>Invoice#</div>\r\n                            <div style = {{fontSize : '1.6rem'}}>{invoiceNo}</div>\r\n                        </div>\r\n                        <div className = 'mx-5'>\r\n                            <div >Invoice Date</div>\r\n                            {/* <div>{new Date(invoiceDate).toDateString()}</div> */}\r\n                            <div style = {{fontSize : '1.6rem'}}>{getFormatDate(invoiceDate)}</div>\r\n                        </div>\r\n                        <div className = 'mx-5'>\r\n                            <div >Due Date</div>\r\n                            <div style = {{fontSize : '1.6rem'}}>{getFormatDate(dueDate)}</div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"mx-5\">\r\n               \r\n                <Link target={\"_blank\"}  to = {`/print/invoice/${invoiceSelected._id}`}\r\n                                                   onClick={() => {\r\n                                                       let newOrderList = [...invoiceOrdersList]                                                      \r\n                                                       let totalunits = 0                                                      \r\n                                                       let adjustment = {}\r\n                                                       if(invoiceSelected.adjustmentNo)\r\n                                                              adjustment =  getAdjustmentDetail(invoiceSelected.adjustmentNo)\r\n                                                              console.log(\"Adjustment Found :\" ,adjustment)\r\n                                                       invoiceOrdersList.forEach((order,index) => {\r\n                                                           let productsList = []    \r\n                                                           let ts = []                                                           \r\n                                                           let units = 0\r\n                                                           let teethList = []\r\n                                                                if(order.products.length > 0 ){\r\n                                                                order.products.forEach(product =>{ \r\n                                                                                                      productsList.push(` ${product.product}`)\r\n                                                                                                     \r\n                                                                                                      if(product.teethSelected.length>0)\r\n                                                                                                            ts = [...ts,...product.teethSelected] \r\n                                                                                                           units += product.teethSelected.length\r\n                                                                                                        })\r\n                                                              }\r\n\r\n                                                            newOrderList[index].productsList = productsList.join()\r\n                                                            newOrderList[index].teethSelected = [...ts]\r\n                                                            newOrderList[index].units = units\r\n                                                            totalunits += units                                                            \r\n                                                            teethList = getTeethArchset(newOrderList[index].teethSelected)\r\n                                                           \r\n                                                            newOrderList[index].teethList = [...teethList] \r\n                                                            })\r\n                                                        \r\n                                                            console.log(\"Invoice Value sent for Print :\",{...invoiceSelected,discount : adjustment.amount,totalunits:totalunits ,ordersList : newOrderList,clientDetail : clientSelected})\r\n                                                            \r\n                                                            addToPrint({...invoiceSelected,discount : adjustment.amount,totalunits:totalunits, ordersList : newOrderList,clientDetail : clientSelected})\r\n                                                   }}\r\n                                                   > <PrintButton /></Link>\r\n                {/* //  onPrint = {()=>{ if(invoiceSelected){ */}\r\n\r\n                    {/* //  window.open(`/print/invoice/${invoiceSelected._id}`,'_blank') */}\r\n                {/* //  }  */}\r\n                {/* // }} */}\r\n                {/* //  /> */}\r\n                </div>\r\n           </div>\r\n           <div className = 'd-flex flex-row'>\r\n               <div>\r\n                   <div>Order Total</div>\r\n                   <div style = {{fontSize : '1.6rem'}}>{amount}</div>\r\n               </div>\r\n               <div className = 'mx-5'>\r\n                   <div >Tax</div>\r\n                   <div style = {{fontSize : '1.8rem'}}>GST @ 0%</div>\r\n               </div>\r\n               <div  className = 'mx-5'>\r\n                   <div>Tax Amount</div>\r\n                   <div style = {{fontSize : '1.8rem'}}>0</div>\r\n               </div>\r\n               <div className = 'mx-5'>\r\n                   <div >Amount</div>\r\n                   <div style = {{fontSize : '1.8rem'}}>{amount}</div>\r\n               </div>\r\n           </div>\r\n          \r\n           <div>\r\n               {generateOrdersTable()}\r\n           </div>\r\n            \r\n         {!showAdjustmentDetail &&  <div className = 'd-flex flex-row justify-content-between my-1'>\r\n              <div className=\"btn btn-info fs-4\"\r\n                   onClick = {() =>{\r\n                       let reply = window.confirm(\"This will cancel the Invoice, Are you Sure ?\")\r\n                       if(reply){\r\n\r\n                           onCancelInvoice()\r\n                       }\r\n                       \r\n                   }} \r\n                    >Cancel Invoice</div>\r\n              <div className=\"btn btn-info fs-4\"\r\n                   onClick = {()=>history.go(path)}\r\n                   >Close</div>\r\n          </div>}\r\n          </>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InvoiceDetail;","import React,{useState,useEffect,useContext} from 'react';\r\nimport InvoiceContext from '../context/InvoiceContext';\r\nimport Menu from '../components/menu'\r\n\r\nimport InvoiceTable from '../components/Accounts/Invoice/InvoiceTable';\r\n// import Invoice from '../components/Accounts/Invoice/Invoice' \r\nimport SubMenuAccounts from '../components/Accounts/SubMenuAccounts'\r\nimport {getInvoices} from '../admin/clientApi'\r\n\r\nimport InvoiceDetail from '../components/Accounts/Invoice/InvoiceDetail'\r\n\r\n\r\nconst  Accounts = (props) => {    \r\n  \r\n    const {invoiceSelected,setInvoiceSelected} = useContext(InvoiceContext)\r\n     const [invoices,setInvoices] = useState([])\r\n    \r\n    \r\n     const [showDetail,setShowDetail] = useState(false)\r\n     const [values,setValues] = useState({\r\n         error:'',\r\n         loading:false\r\n     })\r\n\r\n\r\nconst handleInvoiceSelect = invoice => {\r\n\r\n    //    setCurrentInvoice(invoice)\r\n       setInvoiceSelected(invoice)\r\n       setShowDetail(true)\r\n   \r\n}\r\nconst fetchInvoices = async () => {\r\n    setValues({error : '',loading:true})\r\n    await  getInvoices()\r\n           .then(data => {\r\n               if(data.error){\r\n                  setValues({error : data.error,loading:false})\r\n               }\r\n               else {\r\n                //    console.log(\"Invoices generated in Route :\",data)\r\n                   setInvoices(data)\r\n                  setValues({error : '',loading:false})\r\n\r\n               }\r\n           })\r\n           .catch(error =>{\r\n            setValues({error : error,loading:false})\r\n\r\n           } \r\n              )\r\n }\r\n\r\n  useEffect(()=>{\r\n\r\n   fetchInvoices()\r\n   setInvoiceSelected(null)\r\n  },[])   \r\n  \r\nconst {error,loading} = values\r\n\r\n    return (\r\n        <div >\r\n            <Menu />\r\n           \r\n            <SubMenuAccounts  />\r\n                  {loading && <div className='fs-3 text-center text-secondary'>Loading....</div>}\r\n                   {error && <div className='fs-3 text-center text-secondary'>Error fetching Data</div>}\r\n                   <div className=\"container\">\r\n                                            \r\n                        {!showDetail && invoices.length > 0 &&  <InvoiceTable invoices = {invoices} \r\n                                                       onInvoiceSelect = {handleInvoiceSelect}                                                     \r\n                                                       path = '/accounts' />}\r\n                        {showDetail && invoiceSelected &&  \r\n                                      <InvoiceDetail invoice = {invoiceSelected} path = '/accounts'/>\r\n                        }\r\n                       </div> \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accounts;","import React,{useState,useEffect,useContext} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Menu from '../../components/menu'\r\nimport SubMenu from '../../core/SubMenu';\r\nimport ClientContext  from '../../context/ClientContext'\r\nimport OrderContext from '../../context/OrderContext'\r\nimport MaterialTable from 'material-table';\r\nimport {  TablePagination, Tooltip } from '@material-ui/core';\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport MoneyIcon from '@mui/icons-material/Money';\r\nimport tableIcons from '../../icons/MaterialUiIcons'\r\nimport FlipToFrontRoundedIcon from '@mui/icons-material/FlipToFrontRounded';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport '../../css/order.css'\r\nimport {getClients,getOrders} from '../../admin/clientApi'\r\nimport UserContext from '../../context/UserContext';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"blue\",\r\n    color: \"green\"\r\n  },\r\n  toolbar: {\r\n    backgroundColor: \"white\"\r\n  },\r\n  caption: {\r\n    color: \"black\",\r\n    fontSize: \"20px\"\r\n  },\r\n  selectIcon: {\r\n    color: \"blue\",\r\n    fontSize:'2rem'\r\n  },\r\n  select: {\r\n    color: \"blue\",\r\n    fontSize: \"2rem\"\r\n  },\r\n  actions: {\r\n    color: \"blue\"\r\n  }\r\n});\r\n\r\n\r\nfunction OrderPerClientTable({onNewPayment}) {\r\n\r\n\r\n  const {user,token} = useContext(UserContext)\r\n  const {onClientSelect,setClientSelected,setPathRedirect,setRedirect} = useContext(ClientContext)\r\n  // const [clients,setClients] = useState([])\r\n  // const [orders,setOrders] = useState([])\r\n  const [data,setData] = useState([])\r\n  const [values,setValues] = useState({\r\n    error:'',\r\n    loading:false\r\n  })\r\n \r\n\r\n  // const {orders} = useContext(OrderContext)\r\n   const classes = useStyles();\r\n  \r\n\r\n\r\n   const [newData,setNewData] = useState([])\r\n\r\n\r\n\r\n\r\n  \r\n\r\nconst getNewTable = (data1,data2) =>{\r\n const orders = [...data2]\r\n const clients = [...data1]\r\n\r\n     if(orders.length>0){\r\n       let newDataStack = []\r\n     \r\n     clients?.forEach(client => {\r\n      \r\n      let orderStack =  data2.filter(order => order.clientId._id === client._id)\r\n      \r\n      if(orderStack.length>0){\r\n            \r\n           newDataStack.push({client,orders :orderStack ,value : calculateTotalOrderValue(orderStack) , num:calculateNumberOfOrders(orderStack)})  \r\n      }\r\n            \r\n         setNewData(newDataStack)\r\n          \r\n     })  \r\n\r\n    }\r\n  }\r\n  const calculateTotalOrderValue = (ordersData) => {\r\n           let total  = 0;\r\n           ordersData.forEach(order => total+=order.orderAmount )\r\n           return total\r\n  }\r\n const calculateNumberOfOrders = (ordersData) => {\r\n   let total = 0\r\n   ordersData.forEach(order => total+=order.products.length )\r\n   return total\r\n\r\n }\r\n\r\n\r\n  const columns = [\r\n    {title : 'Client', field:'client.name',\r\n             cellStyle : { fontSize :'1.6rem',paddingLeft:'1rem',border:'1px solid #5c5c5c'}, defaultSort:'asc',\r\n             render:rowData =>\r\n                    <Link to = '/client/clientprofile' \r\n                          style = {{textDecoration:'none'}} \r\n                          onClick = {()=>  setClientSelected(rowData.client)}>\r\n                      {(rowData.client.name).toUpperCase()}\r\n                      </Link>\r\n                      },\r\n    {title:'Value',field : 'value',align : 'left',\r\n             cellStyle : { fontSize :'1.8rem',padding:'1rem',border:'1px solid #5c5c5c'},\r\n             type: 'currency' ,currencySetting: { currencyCode :'INR'}},\r\n    {title : 'Num',field : 'num', align : 'center',maxWidth:'3rem' ,\r\n             cellStyle : { fontSize :'1.6rem',padding:'1rem',border:'1px solid #5c5c5c'}},\r\n    {title:'code',field : 'client.code',align : 'center',\r\n             cellStyle : { fontSize :'1.6rem',padding:'1rem',border:'1px solid #5c5c5c'},\r\n             render : rowData => \r\n                 <Link to = '/client/newclient'\r\n                        style = {{textDecoration :'none'}}\r\n                        onClick={()=> setClientSelected(rowData.client)}\r\n                        >{rowData.client.code}</Link>\r\n            },\r\n    {title :'Office Phone',field : 'client.phoneO',align : 'left',\r\n             cellStyle : { fontSize :'1.6rem',padding:'1rem',border:'1px solid #5c5c5c'}},\r\n    {title : 'Cell Phone',field : 'client.phoneM',align : 'left',\r\n             cellStyle : { fontSize :'1.6rem',padding:'1rem',border:'1px solid #5c5c5c'}},\r\n    {title : 'City',field : 'client.city',align : 'left',\r\n             cellStyle : { fontSize :'1.6rem',padding:'1rem',border:'1px solid #5c5c5c'}},\r\n    {title : 'email',field : 'client.emailPrimary',align : 'left',\r\n             cellStyle : { fontSize :'1.6rem',padding:'1rem',border:'1px solid #5c5c5c'},sorting:false}\r\n  ]\r\n \r\nuseEffect(()=>{\r\n   \r\n \r\n  (async ()=> {\r\n        setValues({loading:true})\r\n        const client  = await getClients(user._id,token)\r\n        const order = await getOrders(user._id,token)       \r\n        getNewTable(client,order)\r\n        setData({client,order})  \r\n        setValues({loading:false})      \r\n        \r\n  })()\r\n   \r\n},[])\r\n\r\n\r\n\r\n\r\nconst onOrderClient =(data)=>{\r\n  \r\n  setPathRedirect('/order/neworder')\r\n  onClientSelect(data.client)\r\n  setRedirect(true)\r\n\r\n}\r\nconst onEditClient = (data) => {\r\n  \r\n  setPathRedirect('/client/newclient')\r\n  setClientSelected(data.client)\r\n  // onClientSelect(data.client)\r\n  setRedirect(true)\r\n\r\n}\r\n const {loading,error} = values\r\n\r\n\r\n    return (\r\n        <div>         \r\n               <Menu />\r\n                <div className = 'container'>                                  \r\n                         <SubMenu />                    \r\n                             {loading  && <div className='fs-3 text-secondary text-center'>Loading...</div>} \r\n                             {error && <div className='fs-3 text-danger text-center' >Error fetching data</div>}\r\n                             \r\n                            <div className=\"row  fs-4\">                                                              \r\n                              \r\n                                <MaterialTable columns = {columns}\r\n                                                data = {newData}\r\n                                                icons = {tableIcons}\r\n                                                title = 'Client-Orders'\r\n                                                actions={[\r\n                                                        {icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Create Order</div>}>\r\n                                                        <FlipToFrontRoundedIcon  sx={{fontSize : 25}} /></Tooltip>,\r\n                                                        iconProps:{style : {border:'1px solid #5c5c5c'}},\r\n                                                        onClick:(e,data)=>{  \r\n                                                                    onOrderClient(data)\r\n                                                                  \r\n                                                                  } \r\n                                                    },\r\n                                                    {\r\n                                                      icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Edit Client</div>}>\r\n                                                                 <EditIcon sx={{fontSize : 25}}/></Tooltip>,\r\n                                                      onClick:(e,data)=>{ \r\n                                                                          onEditClient(data)\r\n                                                                          }\r\n                          \r\n                                                      },\r\n                                                      {\r\n                                                        icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>New Payment</div>}>\r\n                                                                   <MoneyIcon sx={{fontSize : 25}}/></Tooltip>,\r\n                                                        onClick:(e,data)=>{ \r\n                                                                            onEditClient(data)\r\n                                                                            }\r\n                            \r\n                                                        }\r\n                                                ]}\r\n                                                components = {{\r\n                                                  Pagination:props => (                                                   \r\n                                                    (\r\n                                                      <TablePagination \r\n                                                      component = 'div'\r\n                                                      colSpan={props.colSpan}\r\n                                                      count={props.count}\r\n                                                      rowsPerPage={props.rowsPerPage}\r\n                                                      page={props.page}\r\n                                                      onChangePage={props.onChangePage}\r\n                                                      onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                                                      classes = {{\r\n                                                        root: classes.root,\r\n                                                        toolbar:classes.toolbar,\r\n                                                        caption:classes.caption,\r\n                                                        selectIcon:classes.selectIcon,\r\n                                                        select:classes.select,\r\n                                                        actions:classes.actions,                                                     \r\n                                                      }}\r\n                                                      />\r\n                                                    )\r\n                                                  )\r\n                                                }}\r\n                                                options = {{\r\n                                                   filtering : true, pageSizeOptions:[5,10,20,50,100],rowsPerPage:25\r\n                                                  ,paginationType:'stepped',exportAllData : true,\r\n                                                   exportFileName : 'clientdata',addRowPosition:\"first\",\r\n                                                   actionsColumnIndex:0,\r\n                                                   padding:'dense',\r\n                                                   actionsCellStyle:{\r\n                                                     border:'1px solid #5c5c5c',\r\n                                                    \r\n                                                   },\r\n                                                   columnsButton:true,\r\n                                                   rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\",height:'2rem'}:{height:'2rem'}  ,\r\n                                                  \r\n                                                   headerStyle: {\r\n                                                       backgroundColor: '#01579b',\r\n                                                       color: '#FFF',\r\n                                                       fontSize:'1.5rem'\r\n                                                     },\r\n                                                    style:{\r\n                                                    fontSize : '2rem'\r\n                                                  } ,\r\n                                                 \r\n                                               }}\r\n                                                >  \r\n                                </MaterialTable>\r\n                                        \r\n                            </div>\r\n                 \r\n                \r\n               \r\n                </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderPerClientTable;","import React from 'react';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\n\r\nconst EmailButton = ({email}) => {\r\n\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <div className=\"btn btn-warning fs-4 mx-1 my-1 px-3\" style = {{width : '10rem'}} onClick = {()=> \r\n                                                                        {\r\n                                                                            if(!email) window.alert(\"No email registered for this Client\")\r\n                                                                            else \r\n                                                                              console.log(\"Email :\",{email})}\r\n                                                                        }  > \r\n                                   < MailOutlineIcon/>\r\n                                       Email</div>\r\n    );\r\n}\r\n\r\nexport default EmailButton;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport PrintButton from '../PrintButton'\r\nimport EmailButton from '../EmailButton';\r\n\r\n\r\nconst ClientSummary = ({clientSelected}) => {\r\n\r\n   const {phoneO,phoneM,openBalance,drcrOption,regDate,email,balance,drcr} = clientSelected\r\n\r\n    return (\r\n        \r\n            <div className=\"container  m-0\">\r\n                         <div className = 'row'> \r\n                             <div className=\"col-6 col-sm-4\">Contact</div>\r\n                             <div className=\"col-6 col-sm-4\">{phoneO}</div>\r\n                         </div>\r\n                         <div className = 'row'> \r\n                             <div className=\"col-6 col-sm-4\">Cell Phone</div>\r\n                             <div className=\"col-6 col-sm-4\">{phoneM}</div>\r\n                         </div>\r\n                         <div className = 'row'> \r\n                             <div className=\"col-6 col-sm-4\">Opening Balance</div>\r\n                             <div className=\"col-6 col-sm-4\"> <span>{openBalance}{drcrOption}</span></div>\r\n                         </div>\r\n                         <div className = 'row'> \r\n                             <div className=\"col-6 col-sm-4\">Reg.Date</div>                             \r\n                             <div className=\"col-6 col-sm-4\">{new Intl.DateTimeFormat(\"en-GB\").format(new Date(regDate))}</div>\r\n                         </div>\r\n                         <Link className=\"row btn btn-info fs-4 my-2\" to = '/client/newclient'>Edit Client</Link>\r\n                         <div className = 'row '> \r\n                             <div className=\"col-8 col-sm-6 d-flex  flex-column border border-dark \">\r\n                               <div className=\"row\">\r\n                                   <div className=\"col-4\">\r\n                                       Price List\r\n                                       </div> \r\n                                        <div className = 'col-8'>\r\n                                            <EmailButton email = {email}/>\r\n                                            <PrintButton/>\r\n                                        </div> \r\n                               </div>\r\n                                   \r\n                             </div>\r\n                    \r\n                         <div className = 'col-4 '> \r\n                          <div className=\"d-flex flex-row\">\r\n                                <div className=\"\">Balance : </div>\r\n                                <div style = {drcr?{color:'green'}:{color:'red'}}>{balance}</div>\r\n                          </div>\r\n                             \r\n                         </div>\r\n \r\n                         </div>\r\n                         \r\n                            \r\n                                <div className = 'row d-flex flex-cloumn  px-2 py-2  border border-dark '>\r\n                                    <div className=\"d-flex flex-row \">\r\n                                    <div className = ''>Last Invoice : </div>\r\n                                    <div className=\"\">invoice data</div> \r\n                                    </div>\r\n                                    <div className=\"d-flex flex-row \">\r\n                                    <div className = ''>Last Payment : </div>\r\n                                    <div className=\"\">Payment data</div> \r\n                                    </div>\r\n                                    <div className=\" py-1 d-flex flex-row border border-dark align-items-center\">\r\n                                        <div className=\"w-50 \">StateMent of Accounts</div>\r\n                                        <PrintButton/>\r\n                                        <EmailButton/>\r\n                                    </div>\r\n                                    <div className=\" py-1  d-flex flex-row border border-dark align-items-center\">\r\n                                        <div className=\"w-50 \">Outstanding Invoices</div>\r\n                                        <PrintButton/>\r\n                                        <EmailButton/>\r\n                                    </div>\r\n                                    <div className=\" py-1 d-flex flex-row border border-dark align-items-center\">\r\n                                        <div className=\"w-50 \">Billing History</div>\r\n                                        <PrintButton/>\r\n                                        <EmailButton/>\r\n                                    </div>\r\n                                </div>\r\n                         \r\n\r\n                     </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default ClientSummary;","import React,{useContext,useState,useEffect} from 'react';\r\nimport OrderContext  from '../../context/OrderContext';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport tableIcons from '../../icons/MaterialUiIcons'\r\nimport {  Tooltip } from '@material-ui/core';\r\n\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\n\r\nconst  ClientOrder  =  ({clientSelected}) =>  {\r\n\r\n\r\n  const {orders} = useContext(OrderContext)\r\n   \r\n  const [newData,setNewData] = useState([])\r\n\r\n\r\n  const generateNewData = () => {\r\n    if(orders.length>0 && clientSelected){       \r\n      \r\n        let orderStack =  orders.filter(order => order.clientId === clientSelected._id)    \r\n             \r\n       setNewData(orderStack)       \r\n           \r\n \r\n     }\r\n  }\r\n\r\n\r\n\r\n\r\n    const COLUMNS = [\r\n        {title:'Order#',field:'orderNo',maxWidth : '2rem',height:'2rem',\r\n                           cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'}},\r\n        {title:'client',field:'client',height:'2rem',cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                         render : rowData => <div>{rowData.client.toUpperCase()}</div>\r\n                          },\r\n        {title:'products',field:'productsList',height:'2rem',cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'}},\r\n        {title:'Order Amount',field:'orderAmount',height:'2rem',align:'left',\r\n                            cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                             },\r\n        {title:'status',field:'status',width:'10%',height:'2rem',\r\n                                  cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                                  // lookup:{New:'New', InProduction: 'In Production',tryIn: 'Try In',hold:'Hold',complete:'Complete',cancelled : 'Cancelled'} \r\n                              },\r\n        {title:'Order Date',field:'orderDate',cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                                   render : rowData => <div>{new Intl.DateTimeFormat('en-GB').format(new Date(rowData.orderDate))}</div>\r\n                                //    render : rowData => <div>{console.log(\":::::::::::\",rowData)}</div>   \r\n                            },         \r\n        {title:'Due Date',field:'duedate',width : '5rem',height:'2rem',\r\n                                cellStyle : { fontSize :'1.6rem',border:'1px solid #5c5c5c'},\r\n                                 render : rowData => <div>{new Intl.DateTimeFormat(\"en-GB\").format(new Date(rowData.duedate))}</div>                              \r\n                                },\r\n        \r\n                            ]\r\n\r\n\r\n// const orderDetail = (rowData) => {\r\n//                                 const{orderno,client,productsList,orderAmount,status,orderDate,updated,duedate} = rowData\r\n                           \r\n//                                return(\r\n//                                    <div>\r\n//                                        <ul>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>order # :</div>\r\n//                                                <div className = 'w-50'>{orderno}</div>\r\n//                                            </li>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>Client :</div>\r\n//                                                <div className = 'w-50'>{client}</div>\r\n//                                            </li>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>Products :</div>\r\n//                                                <div className = 'w-50'>{productsList}</div>\r\n//                                            </li>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>Status :</div>\r\n//                                                <div className = 'w-50'>{status}</div>\r\n//                                            </li>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>Order Date:</div>\r\n//                                                <div className = 'w-50'>{new Intl.DateTimeFormat('en-GB').format(new Date(orderDate))}</div>\r\n//                                            </li>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>Order Amount:</div>\r\n//                                                <div className = 'w-50'>&#x20B9;{orderAmount}</div>\r\n//                                            </li>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>Last update :</div>\r\n//                                                <div className = 'w-50'>{new Intl.DateTimeFormat('en-GB').format(new Date(updated))}</div>\r\n//                                            </li>\r\n//                                            <li className = 'd-flex flex-row'>\r\n//                                                <div className = 'w-50'>Due Date :</div>\r\n//                                                <div className = 'w-50'>{new Intl.DateTimeFormat('en-GB').format(new Date(duedate))}</div>\r\n//                                            </li>\r\n                                        \r\n//                                        </ul>\r\n//                                    </div>\r\n//                                )\r\n//                            }\r\n                           \r\n\r\nuseEffect(()=>{\r\n// console.log(\"Generating new table\")\r\nif(clientSelected  && orders.length>0) generateNewData()\r\n},[])\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'container-fluid'>\r\n        <MaterialTable columns = {COLUMNS}\r\n                       data = {newData}\r\n                       icons = {tableIcons}\r\n                       title = \"Order Data\"\r\n                    //    detailPanel ={[\r\n                    //     {\r\n                    //      icon: () => <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem'}}>Order detail</div>}>\r\n                    //                        <InfoIcon sx = {{fontSize : 35}}/></Tooltip>,                           \r\n                    //      render: rowData => {\r\n                    //        return (\r\n                    //          <div\r\n                    //            style={{\r\n                    //              fontSize: 18,\r\n                    //              textAlign: 'left',\r\n                    //              color: '#000',\r\n                    //              backgroundColor: '#f0f0f0',\r\n                    //            }}\r\n                    //          >\r\n                    //           {orderDetail(rowData)}\r\n                    //          </div>\r\n                    //        )\r\n                    //     }\r\n                    //   },\r\n                    // ]}\r\n                    onSelectionChange = {(selectedRows)=> {console.log(selectedRows)}}\r\n                       options={{\r\n                           filtering:true,\r\n                           actionsCellStyle : {border: '1px solid #5c5c5c'},\r\n                           pageSizeOptions:[10,20,50,100],\r\n                           paginationType:'stepped',\r\n                           exportAllData : true,\r\n                           exportFileName:'orderdata',\r\n                           columnsButton:true,                             \r\n                           rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\"}:null  ,\r\n                           selection:true,\r\n                           showSelectAllCheckbox:false,\r\n                           showTextRowsSelected:false,\r\n                           headerStyle: {\r\n                            backgroundColor: '#01579b',\r\n                            color: '#FFF',\r\n                            fontSize:'1.5rem'\r\n                          },\r\n                         style:{\r\n                         fontSize : '1.5rem'\r\n                       } \r\n                       }}\r\n               >\r\n\r\n        </MaterialTable>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ClientOrder;","import React,{useContext,useEffect, useState} from 'react';\r\nimport ClientContext from '../../context/ClientContext';\r\nimport InvoiceContext from '../../context/InvoiceContext'\r\nimport InvoiceTable from '../Accounts/Invoice/InvoiceTable';\r\nimport InvoiceDetail from '../Accounts/Invoice/InvoiceDetail'\r\n\r\nconst  ClientProfileInvoiceTable= (props) =>  {\r\n\r\n const {invoices,invoiceSelected,setInvoiceSelected} = useContext(InvoiceContext)\r\n const {clientSelected} = useContext(ClientContext)\r\n const [clientInvoices,setClientInvoices] = useState([])\r\n const [showDetail,setShowDetail] = useState(false)\r\n const [localInvoiceSelected,setLocalInvoiceSelected] = useState(null)\r\n let inv = {}\r\n\r\nconst filterClientInvoices = () => {\r\n    \r\n    if(clientSelected){\r\n             if(invoices.length>0){\r\n                  let clientInv = invoices.filter(invoice => invoice.clientId === clientSelected._id)\r\n                     setClientInvoices(clientInv)\r\n                     console.log(\"client Invoices :\",clientInv)\r\n             } \r\n    }\r\n\r\n} \r\nconst handleInvoiceSelect = invoice => {\r\n    inv = {...invoice}\r\n    setLocalInvoiceSelected(invoice)\r\n    setInvoiceSelected(invoice)\r\n    console.log(\"Invoice Selected in client profile :\",inv)\r\n    setShowDetail(true)\r\n}\r\n\r\nuseEffect(()=>{\r\n    console.log(\"In Client Invoice detail///////\",clientSelected)\r\n   if(clientSelected){\r\n       filterClientInvoices()\r\n   }\r\n},[])\r\n    return (\r\n        <div>\r\n           \r\n           {!showDetail && clientInvoices.length >0 &&\r\n               <InvoiceTable invoices = {clientInvoices} \r\n                         onInvoiceSelect = {handleInvoiceSelect}\r\n                         path = '/client/clientprofile'\r\n                                   />}\r\n            {showDetail &&  localInvoiceSelected && \r\n                    <InvoiceDetail invoice = {inv}  path = '/client/clientprofile'/>}  \r\n\r\n\r\n             \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClientProfileInvoiceTable;","import React,{useContext,useState} from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport ClientContext from  '../../context/ClientContext'\r\nimport Menu from '../menu'\r\nimport SubMenu from '../../core/SubMenu';\r\n\r\nimport ClientProfileSummary from './ClientProfileSummary'\r\nimport ClientProfileOrder from './ClientProfileOrder';\r\nimport ClientProfileInvoiceTable from './ClientProfileInvoiceTable';\r\n\r\n\r\n\r\nconst ClientProfilePage = (props) =>  {\r\n\r\n const history = useHistory();\r\n\r\n const {clientSelected} = useContext(ClientContext)\r\n const [summary,setSummary] = useState(true)\r\n const [orderTab,setOrderTab] = useState(false)\r\n const [shipmentTab,setShipmentTab] = useState(false)\r\n const [invoiceTab,setInvoiceTab] = useState(false)\r\n const [paymentTab,setPaymentTab] = useState(false)\r\n\r\n  \r\n\r\n\r\n\r\n\r\nconst profileTabs = () => {\r\n \r\n    return (\r\n        <div className = 'd-flex flex-column flex-sm-row  justify-content-evenly '\r\n             style = {{backgroundColor : 'dodgerblue'}} >\r\n                \r\n                    <div className=\"btn   text-white fs-3 p-2\" \r\n                        style ={summary? {backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'}} \r\n                        onClick = {() => {\r\n\r\n                                setSummary(true)\r\n                                setShipmentTab(false)\r\n                                setOrderTab(false)\r\n                                setInvoiceTab(false)\r\n                                setPaymentTab(false)\r\n                                }                        \r\n\r\n                        } \r\n                        >Summary </div>\r\n                    \r\n                    <div className=\"btn  text-white fs-3 p-2\"\r\n                        style ={orderTab? {backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'}}\r\n                        onClick = {() => {\r\n\r\n                            setSummary(false)\r\n                            setShipmentTab(false)\r\n                            setOrderTab(true)\r\n                            setInvoiceTab(false)\r\n                            setPaymentTab(false)\r\n                                }                        \r\n\r\n                        } \r\n                        >Order </div> \r\n         \r\n          \r\n                    <div className=\"btn btn-info  text-white fs-3 p-2\"\r\n                            style ={shipmentTab? {backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'}}                    \r\n                            onClick = {() => {\r\n\r\n                                setSummary(false)\r\n                                setShipmentTab(true)\r\n                                setOrderTab(false)\r\n                                setInvoiceTab(false)\r\n                                setPaymentTab(false)\r\n                                    }                        \r\n\r\n                            } \r\n                            > Shipment </div> \r\n\r\n                    <div className=\"btn btn-info  text-white fs-3 p-2\"\r\n                            style ={invoiceTab? {backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'}}                    \r\n                            onClick = {() => {\r\n                                    \r\n                                setSummary(false)\r\n                                setShipmentTab(false)\r\n                                setOrderTab(false)\r\n                                setInvoiceTab(true)\r\n                                setPaymentTab(false)\r\n                                    }                        \r\n\r\n                            } \r\n                            > Invoice </div> \r\n\r\n              \r\n           <div className=\"btn btn-info text-white fs-3 p-2\"\r\n                 style ={paymentTab? {backgroundColor:'tomato'}:{backgroundColor:'dodgerblue'}}                    \r\n                 onClick = {() => {\r\n                          \r\n                    setSummary(false)\r\n                    setShipmentTab(false)\r\n                    setOrderTab(false)\r\n                    setInvoiceTab(false)\r\n                    setPaymentTab(true)\r\n                        }                        \r\n\r\n                 } \r\n                 > Payment </div> \r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n \r\n    return (\r\n        <div className = ''>\r\n             <Menu/>\r\n             <div className = 'container '>\r\n                 <SubMenu/>\r\n           \r\n             <div className = 'd-flex flex-column border border-dark px-3 py-3 fs-4 w-100'>\r\n\r\n                <div className=\"btn btn-info fs-4 px-5 align-self-center  w-25\" onClick = {()=> history.goBack()}>Back</div>\r\n                <div><b>Client Profile : </b></div>\r\n                { clientSelected && \r\n                <> \r\n                 <div className = 'fs-3  '><b> \r\n                      {(clientSelected.name).toUpperCase()}\r\n                     </b> <span className = 'mx-2'>\r\n                        {clientSelected.code} \r\n                         </span></div>\r\n                   \r\n                    <hr/>\r\n                    <div>{profileTabs()}</div>\r\n                      {summary &&  <ClientProfileSummary clientSelected = {clientSelected}/>}\r\n                      {orderTab && <ClientProfileOrder clientSelected = {clientSelected}/>}\r\n                      {invoiceTab && <ClientProfileInvoiceTable clientSelected = {clientSelected}/>}\r\n                      \r\n                    </>  }\r\n                  </div>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClientProfilePage;","import React from 'react';\r\nimport '../../../css/orderDetail.css'\r\n\r\n\r\n\r\nconst  PaymentInvoiceTable = ({invoices,onInvoiceApplyCancel,onCashApplied}) => {\r\n\r\n\r\n\r\nconst handleChange = index  => event => {\r\n \r\n    onCashApplied(event.target.value,index)\r\n}\r\n\r\n\r\n    return (\r\n             <div>\r\n                 <table>\r\n                     <tr className = 'tr'>\r\n                         <th className = 'th'>Invoice#</th>\r\n                         <th className = 'th'>Invoice Date</th>\r\n                         <th className = 'th'>Invoice Amount</th>\r\n                         <th className = 'th'>Other Paid</th>\r\n                         <th className = 'th'>Current Payment</th>\r\n                         \r\n                     </tr>\r\n                     {invoices.map((invoice,index) => <tr>\r\n                                      <td className = 'td'>{invoice.invoiceNo}</td>\r\n                                      <td className = 'td'>{new Date(invoice.invoiceDate).toDateString()}</td>\r\n                                      <td className = 'td'>{invoice.amount}</td>\r\n                                      <td className = 'td'>{invoice.paid}</td>\r\n                                      <td className = 'td'><input  type = 'number'\r\n                                                                   style = {{maxWidth : '10rem', \r\n                                                                                outline:'none' , \r\n                                                                                border:'none'}}\r\n                                                  onChange = {handleChange(index)} \r\n                                                   /></td>\r\n                                      <td><div className = 'btn fs-4 text-primary border border-secondary  mx-2'\r\n                                               onClick = {() => onInvoiceApplyCancel(index)}\r\n                                                ><b>X</b></div></td>\r\n                         </tr>)}\r\n                     \r\n                 </table>\r\n             </div>\r\n    );\r\n}\r\n\r\nexport default PaymentInvoiceTable;","import React,{useState,useEffect,useContext} from 'react';\r\nimport InvoiceContext from '../../../context/InvoiceContext';\r\nimport {getInvoices} from '../../../admin/clientApi'\r\n\r\n\r\nfunction InvoiceListTable({receiptData,onClose}) {\r\n   \r\n//    const {invoices} = useContext(InvoiceContext)\r\n    const [invoices,setInvoices] = useState([])\r\n    const [invoiceList,setInvoiceList] =useState([]) \r\n    const [values,setValues] = useState({\r\n        error :'',\r\n        loading:false\r\n    })\r\n\r\n    const {error,loading} = values\r\n\r\nconst findInvoices =()=>{\r\n\r\n    let list = invoices.filter(invoice => receiptData.invoicesApplied.includes(invoice._id))\r\n    console.log(\"Invoice List in table :\",list)\r\n    return list\r\n}\r\nconst fetchInvoices = async () => {\r\n    setValues({error : '',loading:true})\r\n    await  getInvoices()\r\n           .then(data => {\r\n               if(data.error){\r\n                  setValues({error : data.error,loading:false})\r\n               }\r\n               else {\r\n                //    console.log(\"Invoices generated in Route :\",data)\r\n                   setInvoices(data)\r\n                  setValues({error : '',loading:false})\r\n\r\n               }\r\n           })\r\n           .catch(error =>{\r\n            setValues({error : error,loading:false})\r\n\r\n           } \r\n              )\r\n }\r\n\r\nuseEffect(()=>{\r\n     fetchInvoices()\r\n     setInvoiceList(findInvoices(receiptData.invoicesApplied))\r\n},[])\r\n\r\n    return (\r\n        \r\n        <div >\r\n           {loading && <div className='fs-3 text-center text-secondary'>Loading....</div>}\r\n                   {error && <div className='fs-3 text-center text-secondary'>Error fetching Data</div>}\r\n            <div className ='w-100 fs-4 border border-dark rounded ' >\r\n                <div className = 'bg-info d-flex justify-content-between align-items-center p-3'>\r\n                   <div><b>Payment Applied</b></div>\r\n                  {onClose &&  <div className = 'btn fs-3' \r\n                        onClick = {()=>onClose()} \r\n                         ><b>X</b></div>}\r\n                </div>\r\n                <div className = 'd-flex justify-content-between'>\r\n                    <div>Receipt# : {receiptData.receiptNo}</div>\r\n                    <div>payment for <span>{invoiceList.length}</span>{invoiceList.length === 1? 'invoice' : 'invoices'}</div>\r\n                </div>\r\n               {invoiceList.length > 0 && <div className = 'w-100'>\r\n                   <table className = 'table'>\r\n                     <tr>\r\n                         <th className = 'th'></th> \r\n                         <th className = 'th'>Invoice#</th>\r\n                         <th className = 'th'>Invoice Date</th>\r\n                         <th className = 'th'>Invoice Amount</th>\r\n                         <th className = 'th'>Adjusted</th>\r\n                         </tr>  \r\n                  { invoiceList.map((invoice,index) => <tr>\r\n                             <td className = 'td'>{index+1}</td>\r\n                             <td className = 'td'>{invoice.invoiceNo}</td>\r\n                             <td className = 'td'>{new Date(invoice.invoiceDate).toDateString()}</td>\r\n                             <td className = 'td'>{invoice.amount}</td>\r\n                             <td className = 'td'>{invoice.paid}</td>\r\n                       </tr> )}\r\n                            \r\n                   </table>\r\n                   </div>}\r\n            </div>\r\n           \r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default InvoiceListTable;","import React,{useState,useContext,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Menu from '../menu';\r\nimport ClientContext from '../../context/ClientContext';\r\n\r\nimport UserContext from '../../context/UserContext';\r\nimport InvoiceContext from '../../context/InvoiceContext'\r\n\r\nimport '../../css/payment.css'\r\nimport {createReceipt,getClients, getInvoices,\r\n       getNextReceiptSequence,\r\n       getOrders, updateClient, updateInvoice} from '../../admin/clientApi'\r\nimport Modal from '../Modal'\r\nimport '../../css/orderDetail.css'\r\nimport PaymentInvoiceTable from './Receipt/PaymentInvoiceTable';\r\nimport ReceiptContext from '../../context/ReceiptContext';\r\nimport { getFormatDate } from '../DateAPI';\r\nimport {updateReceipt} from '../../admin/clientApi'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport InvoiceListTable from './Receipt/InvoiceListTable';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\n\r\nconst  Payment = (props) =>  {\r\n\r\n    const history = useHistory()\r\n    const {user,token} = useContext(UserContext)\r\n    const {clientSelected,setClientSelected} = useContext(ClientContext)\r\n    // const {orders} = useContext(OrderContext)\r\n    const [clients,setClients] = useState([])\r\n    const [orders,setOrders] = useState([])\r\n    const [invoices,setInvoices] = useState([]) \r\n    const {setInvoiceSelected} = useContext(InvoiceContext)\r\n    const {receiptSelected} = useContext(ReceiptContext)\r\n    const [clientInvoices,setClientInvoices] = useState([])\r\n    const [showModal,setShowModal] = useState(false)\r\n    const [receiptNumber,setReceiptNumber] = useState(null)\r\n    const [update,setUpdate] = useState(false)\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n    const [totalAppliedInvoices,setTotalAppliedInvoices] = useState([])\r\n    // const [totalAppliedAmount,setTotalAppliedAmount] = useState(0)\r\n    const [balanceAmount,setBalanceAmount] = useState(0)\r\n    const [drcr,setdrcr] = useState(false)\r\n    const [datafetching,setDatafetching] = useState({\r\n        error : '',\r\n        loading:false\r\n    })\r\n     let temp = []\r\nconst {error,loading} = datafetching\r\n\r\n const [values,setValues] = useState({\r\n     amount:0,\r\n     paymentDate : new Date(),\r\n     receiptNo : 0,\r\n     paymentMode : 'Cash',\r\n     paidtoAc : '',\r\n     chequeNo:'',\r\n     notes : '',\r\n     invoicesApplied : [],\r\n     client:'',\r\n     cancelled:false,\r\n })\r\n\r\nconst populateClientData = () => {\r\n    if(clientSelected){\r\n\r\n      let clientOrders =   orders.filter(order => order.clientId._id === clientSelected._id)\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nconst validateReceipt = () => {\r\n    if(amount <=0 || totalAppliedInvoices.length<1) return false \r\n    if(paidtoAc === '') {\r\n        window.alert(\"Please select the paid to account\")\r\n        return false\r\n    }    \r\n    if(paymentMode === 'Cheque'){\r\n        if(chequeNo === '') {\r\n            window.alert(\"Please Enter valid Cheque Number\")\r\n            return false  \r\n        }\r\n    }\r\n    let amountApplied = calculateAmountApplied()\r\n    if(amount < amountApplied){\r\n        window.alert(`Total applied amount ${amountApplied} exceeding  paid amount ${amount}` )\r\n        return false\r\n    }\r\n    if(amount > amountApplied){\r\n        window.alert(`Toatl paid amount ${amount} is more than total applied amount ${amountApplied}`)\r\n        return false\r\n    }\r\n    return true\r\n}\r\nconst updateClientBalance = () => {\r\n    let client = {...clientSelected}\r\n    // if(client.balance >= totalAppliedAmount) client.balance -=totalAppliedAmount\r\n    // else if(client.balance < totalAppliedAmount) {\r\n    //     client.balance = totalAppliedAmount-client.balance\r\n    //     client.drcr = true // balane credit \r\n    // }\r\n    client.balance = balanceAmount\r\n    updateClient(user._id,token,client)\r\n      .then(data => {\r\n          if(data.error){\r\n              window.alert(\"Error while saving client data\")\r\n          }\r\n      })\r\n      .catch(err => window.alert(\"Error while saving client data\"))\r\n}\r\n\r\nconst updateInvoiceApplied = () => {\r\n\r\n    let invoiceList = []\r\n    totalAppliedInvoices.forEach((invoice,index) => {\r\n        let tempInvoice = {...invoice}\r\n            tempInvoice.paid = parseInt(tempInvoice.applied)\r\n            tempInvoice.balance = parseInt(tempInvoice.amount)-tempInvoice.paid       \r\n            delete tempInvoice.applied     \r\n\r\n            invoiceList.push(totalAppliedInvoices[index]._id)    \r\n\r\n        updateInvoice(user._id,token,{...tempInvoice})\r\n           .then(data => {\r\n               if(data.error){\r\n                window.alert(\"Error while saving invoice update\")\r\n               }\r\n           })\r\n           .catch(err => window.alert(\"Error while saving invoice update\"))\r\n     })\r\n     setValues({...values,invoicesApplied:invoiceList})\r\n}\r\nconst createInvoiceList = ()=> {\r\n    let invoiceList = []\r\n    totalAppliedInvoices.forEach(invoice => invoiceList.push(invoice._id) )\r\n    return invoiceList\r\n}\r\nconst handleReceiptSave = () => {\r\n  if(validateReceipt()){\r\n      let newBalance =  calculateClientBalance()  \r\n     \r\n\r\n      //Update Invoices as per the applied amount for each\r\n      let invoiceList = createInvoiceList()\r\n    \r\n      totalAppliedInvoices.forEach(invoice => {\r\n          let tempInvoice = {...invoice}\r\n              tempInvoice.paid = parseInt(tempInvoice.applied)\r\n              tempInvoice.balance = parseInt(tempInvoice.amount)-tempInvoice.paid       \r\n              delete tempInvoice.applied     \r\n  \r\n         \r\n          updateInvoice(user._id,token,tempInvoice)\r\n             .then(data => {\r\n                 if(data.error){\r\n                  window.alert(\"Error while saving invoice update\")\r\n                 }\r\n                //  else fetchInvoices()\r\n             })\r\n             .catch(err => window.alert(\"Error while saving invoice update\"))\r\n       })\r\n     \r\n\r\n    // update the client s balance\r\n     \r\n         \r\n        updateClient(user._id,token,{...clientSelected,balance : newBalance})\r\n            .then(data => {\r\n                if(data.error){   window.alert(\"Error while saving client data\") }  \r\n                // else fetchClients()              \r\n            })\r\n            .catch(err => window.alert(\"Error while saving client data\"))\r\n\r\n        \r\n    \r\n     //CREATE RECEIPT\r\n    \r\n     \r\n     \r\n            createReceipt(user._id,token,{...values,receiptNo : receiptNumber,amount,invoicesApplied:invoiceList })\r\n            .then(data => {\r\n                if(data.error){\r\n                    window.alert(\"Error while creating receipt\")\r\n                }\r\n                // else fetchReceipts()\r\n                \r\n            })                 \r\n            .catch(err =>window.alert(\"Error while creating receipt\") )\r\n      \r\n            setInvoiceSelected(null)\r\n            setClientSelected(null)\r\n            history.push('/accounts/receipt')\r\n     \r\n  }  \r\n      \r\n}  \r\n  \r\n//    const {name} = clientSelected\r\nconst {amount,paymentDate,paymentMode,paidtoAc,chequeNo,notes} = values\r\n  \r\n \r\n  \r\nconst handleChange = name => event => {\r\n\r\n    setValues({...values,[name]:event.target.value})\r\n  \r\n  }\r\n  \r\nconst getLastInvoice = (invoiceList) => {\r\n    if(invoiceList.length>1){\r\n       let toBeSorted = [...invoiceList]\r\n        toBeSorted.sort((a,b) => (parseInt(a.invoiceNo) - parseInt(b.invoiceNo))) \r\n        //list in ascending order so that the  last invoice comes last in the list\r\n       \r\n        let lastInvoice = convertToSequnceString(toBeSorted[toBeSorted.length-1].invoiceNo)\r\n     \r\n        let invoice = invoiceList.filter(i => i.invoiceNo === lastInvoice)\r\n      \r\n        return `#${invoice[0].invoiceNo}   for   Rs.${invoice[0].amount} on ${new Date(invoice[0].invoiceDate).toDateString()}`\r\n    }\r\n    else if(invoiceList.length ===1){\r\n                return `#${invoiceList[0].invoiceNo} for Rs.${invoiceList[0].amount} on ${new Date(invoiceList[0].invoiceDate).toDateString()}`\r\n    }\r\n    else return <div>No Invoices found</div>\r\n    \r\n}  \r\nconst onSelectClient = event =>{\r\n\r\n   let selectedClientId = event.target.value   \r\n   const selectedClient = clients.filter(client => client._id === selectedClientId)\r\n   setValues({...values,client:selectedClient[0]._id})\r\n   setClientSelected(selectedClient[0]) \r\n   setBalanceAmount(selectedClient[0].balance)\r\n   setdrcr(selectedClient.drcr) \r\n\r\n   getInvoices()\r\n           .then(data =>{\r\n               if(data.err){\r\n                    window.alert(\"Error while111 fetching invoices\",data.err)\r\n                   \r\n               }\r\n               else{\r\n                   if(data.length > 0){\r\n                       let newData =   data.filter(invoice => (invoice.clientId === selectedClientId )&& (invoice.balance >= 0))\r\n                       \r\n                     \r\n                       setClientInvoices(newData)\r\n                    }\r\n               }\r\n           })\r\n           .catch(err=>{\r\n               window.alert(\"Error while fetching invoices\",err)\r\n           })\r\n           \r\n }\r\n\r\n  \r\n  \r\n  \r\n\r\nconst applyPayment=() => {   \r\n   //shows all the unpaid invoices \r\n    setShowModal(true)\r\n}  \r\nconst handleModalClose = () => {\r\n   setShowModal(false)\r\n}  \r\nconst handleContinue =()=> {    \r\n    if(temp.length >0){\r\n          setShowModal(false)\r\n          let totalApplied = []\r\n          temp.forEach(i => totalApplied.push(clientInvoices[i]))           \r\n          setTotalAppliedInvoices(totalApplied)       \r\n    }\r\n    else window.alert(\"Please select atleast one Invoice to apply\")\r\n}\r\n\r\nconst convertToSequnceString = (num) => {\r\n\r\n    let newString = num.toString()\r\n  \r\n    let numlength = newString.length\r\n    if(numlength < 6 ){\r\n         for(let i=0; i< 6-numlength ;i++){\r\n             newString = \"0\"+newString;           \r\n         }\r\n    }\r\n    return newString\r\n \r\n } \r\n\r\nconst getReceiptCode = async () => {\r\n    await getNextReceiptSequence()\r\n        .then(data => {          \r\n            \r\n            setReceiptNumber(convertToSequnceString(data.sequence_val))  \r\n                   })\r\n        .catch(err => {\r\n            setMessage(\"Error in sequence\")\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        })\r\n}\r\n  \r\nuseEffect(()=>{\r\n    (async ()=> {\r\n        setDatafetching({error:'',loading : true})\r\n        const client = await getClients(user._id,token)\r\n        const order = await getOrders(user._id,token)\r\n        const invoice = getInvoices(user._id,token)\r\n        setClients(client)\r\n        setOrders(order)\r\n        setInvoices(invoice)\r\n        setDatafetching({error : '',loading:false})\r\n    })()\r\n    if(receiptSelected){\r\n    //    setClientSelected(receiptSelected.client)\r\n       setUpdate(true)\r\n       setClientSelected(receiptSelected.client)\r\n       setValues({...receiptSelected,client: receiptSelected.client._id ,_id : receiptSelected._id})\r\n       setReceiptNumber(receiptSelected.receiptNo) \r\n    }\r\n    else{\r\n\r\n        getReceiptCode()\r\n        populateClientData()\r\n    }\r\n\r\n},[])\r\n\r\n\r\nconst handleInvoiceApplyCancel = index => {\r\n    \r\n    let part1 = totalAppliedInvoices.slice(0,index)\r\n    let part2 = totalAppliedInvoices.slice(index+1)\r\n    let newList = [...part1,...part2]\r\n    setTotalAppliedInvoices(newList)\r\n}\r\nconst calculateAmountApplied = () => {\r\n    let totalAmount = 0\r\n    if(totalAppliedInvoices.length > 0)\r\n            totalAppliedInvoices.forEach(invoice => invoice.applied? totalAmount += parseInt(invoice.applied): null )\r\n    \r\n    return totalAmount\r\n}\r\nconst handleCashApplied = (paidAmount,index) => {\r\n///Aplllying amount to every invoice selected \r\n\r\n//   let totalAmount = calculateAmountApplied()\r\n//  setTotalAppliedAmount(totalAmount)//total amount applied\r\n    let list =[...totalAppliedInvoices]\r\n    if(paidAmount > 0){    \r\n\r\n        list[index].applied = paidAmount\r\n                  \r\n           setTotalAppliedInvoices(list)\r\n         }\r\n         \r\n}\r\n\r\nconst calculateClientBalance = () => {\r\n    let newBalance = 0\r\n \r\n    if(drcr){   //if client has credit balance \r\n     }\r\n    else {\r\n         let amountApplied = calculateAmountApplied()\r\n        if(amountApplied >= balanceAmount){  //paying full or more than outstanding amount\r\n            newBalance =  parseInt(amountApplied) - parseInt(balanceAmount)    \r\n            if(newBalance > 0)setdrcr(true) // excess amount is credited\r\n            setBalanceAmount(newBalance)\r\n            \r\n           \r\n           return newBalance     \r\n        }\r\n        else { // if paying less than the outstanding amount\r\n            newBalance = parseInt(balanceAmount) - parseInt(amountApplied)\r\n            if(newBalance > 0 ) setdrcr(false) \r\n            setBalanceAmount(newBalance) \r\n              \r\n           return newBalance     \r\n\r\n        }\r\n    }\r\n    \r\n     \r\n}\r\n\r\n\r\nconst  invoiceListModal = () => {\r\n\r\n\r\n\r\n    return (\r\n\r\n                <div >\r\n                    <div >\r\n                       \r\n                        <div className ='my-2 w-100 fs-4' >\r\n                           {clientInvoices.length > 0 && <div className = 'w-100'>\r\n                               <table className = 'table'>\r\n                                 <tr>\r\n                                     <th className = 'th'></th> \r\n                                     <th className = 'th'>Invoice#</th>\r\n                                     <th className = 'th'>Invoice Date</th>\r\n                                     <th className = 'th'>Invoice Amount</th>\r\n                                     <th className = 'th'>Paid</th>\r\n                                     </tr>  \r\n                              { clientInvoices.map((invoice,index) => <tr>\r\n                                         <td className = 'td'><input type = 'checkbox' \r\n                                                className = 'mx-2 '\r\n                                                value = {invoice._id}                                                \r\n                                                onChange = {()=>{\r\n                                                    //this part saves invoice index  and saves in temp array                                                    \r\n                                                    if(temp.includes(index)){\r\n                                                        let newTemp = temp.filter(i => i !== index) \r\n                                                        temp = newTemp   \r\n                                                    }\r\n                                                    else  temp.push(index)                                                    \r\n                                                    }}                                              \r\n                                                /></td>\r\n                                         <td className = 'td'>{invoice.invoiceNo}</td>\r\n                                         <td className = 'td'>{new Date(invoice.invoiceDate).toDateString()}</td>\r\n                                         <td className = 'td'>{invoice.amount}</td>\r\n                                         <td className = 'td'>{invoice.paid}</td>\r\n                                   </tr> )}\r\n                                        \r\n                               </table>\r\n                               </div>}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className = 'btn btn-info fs-4' \r\n                                    onClick = {handleContinue}\r\n                                    >Continue</button>\r\n                           <button  className = 'btn btn-info fs-4'\r\n                                    onClick = {handleModalClose} \r\n                                    >Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           \r\n    )\r\n}\r\n\r\nconst receiptForm = () => {\r\n\r\n    return (\r\n        <div className=\" container-100-mdx60-xlx50 fs-4 d-flex flex-column\">\r\n        <div className = 'fs-4 my-3'><b>Payment</b></div>\r\n       {clientSelected && <>\r\n                            {/* <div className = 'my-5'><b>Payment</b></div> */}\r\n                            <div>Client : <b>{clientSelected.name}</b> </div> \r\n                            </>\r\n                 }\r\n        {!clientSelected && <>\r\n                             <div>Client</div>\r\n                             <select name = 'client'\r\n                                     className = 'my-2 payment-container '\r\n                                   //   value = {}\r\n                                     onChange = {onSelectClient}\r\n                                     >\r\n                                    <option> Select Client</option>     \r\n                                 {\r\n                                     clients.map(client => <option key = {client._id} value = {client._id}>{client.name}</option>)\r\n                                 }\r\n                                 </select> \r\n                            </>}        \r\n        <div className=\"row \">\r\n            <div className=\"col \">\r\n                   <div>Amount</div>\r\n                   <input type=\"number\"\r\n                          value = {amount} \r\n                          disabled = {update}\r\n                          onChange = {handleChange('amount')}                                  \r\n                          />\r\n                </div>    \r\n            <div className=\"col \">\r\n                   <div>Payment Date</div>\r\n                   {!update && <input type=\"date\"\r\n                          value = {paymentDate}                 //    defaultValue = {new Date().toDateString()} \r\n                          onChange = {handleChange('paymentDate')}                                  \r\n                          />}\r\n                     {update && <div className = 'border border-dark text-right'>{getFormatDate(paymentDate)}</div>}     \r\n                </div>    \r\n            <div className=\"col\">\r\n                   <div>Receipt#</div>\r\n                   <input type=\"number\"\r\n                          value = {receiptNumber}\r\n                          />\r\n                </div>    \r\n        </div>   \r\n\r\n        <div className=\"row \">\r\n            <div className=\"col\">\r\n                   <div>Payment Mode</div>\r\n                   <select value = {paymentMode} \r\n                           disabled = {update}\r\n                           onChange = {handleChange('paymentMode')}                                  \r\n                           >\r\n                      <option value = 'Cash'>Cash</option>          \r\n                      <option value = 'Cheque'>Cheque</option>          \r\n                      <option value = 'NetBanking'>NetBanking</option>          \r\n                     </select>\r\n                </div>    \r\n            <div className=\"col \">\r\n                   <div>Paid to a/c : </div>\r\n                   <select value = {(paymentMode === 'NetBanking')? 'Bank account': paidtoAc} \r\n                           disabled = {update}\r\n                           onChange = {handleChange('paidtoAc')}                                  \r\n                           >\r\n                      <option></option>\r\n                      <option value = 'Bank account'>Bank account</option>          \r\n                      <option value = 'Cash Account'>Cash Account</option>          \r\n                     </select>\r\n                </div>    \r\n            <div className=\"col\">\r\n                   <div>Cheque/Ref#</div>\r\n                   <input type=\"number\"\r\n                          value = {chequeNo}\r\n                          disabled = {update}\r\n                          onChange = {handleChange('chequeNo')}\r\n                          />\r\n                </div>    \r\n        </div>   \r\n        <div className=\"row\">\r\n             <div>Notes</div>\r\n             <input type = 'text'\r\n                    value = {notes}\r\n                    onChange = {handleChange('notes')}   \r\n                    />\r\n            </div>   \r\n        {!update && <> <div className=\"row border border-dark \" style = {{color :'#000' , fontSize : '1.6rem'}}>\r\n             \r\n             <div><b>Balance : </b>\r\n                    {clientSelected && <span style ={{fontSize : '1.8rem'}}> {clientSelected.balance}</span>}\r\n                     </div>\r\n              \r\n             <div><b>Last Invoice : </b><span style ={{fontSize : '1.8rem'}}>{getLastInvoice(clientInvoices)}</span></div>\r\n             \r\n             <div><b>Last Payment : </b></div>\r\n        </div>\r\n        <div className=\"d-flex flex-row justify-content-between align-items-center border border-dark my-1\">\r\n            <div><b>Total Applied : </b>{calculateAmountApplied()}</div>\r\n           {amount >0 &&  <div className = 'btn fs-4 text-primary' onClick = {() => {\r\n                applyPayment()\r\n            }}>Apply Payment</div>\r\n             }\r\n            </div>\r\n            {totalAppliedInvoices.length > 0 && <div>\r\n                <PaymentInvoiceTable     invoices = {totalAppliedInvoices} \r\n                                         onInvoiceApplyCancel = {handleInvoiceApplyCancel}\r\n                                         onCashApplied = {(amountPaid,index)=>handleCashApplied(amountPaid,index)}\r\n                                         />\r\n                </div>}\r\n           </>\r\n             }\r\n           {update && <div className=\" border border-dark my-1\">\r\n                <div className = 'd-flex flex-row justify-content-between align-items-center'>\r\n                      <div><b>Total Applied : </b>{amount}</div>\r\n                       <div className = ' fs-4 px-2 '>Balance : {clientSelected.balance} <span>\r\n                            <KeyboardArrowDownIcon sx = {{fontSize : 30}}   />\r\n                        </span>\r\n                        </div>\r\n                  </div>                    \r\n                  <InvoiceListTable  receiptData = {receiptSelected} />\r\n            </div>}  \r\n         <div className = 'd-flex justify-content-between my-2'>\r\n             {update && <div className = 'btn btn-danger fs-4 ' \r\n                             onClick = {()=> {\r\n                                 let reply = window.confirm(`Receipt # : ${receiptNumber} will be deleted permenantly.\r\n                                               Are you Sure? `)\r\n                                 if(reply){\r\n                                     let newReceipt = {...receiptSelected}\r\n                                     newReceipt.cancelled  = true\r\n\r\n                                     updateReceipt(user._id,token,newReceipt)\r\n                                      .then(data => {\r\n                                          if(data.error){\r\n                                            window.alert(\"Delete request failed\")                                         \r\n                                          }\r\n                                          else {\r\n                                              //log data\r\n                                          }\r\n                                      })\r\n                                      .catch(error => {\r\n                                          window.alert(\"Delete request failed\")\r\n                                      })\r\n                                 }               \r\n                             }}\r\n                             >\r\n                      <DeleteOutline  sx = {{fontSize : 40}}/>Cancel Payment</div>\r\n                      }\r\n             {(totalAppliedInvoices.length > 0 || update) && <div className=\"btn btn-info fs-4\" \r\n                  onClick = {handleReceiptSave}\r\n                  >Save Receipt</div>}\r\n\r\n             <div className=\"btn btn-info fs-4\" onClick = {()=> {\r\n                 setClientSelected(null)\r\n                 if(update){\r\n                     history.push('/accounts/receipt')\r\n                 } \r\n                 else  history.goBack()\r\n                 }}>Cancel</div>\r\n             </div>  \r\n    </div>\r\n    )\r\n}\r\n\r\n   return (\r\n        <div className = ''>\r\n            <Menu/>\r\n            {loading && <div className='fs-3 text-center text-secondary'>Loading...</div>}\r\n            {alert && <div className = 'fs-4 text-red'>{message}</div>}\r\n            {showModal && <Modal title = 'Payment Settlemant' onClose = {handleModalClose}>\r\n                            {invoiceListModal()}\r\n                              </Modal>} \r\n            {receiptForm()} \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Payment;","import React,{useContext, useState,useEffect} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport MaterialTable from 'material-table';\r\nimport tableIcons from '../../../icons/MaterialUiIcons'\r\nimport {  TablePagination, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CancelPresentationIcon from '@mui/icons-material/CancelPresentation';\r\nimport ClientContext from '../../../context/ClientContext'\r\nimport OrderContext from '../../../context/OrderContext'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"blue\",\r\n      color: \"green\"\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"white\"\r\n    },\r\n    caption: {\r\n      color: \"black\",\r\n      fontSize: \"20px\"\r\n    },\r\n    selectIcon: {\r\n      color: \"blue\",\r\n      fontSize:'2rem'\r\n    },\r\n    select: {\r\n      color: \"blue\",\r\n      fontSize: \"2rem\"\r\n    },\r\n    actions: {\r\n      color: \"blue\"\r\n    }\r\n  });\r\n  \r\n\r\nconst  OrderInInvoiceForm = ({rOrders,onRowSelect}) => {\r\n\r\n   const classes = useStyles();\r\n   const history = useHistory()\r\n   const {clients,setClientSelected,onClientSelect} = useContext(ClientContext)\r\n   const {orders,setOrderSelected} = useContext(OrderContext)\r\n\r\n\r\n   const [selectedRows,setSelectedRows] = useState([])\r\n   \r\n   const findClientSelected = (id) => {\r\n    let newClient = clients.filter(client => client._id === id)\r\n      \r\n    return newClient[0]\r\n}\r\n\r\n\r\nconst getProductList = products => {\r\n  let productList = []\r\n  console.log(\"Products :::\",products)\r\n   if(products.length > 0){\r\n      products.forEach(p => productList.push(`${p.product} - ${p.units}` ))\r\n   }\r\n   return productList.join()\r\n   \r\n}\r\n\r\n\r\n   const columns = [\r\n       {title : 'Order#',field : 'orderNo',maxWidth:'7rem', \r\n                      render: rowData => <Link style = {{textDecoration : 'none'}} \r\n                                               to = '/order/newOrder' \r\n                                               onClick = {()=>setOrderSelected(rowData)}>\r\n                                               {rowData.orderNo}\r\n                                               </Link>},\r\n       {title : 'Order Date',field : 'orderDate',\r\n                     render : rowData => <div>{new Intl.DateTimeFormat(\"en-GB\").format(new Date(rowData.orderDate))}</div>},\r\n       {title : 'Client', field:'client',\r\n                     render : rowData => <Link to = '/client/clientprofile' \r\n                                               style = {{textDecoration : 'none'}}\r\n                                               onClick = {()=>{\r\n                                                   setClientSelected(findClientSelected(rowData.clientId))\r\n                                               }}\r\n                                   >{rowData.client.toUpperCase()}</Link>},\r\n       {title : 'patient',field : 'patient'},\r\n       {title :'products',field :'',render : rowData => <div>{getProductList(rowData.products)}</div>},\r\n       {title :'Order Amount',field :'orderAmount'},\r\n       \r\n   ]\r\nconst handleAddToInvoiceCancel = () => {\r\n  setSelectedRows([])\r\n  // onRowSelect(selectedRows)\r\n  history.goBack()\r\n}\r\n\r\nconst addToInvoice = () => {\r\n    onRowSelect(selectedRows)\r\n}\r\n\r\n const handleRowSelection = rowsSelected => {\r\n     \r\n    setSelectedRows(rowsSelected)\r\n\r\n }  \r\n\r\nuseEffect(()=>{\r\n\r\n},[])  \r\n\r\nreturn (\r\n  <div className = 'container-fluid'>\r\n          {console.log(\"Orders received in OrderInInvoiceForm ::::\",rOrders)}\r\n          \r\n            <div className = 'border border-info fs-4 mx-auto my-2   '>\r\n                             <div className=\"d-flex flex-row justify-content-end \">\r\n                                   <div className=\"btn btn-info text-white fs-3 mx-3 border border-white\" \r\n                                        onClick = {handleAddToInvoiceCancel}>Cancel</div>    \r\n                                   <div className=\"btn btn-info text-white fs-3 border border-white\" \r\n                                        onClick = {addToInvoice}>Add to Invoice</div>    \r\n                              </div> \r\n                              \r\n            <MaterialTable  columns = {columns}\r\n                            data = {rOrders}\r\n                            icons = {tableIcons}\r\n                            title = 'Orders'\r\n                            onSelectionChange = {(selectedRows)=> {handleRowSelection(selectedRows)}}\r\n                            // actions = {[\r\n                            //   {icon:()=><Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Cancel</div>}>\r\n                            //              <CancelPresentationIcon sx={{fontSize : 25}} /></Tooltip>,\r\n                            //     onClick:(e,data)=>{  \r\n                            //                             console.log(data)\r\n                            //                             // onCancelOrderInInvoice(data)\r\n                                                      \r\n                            //                           } \r\n                            //           },\r\n                             \r\n                            // ]}\r\n                            components = {{\r\n                                Pagination:props => (\r\n                                  \r\n                                  (\r\n                                    <TablePagination \r\n                                    component = 'div'\r\n                                    colSpan={props.colSpan}\r\n                                    count={props.count}\r\n                                    rowsPerPage={props.rowsPerPage}\r\n                                    page={props.page}\r\n                                    onChangePage={props.onChangePage}\r\n                                    onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                                    classes = {{\r\n                                      root: classes.root,\r\n                                      toolbar:classes.toolbar,\r\n                                      caption:classes.caption,\r\n                                      selectIcon:classes.selectIcon,\r\n                                      select:classes.select,\r\n                                      actions:classes.actions,                                                     \r\n                                    }}\r\n                                    />\r\n                                  )\r\n                                )\r\n                              }}\r\n                      \r\n                         options={{\r\n                           filtering:true,\r\n                           actionsColumnIndex:6,\r\n                           pageSize:50,\r\n                           padding:'dense',\r\n                           pageSizeOptions:[10,20,50,100],\r\n                           paginationType:'stepped',\r\n                           exportAllData : true,\r\n                           exportFileName:'orderdata',\r\n                          //  columnsButton:true,                             \r\n                           rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\"}:null  ,\r\n                           selection:true,                              \r\n                           showSelectAllCheckbox:false,\r\n                           showTextRowsSelected:false,\r\n                           headerStyle: {\r\n                            backgroundColor: '#01579b',\r\n                            color: '#FFF',\r\n                            fontSize:'1.5rem'\r\n                          },\r\n                         style:{\r\n                         fontSize : '1.5rem'\r\n                       } \r\n                       }}\r\n                  >\r\n\r\n            </MaterialTable>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderInInvoiceForm;","import React,{useContext,useState,useEffect} from 'react';\r\nimport ClientContext from '../../../context/ClientContext';\r\nimport OrderContext from '../../../context/OrderContext';\r\nimport UserContext from '../../../context/UserContext';\r\nimport InvoiceContext from '../../../context/InvoiceContext';\r\n\r\n\r\nimport ClientOrderTable from '../../ClientOrderTable';\r\nimport { createInvoice, getNextInvoiceSequence, updateClient, updateOrder } from '../../../admin/clientApi';\r\nimport OrderInInvoiceForm from './OrderInInvoiceForm';\r\nimport OrderActionTable from './OrderActionTable'\r\n\r\n\r\n\r\n\r\nconst NewInvoice = (props) =>  {\r\n  \r\nconst {clients,clientSelected,setClientSelected,onClientSelect} = useContext(ClientContext)  \r\nconst {invoices,setInvoiceSelected,invoiceSelected} = useContext(InvoiceContext)\r\nconst {user,token} = useContext(UserContext)\r\nconst {orders,fetchOrders} = useContext(OrderContext)  \r\nconst [update,setUpdate] = useState(false)\r\nconst [invoiceNumber,setInvoiceNumber] = useState('')\r\nconst [message,setMessage] = useState('')\r\nconst [alert,setAlert] = useState(false)\r\nconst [showOrderTable,setShowOrderTable] = useState(false)\r\nconst [showOrdersSelectedTable,setShowOrdersSelectedTable] = useState(false)\r\nconst [ordersSelected,setOrdersSelected]  = useState([])//orders to be invoiced\r\nconst [clientOrders,setClientOrders] = useState([])//all uninvoiced orders\r\n// ordersList    //orders List invoiced with client and amount detail to be saved along with invoice document\r\n\r\n\r\nlet newClientOrders = []\r\n\r\nconst [values,setValues] = useState({\r\n\r\n    invoiceNo:0,\r\n    invoiceDate : new Date(),\r\n    dueDate : new Date(),  \r\n    taxOption : '',\r\n    taxAmount : 0,\r\n    amount :0,\r\n    paid : 0,\r\n    balance:0,\r\n    cancelled :false,\r\n    adjustment:{},\r\n    discount:0,  \r\n})\r\n\r\n\r\n\r\nconst handleChange = name => event => {\r\n    setValues({...values,[name]: event.target.value})\r\n}\r\n\r\n\r\n\r\nconst onAddExistingOrders = () => {\r\n    if(clientSelected && clientOrders.length ===0 && ordersSelected.length === 0){\r\n           console.log(\"Orders received in neInvoice table:\",orders)  \r\n           console.log(\"Client Selected :\",clientSelected)\r\n        let clientOrdersArray =   orders.filter(order => order.clientId === clientSelected._id && order.isInvoiced === false )\r\n           console.log(\"Orders belongnf to  this client are:\",clientOrdersArray)\r\n           setClientOrders(clientOrdersArray)\r\n           setShowOrderTable(true)\r\n           setShowOrdersSelectedTable(false)\r\n           \r\n      }\r\n      else if(clientSelected && clientOrders.length > 0){\r\n          \r\n        console.log(\"Orders belongnf to  this client are**************:\",clientOrders,clientOrders.length)\r\n        \r\n        setShowOrderTable(true)\r\n        setShowOrdersSelectedTable(false)\r\n      }\r\n}\r\n\r\n     const {invoiceNo,invoiceDate,paymentDueDate,taxOption,taxAmount,amount} = values\r\n\r\nconst convertToSequnceString = (num) => {\r\n\r\n        let newString = num.toString()\r\n      \r\n        let numlength = newString.length\r\n        if(numlength < 6 ){\r\n             for(let i=0; i< 6-numlength ;i++){\r\n                 newString = \"0\"+newString;           \r\n             }\r\n        }\r\n        return newString\r\n     \r\n     } \r\n\r\n\r\nconst getInvoiceCode = async () => {\r\n \r\n    await  getNextInvoiceSequence()\r\n        .then(data => {          \r\n        \r\n            setInvoiceNumber(convertToSequnceString(data.sequence_val))  \r\n            \r\n        })\r\n        .catch(err => {\r\n            setMessage(\"Error in sequence\")\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        })\r\n}\r\nconst findClientSelected = (id) => {\r\n   let selClient =  clients.filter(client => client._id === id)\r\n   console.log(\"Client Selected : \",selClient[0])\r\n   return selClient[0]\r\n}\r\n\r\nuseEffect(()=> {\r\n    if(invoiceSelected){\r\n        setUpdate(true)\r\n        setClientSelected(findClientSelected(invoiceSelected.clientId)) \r\n        setValues(invoiceSelected)\r\n          console.log(\"Invoice se;lected\",invoiceSelected)\r\n    }\r\n    else{   \r\n    getInvoiceCode()\r\n    setShowOrderTable(false)\r\n    setShowOrdersSelectedTable(false)\r\n    setValues({...values,invoiceNo : invoiceNumber})\r\n   }\r\n},[clientSelected])\r\n\r\nconst handleRemoveFromInvoiceRowSelect =(rowsSelected) => {\r\n   let newAmount = values.amount\r\n      newAmount = newAmount-rowsSelected.orderAmount\r\n    \r\n    setClientOrders([...clientOrders,rowsSelected])\r\n    \r\n    if(ordersSelected.length > 0){\r\n        let ordersArray  = ordersSelected.filter(order => order._id !== rowsSelected._id)\r\n          setOrdersSelected(ordersArray)\r\n        \r\n          \r\n    }\r\n    \r\n          setValues({...values, amount : newAmount  })\r\n   \r\n    setShowOrderTable(true)\r\n    setShowOrdersSelectedTable(false)\r\n}\r\n\r\n\r\nconst handleAddToInvoiceRowSelect = rowsSelected => {\r\n   console.log(\"RowSElected IN  aDD to Invoice\",rowsSelected)\r\n   let newAmount = values.amount\r\n\r\n    setOrdersSelected(() => [...ordersSelected,...rowsSelected])\r\n    if(rowsSelected.length >0){\r\n        rowsSelected.forEach(order => {       \r\n            \r\n            ///remove order from the client order list \r\n            newClientOrders =clientOrders.filter(o => o._id !== order._id)\r\n            setClientOrders(newClientOrders)                        \r\n            newAmount = newAmount+ order.orderAmount\r\n        })\r\n    }\r\n            \r\n            setValues({...values,\r\n            amount : newAmount,\r\n            balance : clientSelected.balance,\r\n            clientId : clientSelected._id,\r\n            client : clientSelected.name})   \r\n            \r\n\r\n           \r\n    // }\r\n    // setClientSelected(null)\r\n    setShowOrderTable(false)\r\n    setShowOrdersSelectedTable(true)\r\n     \r\n   \r\n}\r\nconst createOrdersList = () => {\r\n    \r\n    let list = []\r\n    if(ordersSelected.length >0){\r\n        ordersSelected.forEach(order => list.push(order._id))\r\n    }\r\n   return list\r\n\r\n}\r\nconst updateClientBalance = () => {\r\n    if(clientSelected){\r\n        let cBalance = parseInt(clientSelected.balance)\r\n        let drcr = clientSelected.drcr\r\n       if(drcr){  //drcr = true => client has credit amount \r\n         \r\n         if(amount >= cBalance){ \r\n             cBalance = amount-cBalance\r\n             drcr = false \r\n            }\r\n         else if(amount < cBalance){\r\n              cBalance = cBalance-amount              \r\n              drcr = true\r\n         }\r\n    }\r\n    else{\r\n        cBalance = cBalance+amount\r\n    }\r\n     \r\n    updateClient(user._id,token,{...clientSelected,balance:cBalance,drcr})\r\n       .then(data => {\r\n          if(data.error){\r\n             window.alert(\"could not update client data\")\r\n          }\r\n          \r\n       })\r\n       .catch(err => {\r\n           window.alert('could not update client data')\r\n       })\r\n  }\r\n}\r\n\r\nconst onSaveInvoice = ()=> {   \r\n  \r\n    let oList =  createOrdersList()\r\n    \r\n\r\n    updateClientBalance()\r\n    ordersSelected.forEach(order => {   \r\n\r\n        \r\n        let newValues = {...order, isInvoiced : true,invoiceId : invoiceNumber ,invoiceDate : new Date()   }\r\n         \r\n        updateOrder(user._id,token,newValues)\r\n            .then(data => {\r\n                if(data.err){\r\n                    setMessage(\"Error during invoicing order\")\r\n                    setAlert(true)\r\n                    setTimeout(()=>setAlert(false),2000)\r\n                }\r\n                else{\r\n                       fetchOrders()\r\n                       \r\n                }\r\n            })\r\n            .catch(err => {\r\n                setMessage(\"Error during invoicing order \")\r\n                setAlert(true)\r\n                setTimeout(()=>setAlert(false),2000)\r\n            })\r\n            \r\n            })  \r\n         \r\n         console.log(\"NEW VALUES :\",{...values,ordersList:[...oList]})\r\n\r\n           createInvoice(user._id,token,{...values,ordersList:[...oList]})\r\n                .then(data => {\r\n                        if(data.err){\r\n                            window.alert(\"Error while generating invoice\")\r\n\r\n                            }\r\n                        else{\r\n                            //    fetchInvoices()\r\n                            setClientSelected(null)\r\n                            setMessage(\"Invoice generated\")\r\n                            setAlert(true)\r\n                            setTimeout(()=>setAlert(false),2000)\r\n                            setValues({\r\n\r\n                                invoiceNo:0,\r\n                                invoiceDate : new Date(),\r\n                                dueDate : new Date(),  \r\n                                taxOption : '',\r\n                                taxAmount : 0,\r\n                                amount :0,\r\n                                paid : 0,\r\n                                balance:0,\r\n\r\n                            })\r\n                        }\r\n                })\r\n                .catch(err => {\r\n                    window.alert(\"Error while generating invoice\")\r\n                }              \r\n\r\n                )     \r\n            \r\n\r\n}\r\n\r\n\r\nconst invoiceForm = () => {\r\n    return (\r\n        <div>\r\n            {alert && <div className = 'fs-4 text-red'>{message}</div>}\r\n        {clientSelected &&  \r\n                <div className = 'container-fluid fs-4'>\r\n             <div className = 'border border-dark my-3  '>\r\n               <h2>Create Invoice</h2>\r\n               <hr/>\r\n               <div className = 'd-flex flex-column p-2'>\r\n                           <div>Client : <b>{clientSelected.name}</b></div>\r\n                            <div className=\"row  my-2 \">\r\n                                <div className=\"col-4 \">\r\n                                    <div>Invoice#</div>\r\n                                   \r\n                                    <input type = 'text'\r\n                                            value = {invoiceNumber}\r\n                                            // onChange = {handleChange('invoiceNo')}\r\n                                            />\r\n                                </div>\r\n                                <div className=\"col-4 \">\r\n                                    <div>Invoice Date</div> \r\n                                        <input type = 'date' \r\n                                                value = {invoiceDate}\r\n                                                onChange = {handleChange('invoiceDate')}\r\n                                                />\r\n                                </div>\r\n                                <div className=\"col-4 \">\r\n                                    <div>Due Date</div>\r\n                                    <input type = 'date'\r\n                                           value = {paymentDueDate}\r\n                                           onChange = {handleChange('dueDate')}  \r\n                                                />\r\n                                </div>\r\n                            </div>\r\n                                <div className=\"row px-3\">\r\n                                    <div className = 'col-3'>\r\n                                        <label>Order Total</label>\r\n                                        <div>{amount}</div>\r\n                                    </div>\r\n                                    <div className = 'col-3'>\r\n                                        <div>Tax</div>\r\n                                        <select name=\"tax\" \r\n                                        style = {{minWidth : '100%'}}\r\n                                                value = {taxOption} \r\n                                                disabled\r\n                                                onChange = {handleChange('taxOption')}   \r\n                                                    >\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className = 'col-3'>\r\n                                        <div>Tax Amount</div>\r\n                                        <div>0</div>\r\n                                    </div>\r\n                                    <div className = 'col-3'>\r\n                                        <div>Invoice Amount</div>\r\n                                        <div>{amount}</div>\r\n                                    </div>\r\n                                </div>\r\n                  </div>\r\n                  </div>\r\n                  </div>   }\r\n        {!showOrderTable && clientSelected &&  <div className=\"container  d-inline-flex flex-row\">\r\n            <div className = 'container'>\r\n            <div className=\"btn btn-info mx-2 fs-4\" onClick = {()=> setClientSelected(null)}>Cancel</div>\r\n            {ordersSelected.length > 0 && <div className = 'btn btn-info mx-2 fs-4' \r\n                                               disabled = {ordersSelected.length>0}\r\n                                               onClick = {onSaveInvoice}>Save Invoice</div> }\r\n            <div className=\"btn btn-info mx-2 fs-4\" onClick = {onAddExistingOrders}>Add Existing Orders</div>\r\n            <div className=\"btn btn-info mx-2 fs-4\">Add New Order</div>\r\n            </div>\r\n        </div>}\r\n        {showOrderTable && clientSelected &&   clientOrders.length>0 &&                           \r\n                    <OrderInInvoiceForm rOrders = {clientOrders} onRowSelect = {handleAddToInvoiceRowSelect}/> }\r\n         {showOrderTable && clientSelected &&   clientOrders.length=== 0 &&\r\n                       <>\r\n                       <div className = 'fs-3 text-center'>No Orders from this client</div> \r\n                       <div className = 'btn btn-info fs-4 text-center' onClick = {()=>setClientSelected(null)} >Back</div>             \r\n                                      </>}\r\n\r\n        {showOrdersSelectedTable && ordersSelected.length>0 &&  <OrderActionTable  rOrders = {ordersSelected}                                                     \r\n                                                        onRowSelect = {handleRemoveFromInvoiceRowSelect} showAction = {true}/>}\r\n\r\n        {!clientSelected && <div className = ' text-center  '> \r\n                <span className = 'text-danger fs-4'><strong>Select Client to create New Order</strong></span>\r\n                            <ClientOrderTable  onClientSelection = {onClientSelect} />\r\n                        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nuseEffect(()=>{\r\n    setClientSelected(null)\r\n\r\n},[])\r\n  \r\n    return (\r\n        <div className = 'container-fluid'>          \r\n                      \r\n            { invoiceForm()}           \r\n  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewInvoice;","import React,{useContext} from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport tableIcons from '../../../icons/MaterialUiIcons'\r\nimport {  TablePagination, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport ClientContext  from '../../../context/ClientContext';\r\nimport OrderContext from '../../../context/OrderContext';\r\n\r\nimport '../../../css/orderDetail.css'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"blue\",\r\n      color: \"green\"\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"white\"\r\n    },\r\n    caption: {\r\n      color: \"black\",\r\n      fontSize: \"20px\"\r\n    },\r\n    selectIcon: {\r\n      color: \"blue\",\r\n      fontSize:'2rem'\r\n    },\r\n    select: {\r\n      color: \"blue\",\r\n      fontSize: \"2rem\"\r\n    },\r\n    actions: {\r\n      color: \"blue\"\r\n    }\r\n  });\r\n\r\n\r\n\r\nconst  ClientOrderListTable = ({clientOrderList}) => {\r\n     \r\n    const classes = useStyles()\r\n    const {clients,setClientSelected,onClientSelect} = useContext(ClientContext) \r\n    const {orders} = useContext(OrderContext)\r\n   \r\n  const findClient = id => {\r\n     let result =  clients.filter(client => client._id === id)\r\n     return result[0].name\r\n  }   \r\n  const findOrder = id =>{\r\n      let result = orders.filter(order => order._id === id)\r\n      return result[0]\r\n  }\r\nconst getProductString = products => {\r\n    let productsList = []\r\n    products.forEach(product => productsList.push(`${product.product} - ${product.units}`))\r\n    return productsList.join()     \r\n}\r\n\r\n  const columns = [\r\n      {title:'client',field:'client.name'},\r\n      {title:'job Total',field:'amount'},\r\n      {title :'Tax',field: ''},\r\n      {title : 'Pay Terms',field :'0'},\r\n      {title :'Amount',field:'amount'},\r\n      {title :'Due Date',field:'due',render : rowData =><div>{new Date(rowData.due).toDateString()}</div> },\r\n      \r\n      \r\n  ]\r\nconst orderDetail = rowData => {\r\n    let list = rowData.orderList\r\n     \r\n \r\n    return (\r\n        <table style ={{minWidth :'100%'}}>\r\n            {console.log(\"ORDER LIST IN DETAIL :\",list)}\r\n            <tr>\r\n                <td>Order#</td>\r\n                <td>Order Date</td>\r\n                <td>Patient</td>\r\n                <td>Products</td>\r\n                <td>Model#</td>\r\n                <td>Shipment#</td>\r\n                <td>Shipment Date</td>\r\n                <td>Order Amount</td>                \r\n            </tr>\r\n            \r\n                \r\n            {list.length > 0 && list.map(order => <tr key = {order._id}>\r\n                                                  <td>{order.orderNo}</td>\r\n                                                  <td>{new Date(order.orderDate).toDateString()}</td>\r\n                                                  <td>{order.patient}</td> \r\n                                                  <td>{getProductString(order.products)}</td> \r\n                                                  <td>{order.modelno}</td> \r\n                                                  <td>{order.shipment}</td> \r\n                                                  <td>{order.dueDate}</td> \r\n                                                  <td>{order.orderAmount}</td> \r\n                                                  </tr>\r\n            )}\r\n        \r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nreturn (\r\n    <div className = ' fs-4'>\r\n            {console.log(\"TABLE RECIEVED : \",clientOrderList)}\r\n            <MaterialTable\r\n                 columns = {columns}\r\n                 data = {clientOrderList}\r\n                 icons = {tableIcons}\r\n                 title = 'New Invoices'\r\n                 detailPanel ={[\r\n                    {\r\n                     icon: () => <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem'}}>Orders</div>}>\r\n                                       <InfoIcon sx = {{fontSize : 40}}/></Tooltip>,                           \r\n                     render: rowData => {\r\n                       return (\r\n                         <div\r\n                           style={{\r\n                             fontSize: 15,\r\n                             textAlign: 'left',\r\n                             color: '#000',\r\n                             backgroundColor: '#f0f0f0',\r\n                           }}\r\n                         >\r\n                          {orderDetail(rowData)}\r\n                         </div>\r\n                       )\r\n                    }\r\n                  },\r\n                ]}\r\n                 components = {{\r\n                    Toolbar : props => (\r\n                      <div style = {{padding:'10px 0px'}}>\r\n                        <MTableToolbar {...props} />\r\n                        <div>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    )\r\n                    ,\r\n                      Pagination:props => (\r\n                        \r\n                        (\r\n                          <TablePagination \r\n                          component = 'div'\r\n                          colSpan={props.colSpan}\r\n                          count={props.count}\r\n                          rowsPerPage={props.rowsPerPage}\r\n                          page={props.page}\r\n                          onChangePage={props.onChangePage}\r\n                          onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                          classes = {{\r\n                            root: classes.root,\r\n                            toolbar:classes.toolbar,\r\n                            caption:classes.caption,\r\n                            selectIcon:classes.selectIcon,\r\n                            select:classes.select,\r\n                            actions:classes.actions,                                                     \r\n                          }}\r\n                          />\r\n                        )\r\n                      )\r\n                    }}\r\n                   \r\n                    options={{\r\n                        filtering:false,\r\n                        pageSize:5,\r\n                        padding:'dense',\r\n                        actionsColumnIndex:-1,\r\n                        pageSizeOptions:[5,10,20,50,100],\r\n                        paginationType:'stepped',\r\n                        exportAllData : true,\r\n                        exportFileName:'orderdata',\r\n                        columnsButton:false ,                             \r\n                        rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\"}:null  ,\r\n                        showTextRowsSelected:false,\r\n                        headerStyle: {\r\n                         backgroundColor: '#01579b',\r\n                         color: '#FFF',\r\n                         fontSize:'1.5rem'\r\n                       },\r\n                      style:{\r\n                      fontSize : '1.5rem'\r\n                    } \r\n                    }}\r\n\r\n                 >\r\n\r\n            </MaterialTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClientOrderListTable;","import React,{useContext,useState,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport OrderContext from '../../../context/OrderContext';\r\nimport OrderInInvoiceForm from './OrderInInvoiceForm';\r\nimport ClientContext from '../../../context/ClientContext';\r\nimport ClientOrderListTable from './ClientOrderListTable';\r\nimport { createInvoice, getNextInvoiceSequence, updateOrder } from '../../../admin/clientApi';\r\nimport UserContext from '../../../context/UserContext';\r\n\r\n\r\nconst  GenerateInvoices = (props) =>  {\r\n\r\n    const history = useHistory()\r\n\r\n  const {user,token} = useContext(UserContext)   \r\n  const {orders,fetchOrders} = useContext(OrderContext)\r\n  const [newOrders,setNewOrders] = useState([])\r\n  const {clients,clientSelected,setClientSelected,onClientSelect} = useContext(ClientContext)  \r\n \r\n   const [clientOrderList,setClientOrderList] = useState(false)\r\n   const [finalList,setFinalList] = useState([])\r\n   const [message,setMessage] = useState('')\r\n   const [alert,setAlert] = useState(false)\r\n   const [invoiceNumber,setInvoiceNumber] = useState(null)\r\n   let currentInvoiceNumber =''\r\n   \r\n  const getUnivoicedOrders = ()=>{\r\n     if(orders.length>0){\r\n        \r\n        let newOrderSet =  orders.filter(order => order.isInvoiced === false)\r\n        \r\n         setNewOrders(newOrderSet)\r\n     }\r\n  }\r\n\r\n  const handleRowSelect = rowsSelected => {\r\n      console.log(\"Rows Selected in Generate Invoices :\",rowsSelected)\r\n      let clientList = []      \r\n      rowsSelected.forEach(order =>clientList.includes(order.clientId)?console.log(\"skip\") :clientList.push(order.clientId))\r\n       console.log(\"Unique Clients list :\",clientList)\r\n       let  orderList =[]\r\n       let temp = []\r\n       clientList.forEach(clientId => {\r\n\r\n           orderList =  rowsSelected.filter(order => order.clientId === clientId)\r\n        //    console.log(`Filtered Orders for clientId ${clientId}:`,orderList)\r\n        let tempClient = clients.filter(client => client._id === clientId)\r\n        let total =0;\r\n        let date = new Date()\r\n         orderList.forEach(order => total = total + order.orderAmount)\r\n        temp.push({client : tempClient[0],orderList : orderList,amount:total,due:date})\r\n     })\r\n     setFinalList(temp)\r\n      setClientOrderList(true)\r\n  }\r\n\r\n const generateInvoices = () =>{\r\n      if(finalList.length > 0){\r\n        finalList.forEach(client => {\r\n             \r\n            \r\n            // let oList = client.orderList\r\n            \r\n            // oList.forEach(order => {\r\n                // let newValues = {...order,isInvoiced:true, invoiceNumber : currentInvoiceNumber}\r\n                   \r\n        // updateOrder(user._id,token,newValues)\r\n        //         .then(data => {\r\n        //             if(data.err){\r\n        //                 setMessage(\"Error during invoicing order\")\r\n        //                 setAlert(true)\r\n        //                 setTimeout(()=>setAlert(false),2000)\r\n        //             }\r\n        //             else{\r\n        //                    fetchOrders()\r\n                           \r\n        //             }\r\n        //         })\r\n        //         .catch(err => {\r\n        //             setMessage(\"Error during invoicing order \")\r\n        //             setAlert(true)\r\n        //             setTimeout(()=>setAlert(false),2000)\r\n        //         })\r\n\r\n\r\n        //     })\r\n\r\n           let values = {\r\n               \r\n                        invoiceNo:invoiceNumber,\r\n                        invoiceDate : new Date(),\r\n                        dueDate : new Date(),  \r\n                        taxOption : 'GST',\r\n                        taxAmount : 0,\r\n                        amount :client.amount,\r\n                        paid : 0,\r\n                        client:client.client.name,\r\n                        clientId : client.client._id,\r\n                        balance:client.amount,\r\n                        ordersList:client.orderList\r\n                 }\r\n           console.log(`Values For Invoice Id ${invoiceNumber} & values are:`,values)      \r\n        //  createInvoice(user._id,token,values)\r\n        //          .then(data => {\r\n        //                  if(data.err){\r\n        //                      window.alert(\"Error while generating invoice\")\r\n \r\n        //                      }\r\n        //                  else{\r\n        //                      //    fetchInvoices()\r\n        //                      setClientSelected(null)\r\n        //                      setMessage(\"Invoice generated\")\r\n        //                      setAlert(true)\r\n        //                      setTimeout(()=>setAlert(false),2000)\r\n                            \r\n        //                  }\r\n        //          })\r\n        //          .catch(err => {\r\n        //              window.alert(\"Error while generating invoice\")\r\n        //          }              \r\n \r\n        //          )     \r\n\r\n        } )\r\n         \r\n      }\r\n } \r\n const convertToSequnceString = (num) => {\r\n\r\n    let newString = num.toString()\r\n  \r\n    let numlength = newString.length\r\n    if(numlength < 6 ){\r\n         for(let i=0; i< 6-numlength ;i++){\r\n             newString = \"0\"+newString;           \r\n         }\r\n    }\r\n    return newString\r\n \r\n }      \r\nconst getInvoiceCode = async () => {\r\n    await getNextInvoiceSequence()\r\n    .then(data => {          \r\n        \r\n     setInvoiceNumber(convertToSequnceString(data.sequence_val))  \r\n     currentInvoiceNumber = convertToSequnceString(data.sequence_val)  \r\n     console.log(\"Invoice Number Recieved is : \",currentInvoiceNumber)  \r\n    })\r\n    .catch(err => {\r\n        setMessage(\"Error in sequence\")\r\n        setAlert(true)\r\n        setTimeout(()=>setAlert(false),2000)\r\n    })\r\n}\r\n\r\n  useEffect(()=> {\r\n      getInvoiceCode()\r\n      getUnivoicedOrders()\r\n      setClientSelected(null)\r\n       setClientOrderList(false)\r\n  },[])\r\n\r\n    return (\r\n        <div>\r\n            {alert && <div className = 'fs-4 text-red'>{message}</div>}\r\n             {!clientOrderList && <OrderInInvoiceForm rOrders = {newOrders}  onRowSelect = {handleRowSelect} />}\r\n            {clientOrderList && <>\r\n                                  <ClientOrderListTable clientOrderList = {finalList}  />\r\n                                 <div className=\"d-flex flex-row my-2\">\r\n\r\n                                  <div className=\"btn btn-info fs-4 \"\r\n                                        onClick = {()=> generateInvoices()}         \r\n                                                 >Save Invoice</div>\r\n                                  <div className=\"btn btn-info mx-5 fs-4 \"\r\n                                       onClick = {()=>history.goBack()  }\r\n                                       >Cancel</div>\r\n\r\n                                 </div>\r\n                                 </>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenerateInvoices;","import React,{useEffect,useState} from 'react';\r\nimport InvoiceTable from './InvoiceTable';\r\nimport {getUnpaidInvoices} from '../../../admin/clientApi'\r\nimport InvoiceDetail from './InvoiceDetail';\r\n\r\n\r\nfunction AwaitPaymentInvoices(props) {\r\n  \r\n    const [invoices,setInvoices] = useState([])\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n    const [currentInvoice,setCurrentInvoice] = useState(null)\r\n    const [showDetail,setShowDetail] = useState(false)\r\n\r\n    const fetchUnpaidInvoices = async () => {\r\n        await  getUnpaidInvoices()\r\n               .then(data => {\r\n                   if(data.error){\r\n                      setMessage(\"Error fetching data\")\r\n                      setAlert(true)\r\n                      setTimeout(()=>setAlert(false),2000)\r\n                   }\r\n                   else {\r\n                       setInvoices(data)\r\n                       console.log(\"invoices recieved from DB:\",invoices)\r\n                   }\r\n               })\r\n               .catch(error =>{\r\n                     setMessage(\"Error fetching data\")\r\n                     setAlert(true)\r\n                     setTimeout(()=>setAlert(false),2000)\r\n               } \r\n                  )\r\n     }\r\n\r\nconst handleInvoiceSelect = invoice => {\r\n    setCurrentInvoice(invoice)\r\n    setShowDetail(true)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    fetchUnpaidInvoices() \r\n},[])\r\n\r\n\r\n    return (\r\n        <div>\r\n           {alert &&  <div className = 'text-red'><b>{message}</b></div>}                      \r\n\r\n            {!showDetail && <InvoiceTable invoices = {invoices} \r\n                                          onInvoiceSelect = {handleInvoiceSelect}\r\n                                          path = '/accounts/invoices'\r\n                                          />}\r\n            {showDetail && <InvoiceDetail invoice = {currentInvoice} path = '/accounts/invoices'/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AwaitPaymentInvoices;","import React,{useEffect,useState} from 'react';\r\nimport InvoiceTable from './InvoiceTable';\r\nimport {getPaidInvoices} from '../../../admin/clientApi'\r\nimport InvoiceDetail from './InvoiceDetail';\r\n\r\nconst PaidInvoice = (props) =>{\r\n    const [invoices,setInvoices] = useState([])\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n    const [currentInvoice,setCurrentInvoice] = useState(null)\r\n    const [showDetail,setShowDetail] = useState(false)\r\n\r\nconst fetchPaidInvoices = async () => {\r\n        await  getPaidInvoices()\r\n               .then(data => {\r\n                   if(data.error){\r\n                      setMessage(\"Error fetching data\")\r\n                      setAlert(true)\r\n                      setTimeout(()=>setAlert(false),2000)\r\n                   }\r\n                   else {\r\n                       setInvoices(data)\r\n                       console.log(\"invoices recieved from DB:\",data)\r\n                   }\r\n               })\r\n               .catch(error =>{\r\n                     setMessage(\"Error fetching data\")\r\n                     setAlert(true)\r\n                     setTimeout(()=>setAlert(false),2000)\r\n               } \r\n                  )\r\n     }\r\n\r\nconst handleInvoiceSelect = invoice => {\r\n    setCurrentInvoice(invoice)\r\n    setShowDetail(true)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    fetchPaidInvoices() \r\n   \r\n},[])\r\n\r\n\r\n    return (\r\n        <div>\r\n           {alert &&  <div className = 'text-red'><b>{message}</b></div>}                      \r\n\r\n            {!showDetail && <InvoiceTable invoices = {invoices} \r\n                                          onInvoiceSelect = {handleInvoiceSelect}\r\n                                          path = '/accounts/invoices'\r\n                                          />}\r\n            {showDetail && <InvoiceDetail invoice = {currentInvoice} path = '/accounts/invoices'/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaidInvoice;","import React,{useEffect,useState} from 'react';\r\nimport InvoiceTable from './InvoiceTable';\r\nimport {getCancelledInvoices} from '../../../admin/clientApi'\r\nimport InvoiceDetail from './InvoiceDetail';\r\n\r\n\r\nconst CancelledInvoice =(props) => {\r\n    const [invoices,setInvoices] = useState([])\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n    const [currentInvoice,setCurrentInvoice] = useState(null)\r\n    const [showDetail,setShowDetail] = useState(false)\r\n\r\n    const fetchCancelledInvoices = async () => {\r\n        await  getCancelledInvoices()\r\n               .then(data => {\r\n                   if(data.error){\r\n                      setMessage(\"Error fetching data\")\r\n                      setAlert(true)\r\n                      setTimeout(()=>setAlert(false),2000)\r\n                   }\r\n                   else {\r\n                       setInvoices(data)\r\n                    \r\n                   }\r\n               })\r\n               .catch(error =>{\r\n                     setMessage(\"Error fetching data\")\r\n                     setAlert(true)\r\n                     setTimeout(()=>setAlert(false),2000)\r\n               } \r\n                  )\r\n     }\r\n\r\nconst handleInvoiceSelect = invoice => {\r\n    setCurrentInvoice(invoice)\r\n    setShowDetail(true)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    fetchCancelledInvoices() \r\n},[])\r\n\r\n\r\n    return (\r\n        <div>\r\n           {alert &&  <div className = 'text-red'><b>{message}</b></div>}                      \r\n\r\n            {!showDetail && <InvoiceTable invoices = {invoices} \r\n                                          onInvoiceSelect = {handleInvoiceSelect}\r\n                                          path = '/accounts/invoices'\r\n                                          />}\r\n            {showDetail && <InvoiceDetail invoice = {currentInvoice} path = '/accounts/invoices'/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CancelledInvoice;","import React,{useContext,useState,useEffect} from 'react';\r\n\r\nimport Menu from '../../menu'\r\nimport ClientContext from '../../../context/ClientContext';\r\n\r\nimport SubMenuAccounts from '../SubMenuAccounts';\r\nimport NewInvoice from './NewInvoice';\r\nimport GenerateInvoices from './GenerateInvoices';\r\nimport AwaitPaymentInvoices from './AwaitPaymentInvoices';\r\nimport PaidInvoice from './PaidInvoice';\r\nimport CancelledInvoice from './CancelledInvoice';\r\n\r\n\r\nconst Invoice = (props) =>  {\r\n  \r\nconst {setClientSelected} = useContext(ClientContext)  \r\n\r\n\r\nconst [currentTab,setCurrentTab] = useState(1)\r\n\r\n\r\n\r\nconst invoiceSubMenu = ()=>{\r\n    return(\r\n        <div className = 'container-fluid d-flex flex-column  justify-content-end'>\r\n                    <div className=\"btn btn-info text-white fs-4 my-3 \" \r\n                         style ={currentTab ===1? {backgroundColor:'#0b8df7'} : null} \r\n                         onClick = {()=>{  setCurrentTab(1)\r\n\r\n                    }} >+New Invoice</div>\r\n                    <div className=\"btn btn-info text-white fs-4 my-3 \" \r\n                         style ={currentTab ===2? {backgroundColor:'#0b8df7'} : null} \r\n                         onClick = {() => { setCurrentTab(2)\r\n                    }}>\r\n                        Generate Invoices\r\n                    </div>\r\n                    <div className=\"btn btn-info text-white fs-4 my-3 \" \r\n                         style ={currentTab ===3? {backgroundColor:'#0b8df7'} : null}                         \r\n                         onClick = {() => { setCurrentTab(3)\r\n                    }}>\r\n                        Awaiting Payments\r\n                    </div>\r\n                    <div className=\"btn btn-info text-white fs-4 my-3 \" \r\n                         style ={currentTab ===4? {backgroundColor:'#0b8df7'} : null} \r\n                         onClick = {() => { setCurrentTab(4)  \r\n                    }}>\r\n                        Paid Invoices\r\n                    </div>\r\n                    <div className=\"btn btn-info text-white fs-4 my-3 \" \r\n                         style ={currentTab ===5? {backgroundColor:'#0b8df7'} : null} \r\n                         onClick = {() => { setCurrentTab(5)\r\n                    }}>\r\n                        Cancelled Invoices\r\n                    </div>\r\n        </div> \r\n        \r\n    \r\n    )\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    setClientSelected(null)\r\n    \r\n\r\n},[])\r\n  \r\n    return (\r\n        <div className = ''>\r\n            <Menu />\r\n            <SubMenuAccounts/> \r\n            <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-2\">\r\n                        {invoiceSubMenu()}          \r\n         \r\n                        </div>\r\n                       \r\n                        <div className=\"col-12 col-md-10\">\r\n                        {currentTab === 1 && <NewInvoice />}\r\n                        {currentTab === 2 && <GenerateInvoices />}\r\n                        {currentTab === 3 && <AwaitPaymentInvoices  />}\r\n                        {currentTab === 4 && <PaidInvoice />}\r\n                        {currentTab === 5 && <CancelledInvoice />}\r\n                        </div>\r\n\r\n                        </div>       \r\n                </div>  \r\n            \r\n            \r\n  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Invoice;","import React from 'react';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport {Tooltip } from '@material-ui/core';\r\nimport {addToPrintReceipt} from '../../print/printAPI'\r\n\r\n\r\nconst ReceiptPrintIcon = ({receipt}) => {\r\n\r\n            \r\n    return (\r\n        <div>\r\n             <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Print Receipt</div>}>                              \r\n                                                <PrintIcon sx={{fontSize : 30}}  onClick = {()=>{                                                    \r\n                                                   addToPrintReceipt(receipt) \r\n                                                }}/>\r\n                                         \r\n                                            </Tooltip>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReceiptPrintIcon;","import React,{useContext, useEffect, useState} from 'react';\r\nimport  {Link,useHistory} from 'react-router-dom'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport tableIcons from '../../../icons/MaterialUiIcons'\r\nimport {  TablePagination, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport UserContext from '../../../context/UserContext';\r\nimport ClientContext  from '../../../context/ClientContext';\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\nimport {getFormatDate} from '../../DateAPI/index'\r\nimport ReceiptContext from '../../../context/ReceiptContext';\r\nimport ReceiptPrintIcon from '../../print/Receipt/ReceiptPrintIcon';\r\nimport {getClients} from '../../../admin/clientApi'\r\n\r\n\r\nimport Popover from '@mui/material/Popover';\r\nimport InvoiceListTable from './InvoiceListTable';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"blue\",\r\n      color: \"green\"\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"white\"\r\n    },\r\n    caption: {\r\n      color: \"black\",\r\n      fontSize: \"20px\"\r\n    },\r\n    selectIcon: {\r\n      color: \"blue\",\r\n      fontSize:'2rem'\r\n    },\r\n    select: {\r\n      color: \"blue\",\r\n      fontSize: \"2rem\"\r\n    },\r\n    actions: {\r\n      color: \"blue\"\r\n    }\r\n  });\r\n\r\n\r\nconst ReceiptTable = ({receipts,onReceiptSelect,path}) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const {setClientSelected} = useContext(ClientContext)\r\n    const [clients,setClients] = useState([])\r\n    const {user,token} = useContext(UserContext)  \r\n    const {setReceiptSelected} = useContext(ReceiptContext)\r\n    \r\n    const [searchString,setSearchString] = useState('')\r\n    const [anchorEl,setAnchorEl] = useState(null)\r\n     const open = Boolean(anchorEl)\r\n     const id = open ? 'simple-popover' : undefined;\r\n     const [values,setValues] = useState({\r\n      error :'',\r\n      loading:false\r\n  })\r\n  \r\n  const {error,loading} = values\r\n\r\n\r\nconst findClientSelected = (id) => {\r\n        let newClient = clients.filter(client => client._id === id)\r\n          \r\n     console.log(\"CLient Selected :\",newClient)\r\n     return newClient[0]\r\n}\r\nconst fetchClients =  async () => {\r\n  setValues({error : '',loading : true});\r\nawait  getClients(user._id,token)\r\n    .then(data => {\r\n        if(data.error){\r\n        setValues({error : \"Error fetching data\",loading : false})       \r\n        window.alert(\"Failed to Connect to database \")\r\n        }\r\n        else {\r\n            setClients(data)\r\n            setValues({error : '',loading : false})\r\n        }\r\n    })\r\n    .catch(err => {       \r\n                        setValues({error : err,loading: false})\r\n                        window.alert(\"Failed to Connect to database \")\r\n                      \r\n                        })\r\n\r\n} \r\nconst handleSearch = e =>{\r\n   \r\n    setSearchString(e.target.value)\r\n }\r\n const handleClick = event => {\r\n     setAnchorEl(event.currentTarget)\r\n }\r\n const handleClose = () => {\r\n   setAnchorEl(null)\r\n }\r\nconst InvoiceDetail =(receiptData) => {\r\n   return (\r\n     <InvoiceListTable receiptData = {receiptData} onClose = {handleClose} />\r\n   )\r\n}\r\n\r\n\r\n\r\nconst columns = [\r\n    {title :'Receipt#',field : 'receiptNo',maxWidth : '7rem',\r\n               render : rowData => <Link to ='/payment'\r\n                                         style = {{textDecoration:'none'}}\r\n                                         onClick = {()=> {\r\n                                          \r\n                                           setReceiptSelected(rowData)\r\n                                           setClientSelected(rowData.client)\r\n                                         }}\r\n                                          >{rowData.receiptNo}</Link>\r\n               },\r\n    {title :'Receipt Date',field : 'paymentDate',maxWidth : '12rem',\r\n               render : rowData => <div>{getFormatDate(rowData.paymentDate)}</div>},\r\n    {title :'Client',field : 'client',minWidth:'10rem',\r\n                render : rowData => <Link to = '/client/clientprofile' \r\n                                          style = {{textDecoration : 'none'}} \r\n                                          className = 'fs-4'\r\n                                          onClick = {()=> {\r\n                                          setClientSelected(rowData.client)\r\n                                        }}\r\n                                        >{rowData.client.name.toUpperCase()}</Link>\r\n               \r\n             },\r\n    {title :'Amount',field : 'amount',maxWidth:'10rem',\r\n                            render :  rowData =><div> <div  className = ' btn fs-4 text-primary'\r\n                                                       onClick = {handleClick}\r\n                                                       >{rowData.amount}</div>\r\n                                                         <Popover open = {open}\r\n                                                                 id = {id}\r\n                                                                 anchorEl = {anchorEl}\r\n                                                                 onClose = {handleClose}\r\n                                                                anchorOrigin = {{\r\n                                                                  verticle :'top',\r\n                                                                  horizontal :'left'\r\n                                                                }}\r\n                                                            >{InvoiceDetail(rowData)}\r\n                                                        </Popover>\r\n                                                        </div> \r\n                          },\r\n    {title :'Applied',field : 'amount',maxWidth:'10rem'},\r\n    {title :'Actions',field : '',maxWidth :'10px' ,render : rowData => <Link target={\"_blank\"} \r\n                                                    style = {{color:'#000'}}\r\n                                                    to = {`/print/receipt/${rowData._id}`}\r\n                                                    onClick={()=>console.log(\"receipt Data to print\",rowData)}\r\n                                                    >\r\n                                                     <ReceiptPrintIcon receipt = {rowData} /></Link>},\r\n  {title :'',field : '', maxWidth :'10px', render : rowData => <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>sms</div>}>\r\n                                                            <PhoneAndroidIcon sx={{fontSize : 30}} /></Tooltip>},\r\n   {title :'',field : '', maxWidth :'10px', render : rowData => <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>WhatsApp</div>}>\r\n   <WhatsAppIcon sx={{fontSize : 30}} /></Tooltip>},    \r\n   {title :'',field : '', maxWidth :'10px', render : rowData => <Link to ='/payment'\r\n                                                                      style = {{textDecoration:'none', color : '#000'}}\r\n                                                                      onClick = {()=> {\r\n                                                                        setReceiptSelected(rowData)\r\n                                                                        setClientSelected(rowData.client)\r\n                                                                      }}>\r\n                <Tooltip title = {<div style = {{ fontSize : '1.4rem', padding:'0.5rem' }}>Edit</div>}>\r\n                                                        <EditIcon sx={{fontSize : 30}} /></Tooltip></Link>},                                                     \r\n   \r\n]\r\n\r\n\r\nuseEffect(()=>{\r\n  fetchClients()\r\n  setClientSelected(null)\r\n  setReceiptSelected(null)\r\n},[])\r\n\r\n  return (\r\n      <div className = 'container-fluid'>\r\n            {loading && <div className='fs-3 text-center text-secondary'>Loading...</div>}\r\n\r\n         {(receipts.length > 0) && \r\n           <MaterialTable\r\n                columns ={columns}\r\n                data = {receipts}\r\n                icons = {tableIcons}\r\n                title = 'RECEIPTS'\r\n               \r\n                components = {{\r\n                    Toolbar : props => (\r\n                      <div style = {{padding:'10px 0px'}}>\r\n                        <MTableToolbar {...props} />\r\n                        <div>\r\n                          <select name = 'search'\r\n                                  className = 'fs-4 px-3 mx-3'\r\n                                  onChange = {handleSearch} \r\n                                   >\r\n                            <option value = ''>Last 1 week</option>\r\n                            <option value = ''></option>\r\n                            <option value = ''></option>\r\n                            <option value = ''></option>\r\n                            <option value = ''></option>\r\n                            <option value = ''></option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                    ,\r\n                      Pagination:props => (\r\n                        \r\n                        (\r\n                          <TablePagination \r\n                          component = 'div'\r\n                          colSpan={props.colSpan}\r\n                          count={props.count}\r\n                          rowsPerPage={props.rowsPerPage}\r\n                          page={props.page}\r\n                          onChangePage={props.onChangePage}\r\n                          onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                          classes = {{\r\n                            root: classes.root,\r\n                            toolbar:classes.toolbar,\r\n                            caption:classes.caption,\r\n                            selectIcon:classes.selectIcon,\r\n                            select:classes.select,\r\n                            actions:classes.actions,                                                     \r\n                          }}\r\n                          />\r\n                        )\r\n                      )\r\n                    }}\r\n            \r\n               options={{\r\n                 filtering:true,\r\n                 pageSize:25,\r\n                 padding:'dense',\r\n                 actionsColumnIndex:-1,\r\n                 pageSizeOptions:[10,20,50,100],\r\n                 paginationType:'stepped',\r\n                 exportAllData : true,\r\n                 exportFileName:'orderdata',\r\n                 columnsButton:true,                             \r\n                 rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\"}:null  ,\r\n                 showTextRowsSelected:false,\r\n                 headerStyle: {\r\n                  backgroundColor: '#01579b',\r\n                  color: '#FFF',\r\n                  fontSize:'1.5rem'\r\n                },\r\n               style:{\r\n               fontSize : '1.5rem'\r\n             } ,\r\n             cellStyle :{fontSize:'1.6rem'}\r\n             }}\r\n                >\r\n\r\n           </MaterialTable>         \r\n         }\r\n        {receipts.length === 0 && <div className = 'text-center'> \r\n                    <div className = 'fs-3 text-center'>No Receipts found </div>\r\n                    </div>\r\n                    }\r\n\r\n      </div>\r\n  )\r\n\r\n}\r\nexport default ReceiptTable","import React,{useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport ReceiptTable from './ReceiptTable';\r\nimport Menu from '../../../components/menu'\r\nimport {getAllReceipts} from '../../../admin/clientApi'\r\n// import ReceiptContext from '../../../context/ReceiptContext';\r\nimport SubMenuAccounts from '../SubMenuAccounts';\r\n\r\nconst  Receipt = (props)=> {\r\n  \r\n//    const {setReceiptSelected,receiptSelecteds} = useContext(ReceiptContext) \r\n   \r\n   const [currentTab,setCurrentTab] = useState(1)\r\n   \r\n   const [receiptsCancelled,setReceiptsCancelled] = useState([])\r\n   const [allReceipts,setAllReceipts] = useState([])\r\n   const [receipts,setReceipts] = useState([])\r\n   const [values,setValues] = useState({\r\n    error :'',\r\n    loading:false\r\n})\r\n\r\nconst {error,loading} = values\r\n\r\nconst handleReceiptSelect = () => {\r\n\r\n}\r\nconst findAllReceipts = ()=>{\r\n    if(receipts.length>0){\r\n        let data = receipts.filter(receipt => receipt.cancelled === false)\r\n        setAllReceipts(data)\r\n    }\r\n   \r\n}\r\n\r\nconst findCancelledReceipts = () => {\r\n   let data = receipts.filter(receipt => receipt.cancelled === true)  \r\n   setReceiptsCancelled(data) \r\n}\r\nconst fetchReceipts = async () => {\r\n    setValues({error : '',loading:true})\r\n\r\n    await getAllReceipts()\r\n    .then(data => {\r\n        if(data.error){\r\n            setValues({error : data.error,loading:false})\r\n\r\n        }\r\n        else {\r\n            // console.log(\"RECEIPTS IN ROUTE :\",data)\r\n            setReceipts(data)\r\n            setValues({error : '',loading:false})\r\n            findAllReceipts()\r\n            findCancelledReceipts()\r\n             \r\n        }\r\n    })\r\n    .catch(error =>{\r\n        setValues({error : error,loading:false})\r\n\r\n    } \r\n       )\r\n}\r\n\r\nuseEffect(()=>{\r\n    (async () => {\r\n        setValues({loading:true})\r\n        \r\n     const receipt =  await getAllReceipts()\r\n     setReceipts(receipt)\r\n     findAllReceipts()\r\n     findCancelledReceipts()\r\n     setValues({loading:false})\r\n    })()\r\n  \r\n},[receipts])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Menu/>\r\n            <SubMenuAccounts  />\r\n            {loading && <div className='fs-3 text-center text-secondary'>Loading...</div>}\r\n            \r\n            <div className = 'container-fluid'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-2\">\r\n                        <div className = 'd-flex  flex-column my-3'> \r\n                        <Link className = 'btn btn-info fs-4 '                              \r\n                            to = '/payment'       \r\n                                >+New Receipt</Link>\r\n                        <div className = 'btn btn-info fs-4 my-1'\r\n                             style ={currentTab===1? {backgroundColor : \"#0b8df7\"}:null}\r\n                            onClick = {()=>setCurrentTab(1)} \r\n                            >Payments</div>        \r\n                        <div className = 'btn btn-info fs-4 my-1'\r\n                             style ={currentTab===2? {backgroundColor : \"#0b8df7\"}:null}\r\n                            onClick = {()=>setCurrentTab(2)} \r\n                            >Cancelled Payments</div>       \r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-10\">\r\n                       {currentTab ===1 &&   <ReceiptTable receipts = {allReceipts} \r\n                                        onReceiptSelect = {handleReceiptSelect} \r\n                                        path = '/accounts/receipt' />   }\r\n                         {currentTab ===2 &&   <ReceiptTable receipts = {receiptsCancelled} \r\n                                        onReceiptSelect = {handleReceiptSelect} \r\n                                        path = '/accounts/receipt' />   }\r\n                                                                            \r\n                        </div> \r\n               </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Receipt;","import React,{useContext, useEffect, useState} from 'react';\r\n\r\nimport MaterialTable  from 'material-table';\r\nimport tableIcons from '../../../icons/MaterialUiIcons'\r\nimport {  TablePagination } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CancelPresentationIcon from '@mui/icons-material/CancelPresentation';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport MoneyIcon from '@mui/icons-material/Money';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\n\r\nimport UserContext from '../../../context/UserContext'\r\nimport AdjustmentContext from '../../../context/AdjustmentContext'\r\n\r\n\r\nimport {getFormatDate} from '../../DateAPI/index'\r\n\r\nimport Modal from '../../../components/Modal'\r\nimport {deleteAdjustment, updateInvoice,getAllAdjustments} from '../../../admin/clientApi'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"blue\",\r\n      color: \"green\"\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"white\"\r\n    },\r\n    caption: {\r\n      color: \"black\",\r\n      fontSize: \"20px\"\r\n    },\r\n    selectIcon: {\r\n      color: \"blue\",\r\n      fontSize:'2rem'\r\n    },\r\n    select: {\r\n      color: \"blue\",\r\n      fontSize: \"2rem\"\r\n    },\r\n    actions: {\r\n      color: \"blue\"\r\n    }\r\n  });\r\n\r\n\r\nconst AdjustmentTable = (props) => {\r\n\r\n    const classes = useStyles();\r\n   \r\n    // const {adjustments,fetchAdjustments} = useContext(AdjustmentContext)\r\n    const {user,token} = useContext(UserContext)\r\n    const [adjustmentSelected,setAdjustmentSelected] = useState(null)\r\n   const [adjustments,setAdjustments] = useState([])\r\n   const [values,setValues] = useState({\r\n    error :'',\r\n    loading:false\r\n})\r\nconst {error,loading} = values\r\n  \r\n  \r\n  const  fetchAdjustments = async () => {\r\n    setValues({error : '',loading:true})\r\n\r\n    await getAllAdjustments()\r\n    .then(data => {\r\n        if(data.error){\r\n          setValues({error : data.error,loading:false})\r\n\r\n        }\r\n        else {\r\n            // console.log(\"ADJUSTMENTS IN ROUTE :\",data)\r\n            setAdjustments(data)\r\n            setValues({error : '',loading:false})\r\n\r\n        }\r\n    })\r\n    .catch(error =>{\r\n      setValues({error : error,loading:false})\r\n\r\n    } \r\n       )\r\n}\r\n\r\nconst onDeleteAdjustment = rowData => {\r\n\r\n    let invoice = {...rowData.invoice}\r\n    invoice.balance = parseInt(invoice.balance)+ parseInt(rowData.amount)\r\n    invoice.adjustmentNo = ''\r\n    invoice.discount = 0\r\n    updateInvoice(user._id,token,invoice)\r\n        .then(data => {\r\n            if(data.error){\r\n                window.alert(\"Could not update the Invoice\")\r\n            }\r\n        })\r\n        .catch(err=> {\r\n            window.alert(\"Could not update the Invoice\")\r\n                })\r\n\r\n    deleteAdjustment(user._id,token,rowData)\r\n    .then(data => {\r\n        if(data.error){\r\n            window.alert(\"Could not delete the Adjustment\")\r\n        }\r\n    })\r\n    .catch(err=> {\r\n     window.alert(\"Could not delete the Adjustment\")\r\n\r\n    })\r\n    setAdjustmentSelected(null)\r\n    fetchAdjustments()\r\n\r\n}\r\n\r\nconst showDetail = () => {\r\n\r\n\r\n     const rowData  = {...adjustmentSelected}\r\n\r\n\r\n    return(\r\n        <div className = 'fs-4'>\r\n            \r\n\r\n        <Modal title = 'Credit ADjustment '>\r\n           <div>Against Invoice# :<b> {rowData.invoice.invoiceNo}</b></div>\r\n              <div>Client :<b>{(rowData.client.name).toUpperCase()}</b> </div>\r\n              <div className = 'd-flex flex-row align-items-center'>\r\n                  <div>\r\n                      <div>Amount</div>\r\n                      <input  value = {rowData.amount}/>\r\n                  </div>\r\n                  <div className = 'mx-4'>\r\n                      <div >Adjustment Date</div>\r\n                      <div className = 'border border-dark'>{getFormatDate(rowData.adjDate)}</div>\r\n                  </div>\r\n              </div>\r\n              <div>\r\n                  <div>Reference #</div>\r\n                  <input value = {rowData.adjNo}/>\r\n              </div>\r\n              <div>\r\n                  <div>Adjustment Type</div>\r\n                  <div>{rowData.adjType}</div>\r\n              </div>\r\n              <div>\r\n                  <div>Notes : {rowData.notes}</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"btn btn-info fs-4\"\r\n                      onClick = {() => {\r\n                          let reply = window.confirm(\"This will delete the credit adjustment permenantly , Are you sure?\")\r\n                          if(reply){\r\n                               onDeleteAdjustment(rowData)\r\n                          }\r\n                      }}\r\n                      >Delete Adjustment</div>\r\n                <div className=\"btn btn-info mx-4 fs-4\" \r\n                        onClick = {() => {\r\n                            setAdjustmentSelected(null)\r\n                        }}>Cancel</div>\r\n            </div>\r\n        </Modal>\r\n        \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n const columns = [\r\n     {title : 'Adj#', field : 'adjNo',render: rowData => <div className = 'text-primary' \r\n                                                               style = {{cursor : 'pointer'}}   \r\n                                                                onClick = {()=>{\r\n                                                                                 setAdjustmentSelected(rowData)                 \r\n                                                                                \r\n                                                                                }}>{rowData.adjNo}</div>},\r\n     {title : 'Adj.Date', field : 'adjDate',render : rowData => <div>{getFormatDate(rowData.adjDate)}</div>},\r\n     {title : 'Client', field : 'client.name'},\r\n     {title : 'Amount', field : 'amount'},\r\n     {title : 'Adjustment Type', field : 'adjType'},\r\n     {title : 'Applied To', field : 'invoice.invoiceNo',\r\n                 render : rowData => <div>invoice  {rowData.invoice.invoiceNo}</div>},\r\n    \r\n ]\r\n\r\nuseEffect(()=>{\r\n  fetchAdjustments()\r\n},[])\r\n\r\n\r\n    return (\r\n        <div className = 'container-fluid'>\r\n            {loading && <div className='fs-3 text-center text-secondary'>Loading...</div>}\r\n\r\n            {adjustmentSelected && showDetail()}\r\n        {adjustments.length>0 && \r\n               <MaterialTable columns = {columns}\r\n                              data = {adjustments}\r\n                              icons = {tableIcons}\r\n                              title = 'CREDIT ADJUSTMENTS'\r\n                              components = {{                               \r\n                                  Pagination:props => (\r\n                                    \r\n                                    (\r\n                                      <TablePagination \r\n                                      component = 'div'\r\n                                      colSpan={props.colSpan}\r\n                                      count={props.count}\r\n                                      rowsPerPage={props.rowsPerPage}\r\n                                      page={props.page}\r\n                                      onChangePage={props.onChangePage}\r\n                                      onChangeRowsPerPage = {props.onChangeRowsPerPage}\r\n                                      classes = {{\r\n                                        root: classes.root,\r\n                                        toolbar:classes.toolbar,\r\n                                        caption:classes.caption,\r\n                                        selectIcon:classes.selectIcon,\r\n                                        select:classes.select,\r\n                                        actions:classes.actions,                                                     \r\n                                      }}\r\n                                      />\r\n                                    )\r\n                                  )\r\n                                }}\r\n                        \r\n                           options={{\r\n                             filtering:true,\r\n                             pageSize:25,\r\n                             padding:'dense',\r\n                             actionsColumnIndex:-1,\r\n                             pageSizeOptions:[10,20,50,100],\r\n                             paginationType:'stepped',\r\n                             exportAllData : true,\r\n                             exportFileName:'orderdata',                                                        \r\n                             rowStyle :(data,index)=> index%2==0?{background:\"#f2f2f2\"}:null  ,\r\n                             showTextRowsSelected:false,\r\n                             headerStyle: {\r\n                              backgroundColor: '#01579b',\r\n                              color: '#FFF',\r\n                              fontSize:'1.5rem',\r\n                              zIndex : 2,\r\n                            },\r\n                           style:{\r\n                           fontSize : '1.5rem'\r\n                         } ,\r\n                         cellStyle : {\r\n                             fontSize : '1.6rem'\r\n                         }\r\n                         }}                          \r\n                          >\r\n\r\n               </MaterialTable>\r\n               }  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdjustmentTable;","import React,{useEffect, useState,useContext} from 'react';\r\nimport {getNextAdjustmentSequence, updateClient,updateInvoice,createAdjustment} from '../../../admin/clientApi'\r\nimport ClientContext from '../../../context/ClientContext'\r\nimport InvoiceContext from '../../../context/InvoiceContext'\r\nimport UserContext from '../../../context/UserContext'\r\nimport Popover from '@mui/material/Popover';\r\nimport {getOrders,getClients,getInvoices} from '../../../admin/clientApi'\r\n\r\n\r\nconst  NewAdjustment = ({ onAdjustmentCancel}) =>  {\r\n\r\n \r\n  const {setClientSelected,clientSelected} = useContext(ClientContext)\r\n  const {user,token} = useContext(UserContext)\r\n//   const {invoices} = useContext(InvoiceContext)\r\n  const [currentInvoices,setCurrentInvoices] = useState([])\r\n  const [invoiceSelected,setInvoiceSelected] = useState(null)\r\n  const [clients,setClients] = useState([])\r\n  const [invoices,setInvoices] = useState([])\r\n  const [adjustmentNumber,setAdjustmentNumber] = useState()\r\n  const [message,setMessage]  = useState('')\r\n  const [alert,setAlert] = useState(false)\r\n  const [anchorEl,setAnchorEl] = useState(null)\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const [values,setValues] = useState({\r\n     amount:0,\r\n     adjDate:new Date(),\r\n     adjNo:'',\r\n     adjType:'Discount',\r\n     notes:'', \r\n     client:'',\r\n     invoice : '',\r\n          \r\n  })\r\n  const [datafetching,setDatafetching] = useState({\r\n      error:'',\r\n      loading:false\r\n  })\r\n\r\nconst {error,loading} = datafetching\r\n\r\nconst handleChange = name =>event =>{\r\n       \r\n    setValues({...values,[name]:event.target.value})\r\n    console.log(`${name} : ${event.target.value}`)\r\n}\r\n\r\nconst updateSelectedInvoice = ()=>{\r\n      \r\n    let invBalance = parseInt(invoiceSelected.balance)-parseInt(amount)\r\n\r\n    let newInvoice = {...invoiceSelected,adjustmentNo:adjustmentNumber, balance : invBalance,discount : amount}\r\n    console.log(\"Invoice values after update :\",newInvoice)\r\n     \r\n    updateInvoice(user._id,token,newInvoice)\r\n         .then(data => {\r\n             if(data.error){\r\n                window.alert(\"Error while saving Invoice Data\")\r\n\r\n             }\r\n         })\r\n         .catch(err => {\r\n             window.alert(\"Error while saving Invoice Data\")\r\n         })\r\n\r\n}\r\n\r\nconst updateClientBalance = () => {\r\n    \r\n    let newClient = {...clientSelected}\r\n    newClient.balance -= amount \r\n\r\n    console.log(\"Client Values after update : \",newClient)\r\n    updateClient(user._id,token,newClient)\r\n       .then(data => {\r\n           if(data.error){\r\n\r\n            window.alert(\"error while saving Client data\")\r\n\r\n           }\r\n       })\r\n       .catch(err => {\r\n           window.alert(\"error while saving Client data\")\r\n       })\r\n}\r\nconst handleSave = () => {\r\n    \r\n    let newValues = {...values,adjNo:adjustmentNumber,invoice:invoiceSelected._id,client : clientSelected._id}   \r\n    console.log(\"New Values Adjustment to save \",newValues)\r\n    createAdjustment(user._id,token,newValues)\r\n          .then(data => {\r\n              if(data.error){\r\n                window.alert(\"Error Saving new Adjustment\")\r\n              }\r\n          })\r\n          .catch(err => {\r\n              window.alert(\"Error Saving new Adjustment\")\r\n          })\r\n//     ///save changes adjustment and blance changed in perticular invoice\r\n//     // save adjustment documnet with current clientSelected && invoiceNo\r\n    updateSelectedInvoice()\r\n    updateClientBalance()\r\n    setClientSelected(null)\r\n   onAdjustmentCancel()\r\n    \r\n}\r\n\r\nconst {amount,adjDate,adjNo,adjType,notes} = values\r\n\r\nconst handleClientSelect = event => {\r\n    let val = event.target.value\r\n    let selectedClient = clients.filter(client => client._id === val)\r\n    console.log(\"Client Selected id : \",selectedClient[0])\r\n    findInvoicesForThisClient(val)\r\n    setClientSelected(selectedClient[0])\r\n}\r\nconst findInvoicesForThisClient = (id) => {\r\n   console.log(\"Invoices Rceived :\",invoices)\r\n   let clientInvoices =  invoices.filter(invoice => invoice.clientId === id && invoice.balance > 0 && invoice.cancelled === false)\r\n   console.log(\"Invoices for  client:\",clientInvoices)\r\n   setCurrentInvoices(clientInvoices)\r\n}\r\nconst handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n}  \r\nconst showInvoices = () => {\r\n  \r\n    return (\r\n      <>\r\n        <div className ='w-100 fs-4 border border-dark rounded ' >\r\n                <div className = 'bg-info d-flex justify-content-between align-items-center p-3'>\r\n                   <div><b>Payment Applied</b></div>\r\n                   <div className = 'btn fs-3' \r\n                        onClick = {() => handleClose()} \r\n                         ><b>X</b></div>\r\n                </div>\r\n               \r\n               {currentInvoices.length > 0 && <div className = 'w-100'>\r\n                   <table className = 'table'>\r\n                     <tr>\r\n                         <th className = 'th'></th> \r\n                         <th className = 'th'>Invoice#</th>\r\n                         <th className = 'th'>Invoice Date</th>\r\n                         <th className = 'th'>Invoice Amount</th>\r\n                         <th className = 'th'>Paid</th>\r\n                         </tr>  \r\n                  { currentInvoices.map((invoice,index) => <tr  style = {{cursor:'pointer'}}\r\n                                                                          onClick = {()=>{\r\n                                                                          setInvoiceSelected(invoice)\r\n                                                                          handleClose()\r\n                                                                          }}>\r\n                             <td className = 'td'>{index+1}</td>\r\n                             <td className = 'td'>{invoice.invoiceNo}</td>\r\n                             <td className = 'td'>{new Date(invoice.invoiceDate).toDateString()}</td>\r\n                             <td className = 'td'>{invoice.amount}</td>\r\n                             <td className = 'td'>{invoice.paid}</td>\r\n                       </tr> )}\r\n                            \r\n                   </table>\r\n                   </div>}\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nconst convertToSequnceString = (num) => {\r\n\r\n    let newString = num.toString()\r\n  \r\n    let numlength = newString.length\r\n    if(numlength < 6 ){\r\n         for(let i=0; i< 6-numlength ;i++){\r\n             newString = \"0\"+newString;           \r\n         }\r\n    }\r\n    return newString\r\n \r\n } \r\nconst getAdjustmentCode = async () => {\r\n    await getNextAdjustmentSequence()\r\n        .then(data => {           \r\n            setAdjustmentNumber(convertToSequnceString(data.sequence_val))  \r\n            // console.log(\"Adjustment Number :\",data.sequence_val)\r\n        })\r\n        .catch(err => {\r\n            setMessage(\"Error in sequence\")\r\n            setAlert(true)\r\n            setTimeout(()=>setAlert(false),2000)\r\n        })\r\n}\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n    (async ()=> {\r\n        \r\n        setValues({loading:true})\r\n        const client  = await getClients(user._id,token)         \r\n        const invoice = await getInvoices(user._id,token)    \r\n        setClients(client)         \r\n        setInvoices(invoice)       \r\n        setDatafetching({loading:false})      \r\n        \r\n        getAdjustmentCode()\r\n        setValues({...values,adjNo:adjustmentNumber})\r\n    })()\r\n},[adjustmentNumber])\r\n\r\n\r\n    return (\r\n        <div >\r\n              {loading && <div className='fs-3 text-center text-secondary'>Loading...</div>}\r\n            \r\n         {!clientSelected &&  <div className = 'my-5'>\r\n            <select className = 'fs-4'\r\n                    style = {{width : '60%'}}\r\n                    onChange = {handleClientSelect}\r\n                     >\r\n            <option className = 'mx-3'>Selecte Client for Credit Adjustment</option>\r\n        {clients.map(client => <option className = 'mx-3' value = {client._id}>{client.name}</option>)}\r\n            </select>\r\n            </div>}\r\n            {clientSelected && <h3><b>Client : {clientSelected.name}</b></h3>}\r\n         {currentInvoices.length > 0  && \r\n            <div className =  ' container  my-5 border border-dark'\r\n                 style = {{maxWidth :'fit-content', marginLeft : 0}}\r\n                 >\r\n                \r\n               <div>\r\n            \r\n            {invoiceSelected &&  \r\n                    <div className=\"d-flex\">\r\n                        <div>\r\n                            <div className=\"fs-4\">Invoice#</div>\r\n                            <div className=\"fs-4\">{invoiceSelected.invoiceNo}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"fs-4\">Total Amount</div>\r\n                            <div className=\"fs-4\">{invoiceSelected.amount}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"fs-4\">Other Adjs</div>\r\n                            <div className=\"fs-4\">{invoiceSelected.paid}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"fs-4\">Balance#</div>\r\n                            <div className=\"fs-4\">{invoiceSelected.balance}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"fs-4\">Date</div>\r\n                            <div className=\"fs-4\">{invoiceSelected.invoiceDate}</div>\r\n                        </div>\r\n                    </div>}\r\n            { clientSelected &&  currentInvoices.length > 0 && <> <div className=\"btn btn-info fs-4 mx-2\"\r\n                                        onClick = {handleClick} \r\n                                    >{invoiceSelected?'Change Invoice':'+Select'}</div>\r\n                                    <Popover open = {open}\r\n                                    id = {id}\r\n                                    anchorEl = {anchorEl}\r\n                                    onClose = {handleClose}\r\n                                    anchorOrigin = {{\r\n                                        verticle :'top',\r\n                                        horizontal :'left'\r\n                                    }}\r\n                                    >{showInvoices()}\r\n                                </Popover>\r\n           </> }\r\n                </div>\r\n               \r\n\r\n                <div className = 'container my-5 border border-dark'\r\n                    style = {{width : 'fit-content',marginLeft : 0}}  \r\n                        >\r\n                <h2><b>Apply Credit Adjustment to Invoice</b></h2>\r\n                {alert && <div className = 'fs-4 text-red'>{message}</div>}\r\n\r\n                    <div className = 'd-flex flex-column flex-md-row   fs-4 '>\r\n                        <div>\r\n                                <div>Amount</div>\r\n                                <input type = 'number'\r\n                                    value = {amount}\r\n                                    onChange = {handleChange('amount')}\r\n                                    />                       \r\n                        </div>  \r\n                        <div className = 'mx-4'>\r\n                                <div>Adjustment Date</div>\r\n                                <input  type = 'date'\r\n                                        value = {adjDate}\r\n                                        onChange = {handleChange('adjDate')}   \r\n                                        />\r\n                        </div>\r\n                        <div>\r\n                            <div>Reference#</div>\r\n                            <input   type ='text'\r\n                                    value = {adjNo}\r\n                                    /> \r\n                            </div> \r\n                        </div> \r\n                    \r\n                            <div className = 'fs-4'>\r\n                                <div>Adjustment Type</div>\r\n                            <select type = 'text'\r\n                                    value = {adjType} \r\n                                    onChange = {handleChange('adjType')}  \r\n                                    >\r\n                                <option value = 'Discount' >Discount</option>\r\n                                <option value = 'Early Payment Discount' >Early Payment Discount</option>\r\n                                <option value = 'Sales Return' >Sales Return</option>\r\n                                <option value = 'Write Off' >Write Off</option>\r\n                                \r\n                                </select>                      \r\n                            </div>\r\n                            <div className = 'fs-4'>\r\n                                <div>Notes</div>\r\n                                <input  type = 'text'\r\n                                        value = {notes}\r\n                                        onChange = {handleChange('notes')}\r\n                                        />\r\n                            </div>\r\n                            <hr/>\r\n                            <div className = 'd-flex flex-row justify-content-end my-2' >\r\n                               {amount > 0 && invoiceSelected &&   <div className = 'btn btn-info  fs-4 mx-5'\r\n                                    onClick ={handleSave}\r\n                                    >Save Adjustment</div>}\r\n                                <div className=\"btn btn-info fs-4 \"\r\n                                      onClick = {onAdjustmentCancel}   \r\n                                         >Cancel</div>\r\n                            </div>\r\n                </div>\r\n           </div>\r\n            }\r\n            {currentInvoices.length === 0 && clientSelected && <div className = 'fs-4'>No Invoices for this client \r\n                                               <span className=\"btn btn-info fs-4 mx-5\"\r\n                                                    onClick = {onAdjustmentCancel} \r\n                                                     >Back</span></div>\r\n                                              }\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default NewAdjustment;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Menu from '../../../components/menu'\r\nimport SubMenuAccounts from '../SubMenuAccounts';\r\nimport AdjustmentTable from './AdjustmentTable';\r\nimport NewAdjustment from './NewAdjustment'\r\n\r\nimport ClientContext from '../../../context/ClientContext'\r\n\r\n\r\nconst  Adjustment = (props) => {\r\n\r\n    const {setClientSelected} = useContext(ClientContext) \r\n    const  [currentTab,setCurrentTab] = useState(0)\r\n     \r\n const adjustmentTabs = () => {\r\n\r\n\r\n     return(\r\n         <div className = 'd-flex flex-column'>\r\n             <div className = 'btn btn-info fs-4 my-2'\r\n                  style = {currentTab === 1?  {backgroundColor: \"#0b8df7\"}:null}\r\n                  onClick = {()=>setCurrentTab(1)}\r\n                  >+New Adjustment</div>           \r\n             <div className = 'btn btn-info fs-4 my-2'\r\n                  style = {currentTab === 2?  {backgroundColor: \"#0b8df7\"}:null}\r\n                  onClick = {()=>setCurrentTab(2)}                  \r\n                  >Debit Adjustment</div>\r\n         </div>\r\n     )\r\n }\r\n\r\nconst handleAdustmentCancel = () => {\r\n  \r\n    setCurrentTab(0)\r\n    setClientSelected(null)\r\n}\r\n\r\n\r\n useEffect(()=>{\r\n     setClientSelected(null)\r\n     \r\n },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Menu/>\r\n            <SubMenuAccounts/>\r\n            <div className = 'container'>\r\n                  <div className=\"row\">\r\n                      <div className=\"col-12 col-md-2\"  >\r\n                         {adjustmentTabs()}\r\n                      </div>\r\n                      <div className=\"col-12 col-md-10\">\r\n                          {currentTab === 0 && <AdjustmentTable  /> }\r\n                          {currentTab === 1 && <NewAdjustment onAdjustmentCancel = {handleAdustmentCancel} />}\r\n                          \r\n                      </div>\r\n                       \r\n                  </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Adjustment;","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image } from '@react-pdf/renderer';\r\nimport logo from  '../../../images/logo-print.jpg'\r\n \r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        height:150,\r\n        flexDirection:'row',          \r\n        maxHeight:'120px',   \r\n        fontWeight:'light',\r\n        fontSize:12,\r\n        margin: '10 2',\r\n        justifyContent:'space-between'    \r\n    },\r\n    leftSection:{\r\n       \r\n       width:'70%',\r\n       flexDirection:'row',\r\n       justifyContent:'flex-start'  ,\r\n       overflow:'wrap',\r\n    \r\n    },\r\n    rigthSection:{\r\n        width:'30%',\r\n        justifyContent:'flex-start',\r\n        textAlign :'right',\r\n        fontSize:14,\r\n        paddingTop:10,\r\n    },\r\n    imageContainer:{\r\n        width:'10%'   \r\n\r\n    },\r\n    image : {\r\n    height:'60%'   \r\n        \r\n    },\r\n    title:{\r\n     paddingTop:5,\r\n     fontSize :20,\r\n     fontWeigth:900,\r\n    },\r\n    textStyle : {\r\n     fontSize:14,     \r\n     paddingRight:100,\r\n     fontWeight:300,\r\n    },\r\n\r\n});\r\n\r\nconst ReceiptHeader = ({client}) => {\r\n    let title = ''\r\n    let address = ''\r\n    let email = ''\r\n    let phone = ''\r\n    let web = ''\r\n\r\n\r\nif(client.company===1){\r\n        title = 'Evoq Digital Dental Solutions'\r\n        address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n        email ='evoqdds@gmail.com'\r\n        phone = '079-48910770'   \r\n        web = 'evoqdds.com'   \r\n\r\n }\r\n else if(client.company === 2){\r\n        title = 'Evoq Digital Dental Solutions2'\r\n        address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n        email ='evoqdds@gmail.com2'\r\n        phone = '079-48910770'\r\n        web = 'evoqdds.com2'   \r\n\r\n }\r\n else if(client.company === 3){\r\n        title = 'Evoq Digital Dental Solutions3'\r\n        address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n        email ='evoqdds@gmail.com3'\r\n        phone = '079-48910770'   \r\n        web = 'evoqdds.com3'   \r\n \r\n    }\r\n else {\r\n      title = 'Evoq Digital Dental Solutions'\r\n      address = '804,Venus Atlantis Corporate Park, 100Ft. Rd, Nr. Shell Petrol Pump, Prahaladnagar Ahmedabad-380054'\r\n      email ='evoqdds@gmail.com'\r\n      phone = '079-48910770'  \r\n      web = 'evoqdds.com'   \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <View  style = {styles.container}>\r\n                    <View style = {styles.leftSection}>\r\n                              <Image style = {styles.image} src = {logo} />   \r\n                            <View style={{paddingLeft : 10}}>                \r\n                            <Text style = {styles.title}>{title}</Text>\r\n                            <Text style = {styles.textStyle}  >{address}</Text>\r\n                            </View>\r\n                       \r\n                     </View>\r\n                     <View style={styles.rigthSection}>\r\n                         <Text>Phone :  (O){phone}</Text>\r\n                         <Text>email : {email}</Text>\r\n                         <Text>web : {web}</Text>\r\n                     </View> \r\n                 </View>   \r\n    );\r\n}\r\n\r\nexport default ReceiptHeader;","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet,Image } from '@react-pdf/renderer';\r\nimport {getFormatDate} from '../../../components/DateAPI'\r\nimport { ToWords } from 'to-words'\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    body:{\r\n        fontSize:12,\r\n        fontWeight:'medium',\r\n        \r\n    },\r\n    date:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        marginVertical : 10\r\n    },\r\n    bold:{\r\n        fontSize:14,\r\n        fontWeight :900,\r\n    },\r\n    amnt : {\r\n        fontSize :15,\r\n        fontWeight : 1000,\r\n        padding:5,\r\n              \r\n    }\r\n});\r\n\r\n\r\nconst ReceiptBody = ({receipt}) => {\r\n\r\n\r\n   const client = `${receipt.client.salutation} ${receipt.client.name}`\r\n   const toWords = new ToWords({\r\n    localeCode: 'en-IN',\r\n    converterOptions: {\r\n      currency: false,\r\n      ignoreDecimal: false,\r\n      ignoreZeroCurrency: false,\r\n      doNotAddOnly: false,\r\n    }\r\n  });\r\n  let words = toWords.convert(receipt.amount) \r\n  \r\n  \r\n   let rDate = getFormatDate(new Date())\r\n    return (\r\n        <View style = {styles.body}>\r\n              <Text style = {[styles.bold,{marginVertical:10}]}>{client}</Text>\r\n          <View style = {styles.date}>\r\n                <View style = {{flexDirection :'row'}} >\r\n                        <Text style = {styles.bold}>Date </Text>\r\n                        <Text>{rDate}</Text>\r\n                        \r\n                </View>\r\n                        <Text style = {styles.bold}>Doc #.{receipt.receiptNo}</Text>\r\n            </View>  \r\n            <View>\r\n                <Text>Received with thanks from  {client} a sum of {words} by {receipt.paymentMode}{' '}\r\n                      towards professional charges.   </Text>\r\n            </View>\r\n            <View style = {{border:'1px solid #000', maxWidth:150,marginVertical : 10 }}>\r\n                <Text style = {styles.amnt} >Rs.{receipt.amount}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default ReceiptBody;","import React from 'react';\r\nimport img  from  '../../../images/logo-print.jpg'\r\nimport { Page, Text, View, Document, StyleSheet,Image } from '@react-pdf/renderer';\r\nimport ReceiptHeader from './ReceiptHeader';\r\nimport ReceiptBody from './ReceiptBody';\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n      flexDirection: 'row',\r\n      backgroundColor: '#fff',\r\n      color : '#000',\r\n       \r\n    },\r\n    section: {\r\n      margin: 7,\r\n      padding: 10,\r\n      flexGrow: 1\r\n    },\r\n    heading1:{\r\n        textAlign :'center',\r\n        fontSize : '14px',\r\n        fontWeight : 'heavy'\r\n    },  \r\n    fontStyle:{\r\n        font:'Times New Roman',\r\n        fontWeight:'bold',\r\n    }, \r\n    image : {\r\n        width : '10%',\r\n    }\r\n  });\r\n\r\n\r\n\r\nconst ReceiptTemplate = ({receipt}) =>{\r\n    return (\r\n        <Document>\r\n            <Page size = 'A4' style = {styles.Page}>\r\n                  <View style = {styles.section}>\r\n                        <ReceiptHeader client = {receipt.client} />\r\n                        <Text style = {styles.heading1}>Receipt</Text>\r\n                        <ReceiptBody receipt = {receipt}  />   \r\n                  </View>\r\n            </Page>\r\n        </Document>\r\n    );\r\n}\r\n\r\nexport default ReceiptTemplate;","import React,{useEffect,useState}  from 'react';\r\nimport {PDFViewer ,StyleSheet } from '@react-pdf/renderer'\r\nimport {getToPrintReceipt} from '../printAPI'\r\nimport ReceiptTemplate from './ReceiptTemplate';\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n      flexDirection: 'row',\r\n      backgroundColor: '#E4E4E4',\r\n      width : '100%',\r\n      height: '100vh',\r\n    },\r\n    section: {\r\n      margin: 10,\r\n      padding: 10,\r\n      flexGrow: 1\r\n    }\r\n  });\r\n\r\nconst ReceiptComponentToPrint = (props) =>{\r\n\r\n    const [receipt,setReceipt] = useState(null)\r\n\r\n\r\n    useEffect(()=>{\r\n          let newReceipt = getToPrintReceipt()\r\n          if(newReceipt){\r\n            setReceipt(newReceipt)\r\n          }\r\n    },[]) \r\n       \r\n\r\n\r\n    return (\r\n        <PDFViewer style = {styles.page} >             \r\n        {receipt &&  <ReceiptTemplate receipt = {receipt} />}\r\n     </PDFViewer>\r\n    );\r\n}\r\n\r\nexport default ReceiptComponentToPrint;","import React,{useState,useEffect} from 'react';\r\nimport { Redirect,useHistory } from 'react-router-dom';\r\nimport {setNewPassword} from './index'\r\n\r\nconst ResetPassword = (props) => {\r\n     const  history = useHistory() \r\n     const [values,setValues] = useState({\r\n           npswd : '',\r\n           cpswd : ''\r\n     })\r\n     const [alert,setAlert] = useState(false)\r\n     const [message,setMessage] = useState('') \r\n\r\n const {npswd,cpswd} = values\r\nconst handleChange = name => event => {\r\n    let val = event.target.value\r\n    setValues({...values,[name]:val.trim()})\r\n    console.log(`${name} : ${val}`)\r\n}\r\nuseEffect(()=> {\r\n\r\n},[])\r\n\r\nconst validate = () => {\r\n    if(npswd.length>0 || cpswd.length >0){\r\n        let result = npswd.localeCompare(cpswd) \r\n        if(result === 0) return true\r\n        else {\r\n            window.alert(\"Both the password should match\")\r\n            return false\r\n        }\r\n    }\r\n    else if(npswd.length === 0 ){\r\n        window.alert(\"Please enter password\")\r\n        return false\r\n    }\r\n    else if(cpswd.length === 0){\r\n        window.alert(\"Please confirm password\")\r\n        return false\r\n    }\r\n\r\n}\r\n\r\nconst resetPassword = (e) => {\r\n    const {id,token} = props.match.params\r\n    e.preventDefault()\r\n    if(validate()){\r\n        setNewPassword(id,token,values)\r\n       .then(data => {\r\n           if(data === 400)\r\n           window.alert(\"Invalid Link\")\r\n           else if(data === 200)\r\n           window.alert(\"Password Updated successfully please Login\")\r\n           let origin = window.parent.origin\r\n           window.location.replace(origin)\r\n\r\n        \r\n        }\r\n        \r\n        )\r\n       .catch(err => {\r\n           console.log(\"Error in reser Password\",err)\r\n        })\r\n    }\r\n}\r\nuseEffect(()=>{\r\n    \r\n},[])\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n            \r\n            <div className=\"container-signin\">\r\n            <div className='fs-4 fw-bold text-dark text-center'>Create New Password</div>\r\n                \r\n                <div className=\"fs-4 \">\r\n                    <div className='text-dark'>New Password</div>\r\n                    <input className='w-100' type = 'password' onChange={handleChange('npswd')}/>\r\n                </div>\r\n                <div className=\"fs-4 w-100\">\r\n                    <div className='text-dark'>Confirm Password</div>\r\n                    <input  className='w-100' type = 'password' onChange={handleChange('cpswd')} />\r\n                </div>\r\n                <input type = 'submit' \r\n                       className=\"btn btn-info fs-4 w-100 my-2\" \r\n                       onClick = {e => resetPassword(e)}/> \r\n            </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","import React,{useState,useEffect} from 'react'\r\nimport {BrowserRouter,Switch,Route,Redirect} from 'react-router-dom'\r\nimport Signin from './admin/Signin'\r\nimport Signup from './admin/Signup'\r\nimport Home from './core/Home'\r\nimport AdminRoute  from './auth/adminRoutes'\r\nimport Order from './core/Order'\r\nimport Client from './core/Client'\r\nimport Settings from './core/Settings'\r\n\r\n\r\nimport ForgotPassword from './auth/ForgotPassword'\r\n\r\n\r\nimport { isAuthenticated } from './auth';\r\nimport  {getClients, getOrders,getProducts, \r\n         getInvoices,getAllReceipts,\r\n         getAllAdjustments,getAllStaff} from './admin/clientApi'\r\n\r\nimport ClientContext from './context/ClientContext'\r\nimport UserContext  from './context/UserContext'\r\nimport OrderContext from './context/OrderContext'\r\nimport ProductContext from './context/ProductContext'\r\nimport InvoiceContext from './context/InvoiceContext'\r\nimport ReceiptContext from './context/ReceiptContext'\r\n\r\n\r\nimport NewOrderForm from './components/NewOrderForm'\r\nimport OrderTable from './components/OrderTable'\r\nimport OfficeContext from './context/OfficeContext'\r\nimport CompanyContext from './context/CompanyContext'\r\nimport NewClientForm from './components/Client/NewClientForm'\r\nimport Products from './core/Products'\r\nimport ProductForm from './components/Products/ProductForm'\r\nimport Shipment from './core/Shipment'\r\nimport Accounts from './core/Accounts'\r\n\r\nimport OrderPerClientTable from './components/Client/OrderPerClientTable'\r\nimport ClientProfilePage from './components/Client/ClientProfilePage'\r\nimport Payment from './components/Accounts/Payment'\r\nimport Invoice from './components/Accounts/Invoice/Invoice'\r\nimport Receipt from './components/Accounts/Receipt/Receipt'\r\nimport Adjustment from './components/Accounts/Adjustment/Adjustment'\r\nimport AdjustmentContext from './context/AdjustmentContext'\r\n\r\n\r\nimport ComponentToPrint from './components/print/ComponentToPrint'\r\nimport ReceiptComponentToPrint from './components/print/Receipt/ReceiptComponentToPrint'\r\nimport ResetPassword from './auth/ResetPassword'\r\n\r\n\r\nfunction Routes() {\r\n\r\n\r\n    const {user,token} = isAuthenticated()\r\n\r\n   \r\n    const [clients,setClients] = useState([])\r\n    const [orders,setOrders] = useState([])\r\n    const [products,setProducts] = useState([])\r\n    const [invoices,setInvoices] = useState([])\r\n    const [receipts,setReceipts] = useState([])\r\n    \r\n    const [staff,setStaff] = useState([])\r\n    const [adjustments,setAdjustments] = useState([])\r\n    const [redirect , setRedirect] = useState(false)\r\n    const [currentCompany,setCurrentCompany] = useState('1')\r\n    const [pathRedirect,setPathRedirect] = useState(null)\r\n   \r\n    const [clientSelected,setClientSelected] = useState(null)  \r\n    const [orderSelected,setOrderSelected] = useState(null)\r\n    const [invoiceSelected,setInvoiceSelected] = useState(null)\r\n    const [receiptSelected,setReceiptSelected] = useState(null)\r\n    const [message,setMessage] = useState('')\r\n    const [alert,setAlert] = useState(false)\r\n\r\n\r\nconst fetchClients =  async () => {\r\n\r\n                await  getClients(user._id,token)\r\n                    .then(data => {\r\n                        if(data.error){\r\n                        setMessage(\"Error fetching data\")\r\n                        setAlert(true)\r\n                        setTimeout(()=>setAlert(false),2000)\r\n                        window.alert(\"Failed to Connect to database \")\r\n                        }\r\n                        else {\r\n                            setClients(data)\r\n                        }\r\n                    })\r\n                    .catch(err => { \r\n                                        setMessage(\"Error fetching data\")\r\n                                        setAlert(true)\r\n                                        setTimeout(()=>setAlert(false),2000)\r\n                                        })\r\n       \r\n        \r\n        \r\n    }    \r\nconst fetchOrders = async ()=> {\r\n   \r\n\r\n                     await getOrders(user._id,token)\r\n                            .then(data => {\r\n                                if(data.error){\r\n                                setMessage(\"Error fetching data\")\r\n                                setAlert(true)\r\n                                setTimeout(()=>setAlert(false),2000)\r\n                                }\r\n                                else {\r\n                                    setOrders(data)\r\n                                    // console.log(\"ORDERS RECEIVED IN ROUTES :\",data)\r\n                                }\r\n                            })\r\n                            .catch(err => { \r\n                                                setMessage(\"Error fetching data\")\r\n                                                setAlert(true)\r\n                                                setTimeout(()=>setAlert(false),2000)\r\n                                                })\r\n        // setOrders(orderData)\r\n       \r\n    }\r\nconst fetchProducts = async () => {     \r\n\r\n                 await getProducts(user._id,token)\r\n                                .then(data => {\r\n                                    if(data.error){\r\n                                    setMessage(\"Error fetching data\")\r\n                                    setAlert(true)\r\n                                    setTimeout(()=>setAlert(false),2000)\r\n                                    }\r\n                                    else {\r\n                                        setProducts(data)\r\n                                    }\r\n                                })\r\n                                .catch(err => { \r\n                                                    setMessage(\"Error fetching data\")\r\n                                                    setAlert(true)\r\n                                                    setTimeout(()=>setAlert(false),2000)\r\n                                                    })\r\n    \r\n    \r\n   }\r\nconst fetchInvoices = async () => {\r\n    await  getInvoices()\r\n           .then(data => {\r\n               if(data.error){\r\n                  setMessage(\"Error fetching data\")\r\n\r\n                  setAlert(true)\r\n                  setTimeout(()=>setAlert(false),2000)\r\n               }\r\n               else {\r\n                //    console.log(\"Invoices generated in Route :\",data)\r\n                   setInvoices(data)\r\n               }\r\n           })\r\n           .catch(error =>{\r\n                 setMessage(\"Error fetching data\")\r\n                 setAlert(true)\r\n                 setTimeout(()=>setAlert(false),2000)\r\n           } \r\n              )\r\n }\r\nconst fetchReceipts = async () => {\r\n    await getAllReceipts()\r\n    .then(data => {\r\n        if(data.error){\r\n           setMessage(\"Error fetching data\")\r\n           setAlert(true)\r\n           setTimeout(()=>setAlert(false),2000)\r\n        }\r\n        else {\r\n            // console.log(\"RECEIPTS IN ROUTE :\",data)\r\n            setReceipts(data)\r\n        }\r\n    })\r\n    .catch(error =>{\r\n          setMessage(\"Error fetching data\")\r\n          setAlert(true)\r\n          setTimeout(()=>setAlert(false),2000)\r\n    } \r\n       )\r\n}\r\nconst  fetchAdjustments = async () => {\r\n    await getAllAdjustments()\r\n    .then(data => {\r\n        if(data.error){\r\n           setMessage(\"Error fetching data\")\r\n           setAlert(true)\r\n           setTimeout(()=>setAlert(false),2000)\r\n        }\r\n        else {\r\n            // console.log(\"ADJUSTMENTS IN ROUTE :\",data)\r\n            setAdjustments(data)\r\n        }\r\n    })\r\n    .catch(error =>{\r\n          setMessage(\"Error fetching data\")\r\n          setAlert(true)\r\n          setTimeout(()=>setAlert(false),2000)\r\n    } \r\n       )\r\n}\r\nconst fetchStaff = async () => {\r\n    await getAllStaff()\r\n    .then(data => {\r\n        if(data.error){\r\n           setMessage(\"Error fetching data\")\r\n           setAlert(true)\r\n           setTimeout(()=>setAlert(false),2000)\r\n        }\r\n        else {\r\n            \r\n            setStaff(data)\r\n        }\r\n    })\r\n    .catch(error =>{\r\n          setMessage(\"Error fetching data\")\r\n          setAlert(true)\r\n          setTimeout(()=>setAlert(false),2000)\r\n    } \r\n       )\r\n}\r\nconst onClientSelect = (client) => { \r\n      setClientSelected(client)   \r\n      setRedirect(true)\r\n   }\r\nconst onOrderSelect = (order) => {\r\n    setOrderSelected(order)\r\n    setRedirect(true)\r\n}   \r\nconst updateDB = () => {\r\n    if(user){\r\n        fetchClients() \r\n        fetchProducts()\r\n        fetchOrders()\r\n        fetchInvoices()\r\n        fetchReceipts()\r\n        fetchAdjustments() \r\n        fetchStaff()\r\n    }\r\n}\r\n    \r\nuseEffect(()=>{\r\n    // updateDB()\r\n    // setInterval(updateDB,120000)\r\n},[])\r\n\r\n\r\nuseEffect(()=> {\r\n    performRedirect()\r\n    // console.log(\"This is route refresh\")\r\n},[redirect])\r\n\r\n\r\n\r\n\r\n\r\nconst   performRedirect = () => {\r\n   \r\n    if(redirect)\r\n    {\r\n           \r\n          if(pathRedirect )\r\n           return <Redirect to = {pathRedirect} />;\r\n           setRedirect(false)\r\n        }\r\n           \r\n}\r\n\r\n\r\n\r\n    return (   \r\n\r\n            <div>\r\n                {/* {error && <h3 className = 'text-danger'>{error}</h3>} */}\r\n                {alert && <div className = 'text-red fs-3'>{message}</div>}\r\n         <BrowserRouter basename=\"/labease\">\r\n                  <Switch>\r\n\r\n                      {/* <Route path = '/client' exact component = {Client}/> */}\r\n                      <Route path = '/signup'  exact  component = {Signup}/>\r\n                      <Route path = '/signin' exact component = {Signin}/>\r\n                      <Route path  = '/reset-pswd' exact component = {ForgotPassword}/>\r\n                      <Route path  = '/reset-pswd/:id/:token' exact component = {ResetPassword}/>\r\n     \r\n     \r\n                      \r\n                      {/* <AdminRoute path = '/' exact  component = {Base}/> */}\r\n                <OfficeContext.Provider value = {staff}>      \r\n                 <UserContext.Provider value = {{user,token}}>\r\n                 <ClientContext.Provider value = {{clients,fetchClients,setClients,onClientSelect,clientSelected,\r\n                                                    redirect,setRedirect,setClientSelected,setPathRedirect}}>\r\n                 <OrderContext.Provider value = {{orders,fetchOrders,onOrderSelect,setOrderSelected,orderSelected}}>\r\n                 <ProductContext.Provider value = {{products,fetchProducts}}> \r\n                 <CompanyContext.Provider value = {{currentCompany,setCurrentCompany}}>\r\n                 <InvoiceContext.Provider value = {{invoices,invoiceSelected,setInvoiceSelected,fetchInvoices,setPathRedirect,setRedirect}} >\r\n                    <ReceiptContext.Provider value = {{receipts,receiptSelected,setReceiptSelected,fetchReceipts}}>\r\n                     <AdjustmentContext.Provider value = {{adjustments}}>\r\n                      {performRedirect()}  \r\n                      <AdminRoute path = '/' exact  component = {Home}/>\r\n                    \r\n                      <AdminRoute path = '/client' exact component = {Client }/>\r\n                      <AdminRoute path = '/client/newclient' exact   component = {NewClientForm }/>\r\n                      <AdminRoute path = '/client/orders' exact   component = {OrderPerClientTable }/>\r\n                      <AdminRoute path = '/client/clientprofile' exact   component = {ClientProfilePage}/>\r\n\r\n                      \r\n                    \r\n                      <AdminRoute path = '/order' exact component = {Order}/>\r\n                      <AdminRoute path = '/ordertable' exact component = {OrderTable}/>\r\n                      <AdminRoute path = '/order/neworder' exact component = {NewOrderForm}/>\r\n  \r\n                      <AdminRoute path = '/products' exact component = {Products}/>\r\n                      <AdminRoute path = '/products/newproduct' exact component = {ProductForm}/>\r\n\r\n                      <AdminRoute  path = '/payment' exact component = {Payment}/>\r\n                \r\n\r\n\r\n                      <AdminRoute  path = '/shipment' exact component = {Shipment}/>\r\n\r\n                      <AdminRoute  path = '/accounts' exact component = {Accounts}/>\r\n                      <AdminRoute  path = '/accounts/invoices' exact component = {Invoice}/>\r\n                      <AdminRoute  path = '/accounts/collections' exact component = {Accounts}/>\r\n                      <AdminRoute  path = '/accounts/adjustments' exact component = {Adjustment}/>\r\n                      <AdminRoute  path = '/accounts/manage' exact component = {Accounts}/>\r\n                      <AdminRoute  path = '/accounts/receipt' exact component = {Receipt}/>\r\n                      \r\n                      <AdminRoute  path = '/settings' exact component = {Settings}/>\r\n                      \r\n                      <AdminRoute  path = '/print/invoice/:id' exact component =  {ComponentToPrint}/>\r\n                      <AdminRoute  path = '/print/receipt/:id' exact component = {ReceiptComponentToPrint}/>\r\n                      \r\n                         </AdjustmentContext.Provider>\r\n                      </ReceiptContext.Provider>\r\n                         </InvoiceContext.Provider>\r\n                        </CompanyContext.Provider>\r\n                      </ProductContext.Provider>\r\n                  </OrderContext.Provider>\r\n                </ClientContext.Provider>\r\n               </UserContext.Provider>\r\n               </OfficeContext.Provider>\r\n                  </Switch>\r\n          \r\n         </BrowserRouter>\r\n         </div>\r\n             \r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from './Routes'\nimport './css/styles.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\n\nReactDOM.render(  <Routes   />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}